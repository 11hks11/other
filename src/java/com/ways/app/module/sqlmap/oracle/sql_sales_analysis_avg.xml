<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="avgPriceSalesAnalysis">

<resultMap class="com.ways.app.module.entity.PriceSegmentOverview" id="overview" groupBy="segment">
			 <result property="segment" column="segment" nullValue=""/> 
			 <result property="accBqSales" column="actrueBqSales" nullValue=""/> 
			 <result property="accTqSales" column="actrueTqSales" nullValue=""/> 
			 <result property="growthRate" column="yoy" nullValue=""/> 
			 <result property="bqmix" column="accBqTotalMix" nullValue=""/> 
			 <result property="mixChange" column="mixChanges" nullValue=""/> 
			 <result property="totalBqAccSales" column="accbqsales" nullValue=""/> 
			 <result property="totalTqAccSales" column="acctqsales" nullValue=""/> 
			 <result property="totalGrowthRate" column="totalyoy" nullValue=""/> 
		    
	  		 <result property="list" resultMap="priceSalesAnalysis.dimensionData" /> 
	</resultMap>
	<resultMap class="com.ways.app.module.entity.DimensionDataEntity" id="dimensionData" groupBy="attributeId">
		<result property="attributeId" column="attributeId" nullValue=""/> 
		<result property="attributeName" column="attributeName" nullValue=""/> 
	  	<result property="list" resultMap="priceSalesAnalysis.attributeChangeData" />
	</resultMap>
	<resultMap class="com.ways.app.module.entity.AttributeChangeDataEntity" id="attributeChangeData">
		 <result property="sales" column="sales_attr" nullValue=""/> 
  		 <result property="salesChange" column="salesChange_attr" nullValue=""/>
  		 <result property="mix" column="mix_attr" nullValue=""/>
  		 <result property="mixChange" column="mixChange_attr" nullValue=""/>
  		 <result property="shares" column="shares_attr" nullValue=""/>
  		 <result property="sharesChange" column="sharesChange_attr" nullValue=""/>
  		 
  		 <!-- <result property="totalMix" column="totalMix_attr" nullValue=""/>
  		 <result property="totalMixChange" column="totalMixChange_attr" nullValue=""/> -->
  		 <result property="totalSales" column="totalSales_attr" nullValue=""/> 
  		 <result property="totalSalesChange" column="totalSalesChange_attr" nullValue=""/>
  		 <result property="totalShares" column="totalShares_attr" nullValue=""/> 
  		 <result property="totalSharesChange" column="totalSharesChanges" nullValue=""/> 
  		     
  		 <result property="allMix" column="allMix_attr" nullValue=""/>
  		 <result property="allMixchange" column="allMixchange_attr" nullValue=""/>
  		 <result property="allSales" column="allSales_attr" nullValue=""/> 
  		 <result property="allSalesChange" column="allSalesChange_attr" nullValue=""/>
  		 <result property="allTotalSales" column="accbqAllsales_attr" nullValue=""/> 
  		 <result property="allTotalSalesChange" column="totalAllyoy_attr" nullValue=""/>
  		 <!-- <result property="allShares" column="allShares_attr" nullValue=""/> 
  		 <result property="allSharesChange" column="allSharesChange_attr" nullValue=""/> -->
	</resultMap>
<!-- 价格段概览左边数据条件 -->	
<sql id="tableSql_all">
	<isNotEmpty property="bodyType">
		left join dm_body_type dbt
		on m.body_type_id = dbt.body_type_id
	</isNotEmpty>
	<isNotEmpty property="original">
		left join dm_original do
		on m.orig_id = do.original_id
	</isNotEmpty>
	<isNotEmpty property="pooAttribute">
		left join dm_poo_attribute dpa
		on m.POO_ATTRIBUTE_ID = dpa.POO_ATTRIBUTE_ID
	</isNotEmpty>
	<isEqual property="tabType" compareValue="t-7"><!-- 汽车类型时，是否豪华车 -->
		 left join dm_sub_grade_new sgnl
    		on t.sub_model_id = sgnl.sub_model_id
	</isEqual>
	<!-- <isNotEmpty property="subGradeIds_all">
		left join dm_sub_grade_new sgn
		on t.sub_model_id = sgn.sub_model_id
	</isNotEmpty> -->
	<isNotEmpty property="manfIds_all">
		left join dm_manf dm
		on m.manf_id = dm.manf_id
	</isNotEmpty>
	<isNotEmpty property="manfBrandIds_all">
		left join dm_manf_brand dmb
		on m.manf_brand_id = dmb.manf_brand_id
	</isNotEmpty>
	<isNotEmpty property="brandIds_all">
		left join dm_brand db
		on m.brand_id = db.brand_id
	</isNotEmpty>
</sql>	
<sql id="paramSql_all">
	<isNotEmpty property="bodyType">
		and dbt.body_type_id in ($bodyType$)
	</isNotEmpty>
	<isNotEmpty property="original">
		and do.original_id in ($original$)
	</isNotEmpty>
	<isNotEmpty property="pooAttribute">
		and dpa.POO_ATTRIBUTE_ID in ($pooAttribute$)
	</isNotEmpty>
	<isEqual property="tabType" compareValue="t-7"><!-- 汽车类型时，是否豪华车 -->
		 <isEqual property="tabLc" compareValue="1">
		 	and sgnl.levelflag = 3
   				and sgnl.sub_grade_name like '%Luxury%'
		 </isEqual>
		 <isNotEqual property="tabLc" compareValue="1">
		 	and sgnl.levelflag = 3
   				and sgnl.sub_grade_name not like '%Luxury%'
		 </isNotEqual>
	</isEqual>
	<isEqual property="cityType" compareValue="dist">
		and t.district_id in ($cityId$)
	</isEqual>
	<isEqual property="cityType" compareValue="prov">
		and t.province_id in ($cityId$)  
	</isEqual>
	<isEqual property="cityType" compareValue="city">
		and t.city_id in ($cityId$) 
	</isEqual>
	
	<!-- <isNotEmpty property="subGradeIds_all">
		and sgn.sub_grade_id in ($subGradeIds_all$)
	</isNotEmpty> -->
	
	<isNotEmpty property="manfIds_all">
		and dm.manf_id in ($manfIds_all$)
	</isNotEmpty>
	<isNotEmpty property="manfBrandIds_all">
		and dmb.manf_brand_id in ($manfBrandIds_all$)
	</isNotEmpty>
	<isNotEmpty property="brandIds_all">
		and db.brand_id in ($brandIds_all$)
	</isNotEmpty>

	<isNotEmpty property="subModelIds_all">
		and t.sub_model_id in ($subModelIds_all$)
	</isNotEmpty>
</sql>	

<!-- 系别、汽车类型、产地属性价格段概览左边数据条件(比价格段概览的多了细分市场的判断，因为价格段概览不是直接取传过来的细分id，而是第四级的id，故不需要取细分id) -->	
<sql id="tableSql_all_1">
	<isNotEmpty property="bodyType">
		left join dm_body_type dbt
		on m.body_type_id = dbt.body_type_id
	</isNotEmpty>
	<isNotEmpty property="original">
		left join dm_original do
		on m.orig_id = do.original_id
	</isNotEmpty>
	<isNotEmpty property="pooAttribute">
		left join dm_poo_attribute dpa
		on m.POO_ATTRIBUTE_ID = dpa.POO_ATTRIBUTE_ID
	</isNotEmpty>
	<isEqual property="tabType" compareValue="t-7"><!-- 汽车类型时，是否豪华车 -->
		 left join dm_sub_grade_new sgnl
    		on t.sub_model_id = sgnl.sub_model_id
	</isEqual>
	<isNotEmpty property="subGradeIds_all">
		left join dm_sub_grade_new sgn
		on t.sub_model_id = sgn.sub_model_id
	</isNotEmpty>
	<isNotEmpty property="manfIds_all">
		left join dm_manf dm
		on m.manf_id = dm.manf_id
	</isNotEmpty>
	<isNotEmpty property="manfBrandIds_all">
		left join dm_manf_brand dmb
		on m.manf_brand_id = dmb.manf_brand_id
	</isNotEmpty>
	<isNotEmpty property="brandIds_all">
		left join dm_brand db
		on m.brand_id = db.brand_id
	</isNotEmpty>
</sql>	
<sql id="paramSql_all_1">
	<isNotEmpty property="bodyType">
		and dbt.body_type_id in ($bodyType$)
	</isNotEmpty>
	<isNotEmpty property="original">
		and do.original_id in ($original$)
	</isNotEmpty>
	<isNotEmpty property="pooAttribute">
		and dpa.POO_ATTRIBUTE_ID in ($pooAttribute$)
	</isNotEmpty>
	<isEqual property="tabType" compareValue="t-7"><!-- 汽车类型时，是否豪华车 -->
		 <isEqual property="tabLc" compareValue="1">
		 	and sgnl.levelflag = 3
   				and sgnl.sub_grade_name like '%Luxury%'
		 </isEqual>
		 <isNotEqual property="tabLc" compareValue="1">
		 	and sgnl.levelflag = 3
   				and sgnl.sub_grade_name not like '%Luxury%'
		 </isNotEqual>
	</isEqual>
	<isEqual property="cityType" compareValue="dist">
		and t.district_id in ($cityId$)
	</isEqual>
	<isEqual property="cityType" compareValue="prov">
		and t.province_id in ($cityId$)  
	</isEqual>
	<isEqual property="cityType" compareValue="city">
		and t.city_id in ($cityId$) 
	</isEqual>
	
	<isNotEmpty property="subGradeIds_all">
		and sgn.sub_grade_id in ($subGradeIds_all$)
	</isNotEmpty>
	
	<isNotEmpty property="manfIds_all">
		and dm.manf_id in ($manfIds_all$)
	</isNotEmpty>
	<isNotEmpty property="manfBrandIds_all">
		and dmb.manf_brand_id in ($manfBrandIds_all$)
	</isNotEmpty>
	<isNotEmpty property="brandIds_all">
		and db.brand_id in ($brandIds_all$)
	</isNotEmpty>

	<isNotEmpty property="subModelIds_all">
		and t.sub_model_id in ($subModelIds_all$)
	</isNotEmpty>
</sql>	

<!-- 各属性数据条件 -->	
<sql id="tableSql">
	<isNotEmpty property="bodyType">
		left join dm_body_type dbt
		on m.body_type_id = dbt.body_type_id
	</isNotEmpty>
	<isNotEmpty property="original">
		left join dm_original do
		on m.orig_id = do.original_id
	</isNotEmpty>
	<isNotEmpty property="pooAttribute">
		left join dm_poo_attribute dpa
		on m.POO_ATTRIBUTE_ID = dpa.POO_ATTRIBUTE_ID
	</isNotEmpty>
	<isEqual property="tabType" compareValue="t-7"><!-- 汽车类型时，是否豪华车 -->
		 left join dm_sub_grade_new sgnl
    		on t.sub_model_id = sgnl.sub_model_id
	</isEqual>
	
	<isNotEqual property="tabType" compareValue="t-6"><!-- 型号无需做细分市场过滤 -->
		<isNotEmpty property="subGradeIds">
			left join dm_sub_grade_new sgn
			on t.sub_model_id = sgn.sub_model_id
		</isNotEmpty>
	</isNotEqual>
	<isNotEmpty property="manfIds">
		left join dm_manf dm
		on m.manf_id = dm.manf_id
	</isNotEmpty>
	<isNotEmpty property="manfBrandIds">
		left join dm_manf_brand dmb
		on m.manf_brand_id = dmb.manf_brand_id
	</isNotEmpty>
	<isNotEmpty property="brandIds">
		left join dm_brand db
		on m.brand_id = db.brand_id
	</isNotEmpty>
</sql>	
<sql id="paramSql">
	<isNotEmpty property="bodyType">
		and dbt.body_type_id in ($bodyType$)
	</isNotEmpty>
	<isNotEmpty property="original">
		and do.original_id in ($original$)
	</isNotEmpty>
	<isNotEmpty property="pooAttribute">
		and dpa.POO_ATTRIBUTE_ID in ($pooAttribute$)
	</isNotEmpty>
	<isEqual property="tabType" compareValue="t-7"><!-- 汽车类型时，是否豪华车 -->
		 <isEqual property="tabLc" compareValue="1">
		 	and sgnl.levelflag = 3
   				and sgnl.sub_grade_name like '%Luxury%'
		 </isEqual>
		 <isNotEqual property="tabLc" compareValue="1">
		 	and sgnl.levelflag = 3
   				and sgnl.sub_grade_name not like '%Luxury%'
		 </isNotEqual>
	</isEqual>
	<isEqual property="cityType" compareValue="dist">
		and t.district_id in ($cityId$)
	</isEqual>
	<isEqual property="cityType" compareValue="prov">
		and t.province_id in ($cityId$)  
	</isEqual>
	<isEqual property="cityType" compareValue="city">
		and t.city_id in ($cityId$) 
	</isEqual>
	<isNotEqual property="tabType" compareValue="t-6">
		<isNotEmpty property="subGradeIds">
			<!-- and sgn.sub_grade_id in ($subGradeIds$) -->
			and sgn.sub_grade_id in (select distinct sub_grade_id from t3)
		</isNotEmpty>
	</isNotEqual>
	<isNotEmpty property="manfIds">
		and dm.manf_id in ($manfIds$)
	</isNotEmpty>
	<isNotEmpty property="manfBrandIds">
		and dmb.manf_brand_id in ($manfBrandIds$)
	</isNotEmpty>
	<isNotEmpty property="brandIds">
		and db.brand_id in ($brandIds$)
	</isNotEmpty>
	<!-- <isNotEmpty property="modelIds">
		and t.sub_model_id in ($modelIds$)
	</isNotEmpty> -->
	<isNotEmpty property="subModelIds">
		and t.sub_model_id in ($subModelIds$)
	</isNotEmpty>
	<!-- 城市层级查询的时候过滤掉4、5线城市 -->
	<isEqual property="tabType" compareValue="4">
	  	and o.citygrade_id in (1,2,3)
	</isEqual>
</sql>	
<!-- 不同地区条件，不同的表 -->
<sql id="mixTableSql">
		<isEqual property="cityType" compareValue="state">
			FDM_VERSION_INSURANCE_MIX_SP
		</isEqual>
		<isEqual property="cityType" compareValue="dist">
			fdm_version_insurance_mix_dist 
		</isEqual>
		<isEqual property="cityType" compareValue="prov">
			fdm_version_insurance_mix_prov 
		</isEqual>
		<isEqual property="cityType" compareValue="city">
			FDM_VERSION_INSURANCE_MIX_city 
		</isEqual>
	</sql>
	
	<sql id="actrueSalesTables">
		<isEqual property="cityType" compareValue="state">
			fdm_state_insurance 
		</isEqual>
		<isEqual property="cityType" compareValue="dist">
			fdm_dist_insurance 
		</isEqual>
		<isEqual property="cityType" compareValue="prov">
			fdm_prov_insurance 
		</isEqual>
		<isEqual property="cityType" compareValue="city">
			fdm_city_insurance 
		</isEqual>
	</sql>
	
<!-- state表销量字段为bq_sales，dist、prov、city表销量字段为bq_reg_qty -->
<sql id="salesElement">
	<isEqual property="cityType" compareValue="state">
		t.bq_sales 
	</isEqual>
	<isNotEqual property="cityType" compareValue="state">
		t.bq_reg_qty 
	</isNotEqual>
</sql>

<resultMap class="com.ways.app.module.entity.PriceSegmentOverview" id="overview_1" groupBy="segment">
	 <result property="segment" column="segment" nullValue=""/> 
	 <result property="accBqSales" column="actrueBqSales" nullValue=""/> 
	 <result property="accTqSales" column="actrueTqSales" nullValue=""/> 
	 <result property="growthRate" column="yoy" nullValue=""/> 
	 <result property="bqmix" column="accBqTotalMix" nullValue=""/> 
	 <result property="tqmix" column="accTqTotalMix" nullValue=""/> 
	 <result property="mixChange" column="mixChanges" nullValue=""/> 
	 <result property="totalBqAccSales" column="accbqsales" nullValue=""/> 
	 <result property="totalTqAccSales" column="acctqsales" nullValue=""/> 
	 <result property="totalGrowthRate" column="totalyoy" nullValue=""/> 
    
</resultMap>

<!-- 价格段概览 -->	
<select id="getSalesAnalysis" parameterClass="java.util.HashMap" resultMap="overview_1">
	with left_table as
 (
 	$leftSegmentSql$
 ),
 <!-- 查询所选细分市场下面第四级市场 -->
t1 as
 (select distinct  sub_grade_id ,connect_by_root p_sub_grade_id p_sub_grade_id
  from dm_sub_grade_new 
  where levelflag = 3
  connect by prior sub_grade_id = p_sub_grade_id 
  <isNotEmpty property="subGradeIds_all">
	 start with p_sub_grade_id in ($subGradeIds_all$)
  </isNotEmpty>
  <isEmpty property="subGradeIds_all">
	 start with p_sub_grade_id in (
	 	select distinct sub_grade_id from dm_sub_grade_new where levelflag = 0
	 )
  </isEmpty>
 order by sub_grade_id),
t2 as
 (select distinct sub_grade_id, sub_grade_name
    from dm_sub_grade_new
   where 
   <isNotEmpty property="subGradeIds_all">
	 sub_grade_id in ($subGradeIds_all$)
  </isNotEmpty>
  <isEmpty property="subGradeIds_all">
	 sub_grade_id in (
	 	select distinct sub_grade_id from dm_sub_grade_new where levelflag = 0
	 )
  </isEmpty>
   ),
t3 as (select t2.sub_grade_id p_sub_grade_id,
       t2.sub_grade_name,
       case
         when t1.sub_grade_id is not null then
          t1.sub_grade_id
         else
          t2.sub_grade_id
       end sub_grade_id
  from t2
  left join t1
    on t2.sub_grade_id = t1.p_sub_grade_id),
bqtotalsales as
 (select sum(t.bq_sales) / $monthNum$ accBqTotalSales, g.sub_grade_id
    from <include refid="mixTableSql" /> t
    left join dm_sub_model m
    on t.sub_model_id = m.sub_model_id
    left join dm_sub_grade_new g
      on t.sub_model_id = g.sub_model_id
    <include refid="tableSql_all"/>
   where 
   t.ym between $startYm$ and $endYm$
   <include refid="paramSql_all"/>
   and g.sub_grade_id in (select sub_grade_id from t3)
   group by g.sub_grade_id
   ),
   	
tqtotalsales as
 (select sum(t.bq_sales) / $avgMonthNum$ accTqTotalSales, g.sub_grade_id
    from <include refid="mixTableSql" /> t
    left join dm_sub_model m
    on t.sub_model_id = m.sub_model_id
     left join dm_sub_grade_new g
      on t.sub_model_id = g.sub_model_id
    <include refid="tableSql_all"/>
   where 
   t.ym between $startLastYm$ and $endLastYm$
   <include refid="paramSql_all"/>
   and g.sub_grade_id in (select sub_grade_id from t3)
   group by g.sub_grade_id
  ),
totalSales as
 (select b.accBqTotalSales, t.accTqTotalSales,
 		case
           when b.sub_grade_id is not null then
            b.sub_grade_id
           else
            t.sub_grade_id
            end sub_grade_id
    from bqtotalsales b
    full join tqtotalsales t
      on b.sub_grade_id = t.sub_grade_id),
accbqRegionSaledata as
 (select 
 	$priceSegmentSql$
	 fsort,
     sum(t.bq_sales) / $monthNum$ accRegionBqSales,
     g.sub_grade_id
    from <include refid="mixTableSql" /> t
    left join dm_sub_model m
    on t.sub_model_id = m.sub_model_id
    <include refid="tableSql_all"/>
    left join dm_version v
      on t.version_id = v.version_id
      left join dm_sub_grade_new g
      on t.sub_model_id = g.sub_model_id
   where 
   t.ym between $startYm$ and $endYm$
   <include refid="paramSql_all"/>
   and g.sub_grade_id in (select sub_grade_id from t3)
     <!-- and t.bq_sales is not null -->
   group by 
	$priceSegmentSql$
	, g.sub_grade_id
   order by fsort),
bqRegionMixdata as
 (select a.fsort,
         a.accRegionBqSales,
         a.sub_grade_id,
         case
           when b.accBqTotalSales is not null and b.accBqTotalSales !=0 then
            a.accRegionBqSales / b.accBqTotalSales
           else
            null
         end accBqTotalMix
    from accbqRegionSaledata a
    left join totalSales b
      on a.sub_grade_id = b.sub_grade_id),
acctqRegionSaledata as
 (select 
 	$priceSegmentSql$
  	fsort,
    sum(t.bq_sales) / $avgMonthNum$ accRegionTqSales
    ,g.sub_grade_id
    from <include refid="mixTableSql" /> t
    left join dm_sub_model m
    on t.sub_model_id = m.sub_model_id
    <include refid="tableSql_all"/>
    left join dm_version v
      on t.version_id = v.version_id
    left join dm_sub_grade_new g
      on t.sub_model_id = g.sub_model_id
   where 
   t.ym between $startLastYm$ and $endLastYm$
   <include refid="paramSql_all"/>
   and g.sub_grade_id in (select sub_grade_id from t3)
     <!-- and t.bq_sales is not null -->
   group by 
   $priceSegmentSql$
   ,g.sub_grade_id
   order by fsort),
tqRegionMixdata as
 (select a.fsort,
         a.accRegionTqSales,
         a.sub_grade_id,
         case
           when b.accTqTotalSales is not null and b.accTqTotalSales !=0 then
            a.accRegionTqSales / b.accTqTotalSales
           else
            null
         end accTqTotalMix
    from acctqRegionSaledata a
    left join totalSales b
      on a.sub_grade_id = b.sub_grade_id),
regionMixdata as
 (select  case when  a.fsort is null then
           b.fsort else a.fsort end fsort,
         a.accRegionBqSales,
         case
           when a.sub_grade_id is null then
            b.sub_grade_id
           else
            a.sub_grade_id
         end sub_grade_id,
         a.accBqTotalMix,
         b.accRegionTqSales,
         b.accTqTotalMix
    from bqRegionMixdata a
    full join tqRegionMixdata b
      on a.fsort = b.fsort
     and a.sub_grade_id = b.sub_grade_id),
left_grade_table as
 (select l.fsort,
         l.segment,
         b.accBqTotalMix,
         b.accTqTotalMix,
         b.sub_grade_id
    from left_table l
    left join regionMixdata b
      on l.fsort = b.fsort
   order by l.fsort),
accbqactrueGradeSales as
 (select sum(<include refid="salesElement"/>) / $monthNum$  accbqsales, g.sub_grade_id
    from <include refid="actrueSalesTables" /> t
    left join dm_sub_model m
    on t.sub_model_id = m.sub_model_id
    left join dm_sub_grade_new g
      on t.sub_model_id = g.sub_model_id
    <include refid="tableSql_all"/>
   where t.year || lpad(t.month_id, 2, 0) between $startYm$ and $endYm$
   <include refid="paramSql_all"/>
   and g.sub_grade_id in (select sub_grade_id from t3)
   group by g.sub_grade_id
  ),
acctqactrueGradeSales as
 (	select 
    sum(<include refid="salesElement"/>) / $avgMonthNum$  acctqsales, g.sub_grade_id
    from <include refid="actrueSalesTables" /> t
    left join dm_sub_model m
    on t.sub_model_id = m.sub_model_id
    left join dm_sub_grade_new g
      on t.sub_model_id = g.sub_model_id
     <include refid="tableSql_all"/>
   where (t.year || lpad(t.month_id, 2, 0) between $startLastYm$ and $endLastYm$)
    <include refid="paramSql_all"/>
   and g.sub_grade_id in (select sub_grade_id from t3)
   group by g.sub_grade_id
  ),
accactrueGradeSales as
 (select a.accbqsales,
         b.acctqsales,
         case
           when a.sub_grade_id is not null then
            a.sub_grade_id
           else
            b.sub_grade_id
         end sub_grade_id
    from accbqactrueGradeSales a
    full join acctqactrueGradeSales b
      on a.sub_grade_id = b.sub_grade_id),
actrueRegionSales as
 (select l.fsort,
         l.segment,
         l.accBqTotalMix * t.accbqsales actrueBqSales,
         l.accTqTotalMix * t.acctqsales actrueTqSales,
         l.sub_grade_id
    from left_grade_table l
    left join accactrueGradeSales t
      on l.sub_grade_id = t.sub_grade_id),
left_actrue_sales as
 (select fsort,
         segment,
         sum(actrueBqSales) actrueBqSales,
         sum(actrueTqSales) actrueTqSales
    from actrueRegionSales
   group by fsort, segment),
accbqactrueTotalSales as
 (select sum(<include refid="salesElement"/>) / $monthNum$  accbqsales
    from <include refid="actrueSalesTables" /> t
    left join dm_sub_model m
      on t.sub_model_id = m.sub_model_id
    left join dm_sub_grade_new g
      on t.sub_model_id = g.sub_model_id
    <include refid="tableSql_all"/>
   where t.year || lpad(t.month_id, 2, 0) between $startYm$ and $endYm$
   <include refid="paramSql_all"/>
   and g.sub_grade_id in (select sub_grade_id from t3)
  ),
acctqactrueTotalSales as
 (	select 
    sum(<include refid="salesElement"/>) / $avgMonthNum$  acctqsales
    from <include refid="actrueSalesTables" /> t
    left join dm_sub_model m
      on t.sub_model_id = m.sub_model_id
    left join dm_sub_grade_new g
      on t.sub_model_id = g.sub_model_id
     <include refid="tableSql_all"/>
   where (t.year || lpad(t.month_id, 2, 0) between $startLastYm$ and $endLastYm$)
    <include refid="paramSql_all"/>
    and g.sub_grade_id in (select sub_grade_id from t3)
  ),
accactrueTotalSales as
 (select a.accbqsales, b.acctqsales
    from accbqactrueTotalSales a
    left join acctqactrueTotalSales b
      on 1 = 1),
lastestData as (
	select l.fsort,
         l.segment,
         l.actrueBqSales,
         l.actrueTqSales,
         case
           when b.accbqsales is not null and b.accbqsales !=0 then
            l.actrueBqSales / b.accbqsales
           else
            null
         end accBqTotalMix,
         case
           when b.acctqsales is not null and b.acctqsales !=0 then
            l.actrueTqSales / b.acctqsales
           else
            null
         end accTqTotalMix,
         b.accbqsales,
         b.acctqsales,
         case
           when l.actrueTqSales is not null and l.actrueTqSales !=0 then
            (l.actrueBqSales - l.actrueTqSales) / l.actrueTqSales
           else
            null
         end yoy,
         case
           when b.acctqsales is not null and b.acctqsales !=0 then
            (b.accbqsales - b.acctqsales) / b.acctqsales
           else
            null
         end totalyoy,
         
          case when nvl(l.actrueBqSales / b.accbqsales,0)=0 and nvl(l.actrueTqSales / b.acctqsales,0)!=0
            then 0 - l.actrueTqSales / b.acctqsales 
         when  nvl(l.actrueBqSales / b.accbqsales,0)!=0 and nvl(l.actrueTqSales / b.acctqsales,0)=0
            then l.actrueBqSales / b.accbqsales
         when  nvl(l.actrueBqSales / b.accbqsales,0)!=0 and nvl(l.actrueTqSales / b.acctqsales,0)!=0
            then l.actrueBqSales / b.accbqsales - l.actrueTqSales / b.acctqsales 
           else null end  mixChanges
         <!-- case when b.accbqsales is not null and b.accbqsales !=0
         	and b.acctqsales is not null and b.acctqsales !=0 then 
         l.actrueBqSales / b.accbqsales - l.actrueTqSales / b.acctqsales 
         	when (b.accbqsales is not null and b.accbqsales !=0)
         		and (b.acctqsales is null or b.acctqsales =0) then 
         		l.actrueBqSales / b.accbqsales
         	when (b.accbqsales is null or b.accbqsales =0)
         	and (b.acctqsales is not null and b.acctqsales !=0) then
         		0 - l.actrueTqSales / b.acctqsales 
         else null end mixChanges -->
    from left_actrue_sales l
    left join accactrueTotalSales b
      on 1 = 1
   order by l.fsort
)  
select fsort,
	   segment,
	   case
         when accBqTotalMix is not null then
          to_char(accBqTotalMix*100,'fm99999999990.0')
         else
          '-'
       end accBqTotalMix,
       case
         when accTqTotalMix is not null then
          to_char(accTqTotalMix*100,'fm99999999990.0')
         else
          '-'
       end accTqTotalMix,
       case
         when actrueBqSales is not null then
          to_char(actrueBqSales,'fm99999999990')
         else
          '-'
       end actrueBqSales,
       case
         when actrueTqSales is not null then
          to_char(actrueTqSales,'fm99999999990')
         else
          '-'
       end actrueTqSales,
       case
         when accbqsales is not null then
          to_char(accbqsales,'fm99999999990')
         else
          '-'
       end accbqsales,
       case
         when acctqsales is not null then
          to_char(acctqsales,'fm99999999990')
         else
          '-'
       end acctqsales,
       case
         when yoy is not null then
          to_char(yoy*100,'fm99999999990.0')
         else
          '-'
       end yoy,
       case
         when totalyoy is not null then
          to_char(totalyoy*100,'fm99999999990.0')
         else
          '-'
       end totalyoy,
       case
         when mixChanges is not null then
          to_char(mixChanges*100,'fm99999999990.0')
         else
          '-'
       end mixChanges
       from lastestData
</select>
<!-- 累计总数据sql -->
<sql id="accTotalSql">
t1 as
 (select distinct  sub_grade_id ,connect_by_root p_sub_grade_id p_sub_grade_id
  from dm_sub_grade_new 
  where levelflag = 3
  connect by prior sub_grade_id = p_sub_grade_id 
  <isNotEmpty property="subGradeIds_all">
	 start with p_sub_grade_id in ($subGradeIds_all$)
  </isNotEmpty>
  <isEmpty property="subGradeIds_all">
	 start with p_sub_grade_id in (
	 	select distinct sub_grade_id from dm_sub_grade_new where levelflag = 0
	 )
  </isEmpty>
 
 order by sub_grade_id),
t2 as
 (select distinct sub_grade_id, sub_grade_name
    from dm_sub_grade_new
   where 
   <isNotEmpty property="subGradeIds_all">
	 sub_grade_id in ($subGradeIds_all$)
  </isNotEmpty>
  <isEmpty property="subGradeIds_all">
	 sub_grade_id in (
	 	select distinct sub_grade_id from dm_sub_grade_new where levelflag = 0
	 )
  </isEmpty>
   ),
t3 as (select t2.sub_grade_id p_sub_grade_id,
       t2.sub_grade_name,
       case
         when t1.sub_grade_id is not null then
          t1.sub_grade_id
         else
          t2.sub_grade_id
       end sub_grade_id
  from t2
  left join t1
    on t2.sub_grade_id = t1.p_sub_grade_id),
<!-- left_table3 as
 (select l.segment, l.fsort,t.sub_grade_id,t.sub_grade_name,t.p_sub_grade_id
    from left_table l
    left join t3 t
      on  1=1
   ), -->
bqtotalsales as
 (select sum(t.bq_sales) / $monthNum$ accBqTotalSales, g.sub_grade_id
    from <include refid="mixTableSql" /> t
    left join dm_sub_model m
    on t.sub_model_id = m.sub_model_id
    <include refid="tableSql_all"/>
    left join dm_sub_grade_new g
      on t.sub_model_id = g.sub_model_id
   where t.ym between $startYm$ and $endYm$
   	<include refid="paramSql_all"/>
   	and g.sub_grade_id in (select sub_grade_id from t3)
   group by g.sub_grade_id
   ),
tqtotalsales as
 (select sum(t.bq_sales) / $avgMonthNum$ accTqTotalSales, g.sub_grade_id
    from <include refid="mixTableSql" /> t
    left join dm_sub_model m
    on t.sub_model_id = m.sub_model_id
    left join dm_sub_grade_new g
      on t.sub_model_id = g.sub_model_id
    <include refid="tableSql_all"/>
   where 
   t.ym between $startLastYm$ and $endLastYm$
   <include refid="paramSql_all"/>
   and g.sub_grade_id in (select sub_grade_id from t3)
   group by g.sub_grade_id
  ),
totalSales as
 (select b.accBqTotalSales, t.accTqTotalSales
 		,case
           when b.sub_grade_id is not null then
            b.sub_grade_id
           else
            t.sub_grade_id
         end sub_grade_id
    from bqtotalsales b
    full join tqtotalsales t
      on b.sub_grade_id = t.sub_grade_id),
accbqRegionSaledata as
 (select 
 	$priceSegmentSql$
	 fsort,
     sum(t.bq_sales) / $monthNum$ accRegionBqSales
     , g.sub_grade_id
    from <include refid="mixTableSql" /> t
    left join dm_sub_model m
    on t.sub_model_id = m.sub_model_id
    <include refid="tableSql_all"/>
    left join dm_version v
      on t.version_id = v.version_id
    left join dm_sub_grade_new g
      on t.sub_model_id = g.sub_model_id  
   where t.ym between $startYm$ and $endYm$
   <include refid="paramSql_all"/>
     <!-- and t.bq_sales is not null -->
     and g.sub_grade_id in (select sub_grade_id from t3)
   group by 
	$priceSegmentSql$
	,g.sub_grade_id
   order by fsort),
bqRegionMixdata as
 (select a.fsort,
         a.accRegionBqSales,
         a.sub_grade_id,
         case
           when b.accBqTotalSales is not null and b.accBqTotalSales !=0 then
            a.accRegionBqSales / b.accBqTotalSales
           else
            null
         end accBqTotalMix
    from accbqRegionSaledata a
    left join totalSales b
      on a.sub_grade_id = b.sub_grade_id),   
acctqRegionSaledata as
 (select 
 	$priceSegmentSql$
  	fsort,
    sum(t.bq_sales) / $avgMonthNum$ accRegionTqSales
    , g.sub_grade_id
    from <include refid="mixTableSql" /> t
    left join dm_sub_model m
    on t.sub_model_id = m.sub_model_id
    <include refid="tableSql_all"/>
    left join dm_version v
      on t.version_id = v.version_id
    left join dm_sub_grade_new g
      on t.sub_model_id = g.sub_model_id    
   where t.ym between $startLastYm$ and $endLastYm$
   <include refid="paramSql_all"/>
     <!-- and t.bq_sales is not null -->
     and g.sub_grade_id in (select sub_grade_id from t3)
   group by 
   $priceSegmentSql$
   ,g.sub_grade_id
   order by fsort),
tqRegionMixdata as
 (select a.fsort,
         a.accRegionTqSales,
         a.sub_grade_id,
         case
           when b.accTqTotalSales is not null and b.accTqTotalSales !=0 then
            a.accRegionTqSales / b.accTqTotalSales
           else
            null
         end accTqTotalMix
    from acctqRegionSaledata a
    left join totalSales b
      on a.sub_grade_id = b.sub_grade_id),
regionMixdata as
 (select  case when  a.fsort is null then
           b.fsort else a.fsort end fsort,
         a.accRegionBqSales,
         case
           when a.sub_grade_id is null then
            b.sub_grade_id
           else
            a.sub_grade_id
         end sub_grade_id,
         a.accBqTotalMix,
         b.accRegionTqSales,
         b.accTqTotalMix
    from bqRegionMixdata a
    full join tqRegionMixdata b
      on a.fsort = b.fsort
     and a.sub_grade_id = b.sub_grade_id),
left_grade_table as
 (select l.fsort,
         l.segment,
         l.sort_num,
         <!-- l.p_sub_grade_id, -->
         $attributeSql$
         b.accBqTotalMix,
         b.accTqTotalMix
         ,b.sub_grade_id
    from left_table2 l
    left join regionMixdata b
      on l.fsort = b.fsort
   order by l.fsort),
accbqactrueGradeSales as
 (select sum(<include refid="salesElement"/>) / $monthNum$ accbqsales, g.sub_grade_id
    from <include refid="actrueSalesTables" /> t
    left join dm_sub_model m
      on t.sub_model_id = m.sub_model_id
    left join dm_sub_grade_new g
      on t.sub_model_id = g.sub_model_id
    <include refid="tableSql_all"/>  
   where t.year || lpad(t.month_id, 2, 0) between $startYm$ and $endYm$
   <include refid="paramSql_all"/>
     and g.sub_grade_id in (select sub_grade_id from t3)
   group by g.sub_grade_id),
acctqactrueGradeSales as
 (select sum(<include refid="salesElement"/>) / $avgMonthNum$ acctqsales, g.sub_grade_id
    from <include refid="actrueSalesTables" /> t
    left join dm_sub_model m
      on t.sub_model_id = m.sub_model_id
    left join dm_sub_grade_new g
      on t.sub_model_id = g.sub_model_id
    <include refid="tableSql_all"/>  
   where (t.year || lpad(t.month_id, 2, 0) between $startLastYm$ and $endLastYm$)
   <include refid="paramSql_all"/>
     and g.sub_grade_id in (select sub_grade_id from t3)
   group by g.sub_grade_id),
accactrueGradeSales as
 (select a.accbqsales,
         b.acctqsales,
         case
           when a.sub_grade_id is not null then
            a.sub_grade_id
           else
            b.sub_grade_id
         end sub_grade_id
    from accbqactrueGradeSales a
    full join acctqactrueGradeSales b
      on a.sub_grade_id = b.sub_grade_id),     
actrueRegionSales as
 (select l.fsort,
         l.segment,
         l.sort_num,
         $attributeSql$
         l.accBqTotalMix * t.accbqsales actrueBqSales,
         l.accTqTotalMix * t.acctqsales actrueTqSales
	     ,l.sub_grade_id
    from left_grade_table l
    left join accactrueGradeSales t
      on l.sub_grade_id = t.sub_grade_id),
left_actrue_sales as
 (select l.fsort,
         l.segment,
         l.sort_num,
         $attributeSql$
         sum(l.actrueBqSales) actrueBqSales,
         sum(l.actrueTqSales) actrueTqSales
    from actrueRegionSales l
   group by $attributeSql$ l.fsort, l.segment,l.sort_num
   ),                        
accbqactrueTotalSales as
 (select sum(<include refid="salesElement"/>) / $monthNum$  accbqsales
    from <include refid="actrueSalesTables" /> t
    left join dm_sub_model m
    on t.sub_model_id = m.sub_model_id
    left join dm_sub_grade_new g
      on t.sub_model_id = g.sub_model_id
    <include refid="tableSql_all"/>
   where t.year || lpad(t.month_id, 2, 0) between $startYm$ and $endYm$
   <include refid="paramSql_all"/>
  and g.sub_grade_id in (select sub_grade_id from t3)
  ),
acctqactrueTotalSales as
 (	select 
    sum(<include refid="salesElement"/>) / $avgMonthNum$  acctqsales
    from <include refid="actrueSalesTables" /> t
    left join dm_sub_model m
    on t.sub_model_id = m.sub_model_id
    left join dm_sub_grade_new g
      on t.sub_model_id = g.sub_model_id
     <include refid="tableSql_all"/>
   where (t.year || lpad(t.month_id, 2, 0) between $startLastYm$ and $endLastYm$)
    <include refid="paramSql_all"/>
  and g.sub_grade_id in (select sub_grade_id from t3)
  ),
accactrueTotalSales as (
      select * from accbqactrueTotalSales a  left join acctqactrueTotalSales b on 1=1
  ),
total_table as(
   select l.fsort,
         l.segment,
         l.sort_num,
         $attributeSql$
         l.actrueBqSales,
         l.actrueTqSales,
         case
           when b.accbqsales is not null then
            l.actrueBqSales / b.accbqsales
           else
            null
         end accBqTotalMix,
         case
           when b.acctqsales is not null then
            l.actrueTqSales / b.acctqsales
           else
            null
         end accTqTotalMix,
         b.accbqsales,
         b.acctqsales,
         case
           when l.actrueTqSales is not null then
            (l.actrueBqSales - l.actrueTqSales) / l.actrueTqSales
           else
            null
         end yoy,
         case
           when b.acctqsales is not null then
            (b.accbqsales - b.acctqsales) / b.acctqsales
           else
            null
         end totalyoy,
          case when nvl(l.actrueBqSales / b.accbqsales,0)=0 and nvl(l.actrueTqSales / b.acctqsales,0)!=0
            then 0 - l.actrueTqSales / b.acctqsales 
         when  nvl(l.actrueBqSales / b.accbqsales,0)!=0 and nvl(l.actrueTqSales / b.acctqsales,0)=0
            then l.actrueBqSales / b.accbqsales
         when  nvl(l.actrueBqSales / b.accbqsales,0)!=0 and nvl(l.actrueTqSales / b.acctqsales,0)!=0
            then l.actrueBqSales / b.accbqsales - l.actrueTqSales / b.acctqsales 
           else null end  mixChanges
         <!-- case when b.accbqsales is not null and b.accbqsales !=0
         	and b.acctqsales is not null and b.acctqsales !=0 then 
         l.actrueBqSales / b.accbqsales - l.actrueTqSales / b.acctqsales 
         	when (b.accbqsales is not null and b.accbqsales !=0)
         		and (b.acctqsales is null or b.acctqsales =0) then 
         		l.actrueBqSales / b.accbqsales
         	when (b.accbqsales is null or b.accbqsales =0)
         	and (b.acctqsales is not null and b.acctqsales !=0) then
         		0 - l.actrueTqSales / b.acctqsales 
         else null end mixChanges -->
    from left_actrue_sales l
    left join accactrueTotalSales b
      on 1 = 1
   order by l.fsort
),  
</sql>
<!-- 系别 -->	
<!-- <select id="getSalesAnalysis2" parameterClass="java.util.HashMap" resultMap="gradeData"> -->
<select id="getOriginalData" parameterClass="java.util.HashMap" resultMap="overview">
with left_table as
	(
		$leftSegmentSql$
	),
wholeFilter	as (
     select distinct o.original_id,o.original_name,o.sort_num from <include refid="mixTableSql"/> t    
      left join dm_sub_model m
      on t.sub_model_id = m.sub_model_id
      left join dm_original o
      on m.orig_id = o.original_id
      <include refid="tableSql_all_1"/>
      where t.ym between $startYm$ and $endYm$
      <include refid="paramSql_all_1"/>
      and o.original_id != 7 
),	
left_table2 as (
  select l.segment,l.fsort,o.original_id,o.original_name,o.sort_num
  	 from left_table l left join wholeFilter o
  on 1=1
),
<include refid="accTotalSql"/>
bqtotalsales_attr as
 (select sum(t.bq_sales) / $monthNum$ accBqTotalSales_attr,
 	o.original_id,o.original_name
    from <include refid="mixTableSql" /> t
    left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_original o 
    on m.orig_id = o.original_id
    <include refid="tableSql"/>
   where 
   t.ym between $startYm$ and $endYm$
   <include refid="paramSql"/>
   and o.original_id !=7
   group by o.original_id,o.original_name
   ), 
tqtotalsales_attr as
 (select sum(t.bq_sales) / $avgMonthNum$ accTqTotalSales_attr,o.original_id,o.original_name
    from <include refid="mixTableSql" /> t
   left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_original o 
    on m.orig_id = o.original_id
    <include refid="tableSql"/>
   where t.ym between $startLastYm$ and $endLastYm$
   and o.original_id !=7
   <include refid="paramSql"/>
  group by o.original_id,o.original_name
  ),       
totalSales_attr as
 (select b.accBqTotalSales_attr, t.accTqTotalSales_attr,
    case when b.original_id is not null then b.original_id else
    	t.original_id end original_id,
    case when b.original_name is not null then b.original_name else
    	t.original_name end original_name
    from bqtotalsales_attr b
    full join tqtotalsales_attr t
      on b.original_id = t.original_id),  
      
accbqRegionSaledata_attr as
 (select 
 	$priceSegmentSql$
  	fsort,
    sum(t.bq_sales) / $monthNum$ accRegionBqSales_attr,
    o.original_id
    from <include refid="mixTableSql" /> t
  left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_original o 
    on m.orig_id = o.original_id
    left join dm_version v
      on t.version_id = v.version_id
      <include refid="tableSql"/>
   where t.ym between $startYm$ and $endYm$
    <include refid="paramSql"/>
    and o.original_id != 7
   group by 
   		$priceSegmentSql$
        ,o.original_id
   order by fsort),
acctqRegionSaledata_attr as
 (select 
 		$priceSegmentSql$
 		 fsort,
         sum(t.bq_sales) / $avgMonthNum$ accRegionTqSales_attr,
         o.original_id
    from <include refid="mixTableSql" /> t
  left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_original o 
    on m.orig_id = o.original_id
    left join dm_version v
      on t.version_id = v.version_id
      <include refid="tableSql"/>
   where t.ym between $startLastYm$ and $endLastYm$
    <include refid="paramSql"/>
     and o.original_id != 7
   group by 
   		$priceSegmentSql$
        ,o.original_id
   order by fsort),
         
left_attr_table as (
	select l.fsort,
         l.segment,
         l.original_id,
         l.original_name,
         b.accRegionBqSales_attr / s.accBqTotalSales_attr accBqTotalMix_attr,
         c.accRegionTqSales_attr / s.accTqTotalSales_attr accTqTotalMix_attr
    from left_table2 l
    left join accbqRegionSaledata_attr b
      on l.fsort = b.fsort
     and l.original_id = b.original_id
    left join acctqRegionSaledata_attr c
      on l.fsort = c.fsort
     and l.original_id = c.original_id
      left join totalSales_attr s
      on l.original_id = s.original_id
   order by l.fsort
),      
accbqactrueTotalSales_attr as
 (select 
         sum(<include refid="salesElement"/>) / $monthNum$  accbqsales_attr,
         o.original_id
    from <include refid="actrueSalesTables" /> t
  left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_original o 
    on m.orig_id = o.original_id
    <include refid="tableSql"/>
   where t.year || lpad(t.month_id, 2, 0) between $startYm$ and $endYm$
   and o.original_id != 7
    <include refid="paramSql"/>
   group by o.original_id
  
  ),
acctqactrueTotalSales_attr as
 (select 
    sum(<include refid="salesElement"/>) / $avgMonthNum$  acctqsales_attr,
    o.original_id
    from <include refid="actrueSalesTables" /> t
   left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_original o 
    on m.orig_id = o.original_id
    <include refid="tableSql"/>
   where (t.year || lpad(t.month_id, 2, 0) between $startLastYm$ and $endLastYm$)
   and o.original_id != 7
    <include refid="paramSql"/>
   group by o.original_id
  
  )  ,
  accactrueTotalSales_attr as (
      select a.accbqsales_attr,a.original_id,b.acctqsales_attr from accbqactrueTotalSales_attr a  left join acctqactrueTotalSales_attr b on a.original_id = b.original_id
  ),

accbqactrueAllSales_attr as
 (select sum(<include refid="salesElement"/>) / $monthNum$ accbqAllsales_attr
    from <include refid="actrueSalesTables" /> t
    left join dm_sub_model m
      on t.sub_model_id = m.sub_model_id
    left join dm_original o
      on m.orig_id = o.original_id
      <include refid="tableSql"/>
   where t.year || lpad(t.month_id, 2, 0) between $startYm$ and $endYm$
   <include refid="paramSql"/>
   and o.original_id != 7
),
acctqactrueAllSales_attr as
 (select sum(<include refid="salesElement"/>) / $avgMonthNum$ acctqAllsales_attr
    from <include refid="actrueSalesTables" /> t
    left join dm_sub_model m
      on t.sub_model_id = m.sub_model_id
    left join dm_original o
      on m.orig_id = o.original_id
      <include refid="tableSql"/>
   where (t.year || lpad(t.month_id, 2, 0) between $startLastYm$ and $endLastYm$)
   <include refid="paramSql"/>
   and o.original_id != 7
   ),
accactrueAllSales_attr as
 (select a.accbqAllsales_attr, b.acctqAllsales_attr
    from accbqactrueAllSales_attr a
    left join acctqactrueAllSales_attr b
      on 1=1),     
<!-- 系别区间销量 -->
attr_region_sales as (
    select l.fsort,
         l.segment,
         l.original_id,
         l.original_name,
         l.accBqTotalMix_attr,
         l.accTqTotalMix_attr,
         l.accBqTotalMix_attr * a.accbqsales_attr actrueBqSales_attr,
         l.accTqTotalMix_attr * a.acctqsales_attr actrueTqSales_attr,    
         a.accbqsales_attr,
         a.acctqsales_attr     
         from left_attr_table l
    left join accactrueTotalSales_attr a
      on l.original_id = a.original_id
   order by l.fsort, l.original_id 
),
<!-- 最后一列区间total销量    -->
attr_region_totalsales as(
  select l.fsort,
         l.segment,
         sum(l.actrueBqSales_attr) actrueBqAllSales_attr,
         sum(l.actrueTqSales_attr) actrueTqAllSales_attr
         from attr_region_sales l 
         group by l.fsort,l.segment
),
<!-- 最后一列区间total销量  与mix  -->
attr_region_mix_sales as (
  select l.fsort,
         l.segment,
         l.actrueBqAllSales_attr,
         l.actrueTqAllSales_attr,
         case when b.accbqAllsales_attr is not null and b.accbqAllsales_attr !=0
           then l.actrueBqAllSales_attr / b.accbqAllsales_attr 
             else null end accBqAllMix_attr ,
         case when b.acctqAllsales_attr is not null and b.acctqAllsales_attr !=0
           then l.actrueTqAllSales_attr / b.acctqAllsales_attr 
             else null end accTqAllMix_attr,
         b.accbqAllsales_attr,
         b.acctqAllsales_attr          
         from attr_region_totalsales l
         left join accactrueAllSales_attr b
         on 1=1         
),  
attr_table as(
	select l.fsort,
         l.segment,
         l.original_id,
         l.original_name,
         l.accBqTotalMix_attr,
         l.accTqTotalMix_attr,
         l.actrueBqSales_attr,
         l.actrueTqSales_attr,   
         l.accbqsales_attr,
         l.acctqsales_attr,
         b.actrueBqAllSales_attr,
         b.actrueTqAllSales_attr,
         b.accBqAllMix_attr,
         b.accTqAllMix_attr,
         b.accbqAllsales_attr,
         b.acctqAllsales_attr,
         case when l.actrueTqSales_attr is not null and l.actrueTqSales_attr !=0
           then (l.actrueBqSales_attr -l.actrueTqSales_attr)/ l.actrueTqSales_attr
             else null end yoy_attr,
         case
           when l.acctqsales_attr is not null and l.acctqsales_attr != 0 then
            (l.accbqsales_attr - l.acctqsales_attr) / l.acctqsales_attr
           else
            null
         end totalyoy_attr,      
          case when nvl(l.accBqTotalMix_attr,0) = 0 and nvl(l.accTqTotalMix_attr,0) = 0 then null
         	else nvl(l.accBqTotalMix_attr,0) - nvl(l.accTqTotalMix_attr,0)
         	end  mixChanges_attr,
         case when b.actrueTqAllSales_attr is not null and b.actrueTqAllSales_attr != 0 
          then (b.actrueBqAllSales_attr - b.actrueTqAllSales_attr) / b.actrueTqAllSales_attr
            else null 
              end yoyAll_attr, 
         case
           when b.acctqAllsales_attr is not null and
                b.acctqAllsales_attr != 0 then
            (b.accbqAllsales_attr - b.acctqAllsales_attr) /
            b.acctqAllsales_attr
           else
            null
         end totalAllyoy_attr,     
         case when nvl(b.accBqAllMix_attr,0) =0 and nvl(b.accTqAllMix_attr,0)=0 then null
           else  nvl(b.accBqAllMix_attr,0) - nvl(b.accTqAllMix_attr,0) end mixAllChanges_attr
        from attr_region_sales l
        left join attr_region_mix_sales b
        on l.fsort = b.fsort  
),
lastestData as (
	select l.fsort,
	       l.segment,
	       l.accBqTotalMix,<!-- 本期总览区间mix -->
	       l.accTqTotalMix,<!-- 同期总览区间mix -->
	       l.actrueBqSales,<!-- 本期实际区间销量 -->
	       l.actrueTqSales,<!-- 同期实际区间销量 -->
	       l.accbqsales,<!-- 本期实际总销量 -->
	       l.acctqsales,<!-- 同期实际总销量 -->
	       l.yoy,<!-- 本期区间销量增速 -->
	       l.totalyoy,<!-- 本期销量总增速 -->
	       l.mixChanges,<!-- 本期区间mix变化（总变化一定为0，总mix一定为1） -->
	       t.original_id attributeId,<!-- 系别id -->
	       t.original_name attributeName,<!-- 系别名称 -->
	       t.accBqTotalMix_attr mix_attr,<!-- 本期系别区间mix -->
	       t.accTqTotalMix_attr,<!-- 同期系别区间mix -->
	       t.actrueBqSales_attr sales_attr,<!-- 本期系别区间实际总销量（放大后） -->
	       t.actrueTqSales_attr,<!-- 同期系别区间实际总销量（放大后） -->
	       t.accbqsales_attr totalSales_attr,<!-- 本期系别总销量 -->
	       t.acctqsales_attr,<!-- 同期系别总销量 -->
	       t.yoy_attr salesChange_attr,<!-- 系别区间销量增速 -->
	       t.totalyoy_attr totalSalesChange_attr,<!-- 系别总销量增速（最后一行的total） -->
	       t.mixChanges_attr mixChange_attr,<!-- 系别区间mix变化 -->
	       t.actrueBqSales_attr - t.actrueTqSales_attr salesChanges,<!-- 系别销量变化（没用到） -->
	       case
	         when l.actrueBqSales is not null and l.actrueBqSales != 0 then
	          <!-- t.actrueBqSales_attr / l.actrueBqSales -->
	          t.actrueBqSales_attr / t.actrueBqAllSales_attr
	         else
	          null
	       end shares_attr,<!-- 系别区间份额 -->
	       case
	         when t.actrueBqAllSales_attr is not null and t.actrueBqAllSales_attr != 0 and
	              t.actrueTqAllSales_attr is not null and t.actrueTqAllSales_attr != 0 then
	          t.actrueBqSales_attr / t.actrueBqAllSales_attr -
	          t.actrueTqSales_attr / t.actrueTqAllSales_attr
	         when (t.actrueBqAllSales_attr is null or t.actrueBqAllSales_attr = 0) and
	              t.actrueTqAllSales_attr is not null and t.actrueTqAllSales_attr != 0 then
	          0 - t.actrueTqSales_attr / t.actrueTqAllSales_attr
	         when (t.actrueBqAllSales_attr is not null and t.actrueBqAllSales_attr != 0) and
	              (t.actrueTqAllSales_attr is null or t.actrueTqAllSales_attr = 0) then
	          t.actrueBqSales_attr / t.actrueBqAllSales_attr
	         else
	          null
	       end sharesChange_attr,<!-- 系别区间份额变化 -->
	       
	       t.accBqAllMix_attr allMix_attr,<!-- 本期系别区间totalmix（列表最后一列total） -->
	       t.accTqAllMix_attr,<!-- 本期系别区间totalmix（列表最后一列total） -->
	       t.actrueBqAllSales_attr allSales_attr,<!-- 本期系别区间total总销量（最后一列） -->
	       t.actrueTqAllSales_attr,<!-- 同期系别区间total总销量 -->
	       
	       t.accbqAllsales_attr,<!-- 本期所有选择系别总销量（一定小于等于列表前面的累计销量） -->
	       t.acctqAllsales_attr,<!-- 同期所有选择系别总销量 -->
	       t.yoyAll_attr allSalesChange_attr,<!-- 所选系别总的区间销量增速 -->
	       t.totalAllyoy_attr,<!-- 所选系别总的销量增速（最后一行的total） -->
	       t.mixAllChanges_attr allMixchange_attr,<!-- 所选系别 区间totalmix变化（列表最后一列total）-->
	       t.actrueBqAllSales_attr - t.actrueTqAllSales_attr salesAllChanges,<!-- 所选系别总销量变化（没用到） -->
	       case
	         when l.actrueBqSales is not null and l.actrueBqSales != 0 then
	          t.actrueBqAllSales_attr / t.actrueBqAllSales_attr
	         else
	          null
	       end sharesAll,<!-- 所选系别区间总份额 （列表最后一列total）-->
	       0 totalSharesChange_attr,<!-- 所选系别区间总份额变化（列表最后一列total） -->
	       
	       case when t.accbqAllsales_attr is not null and t.accbqAllsales_attr !=0 then 
	       t.accbqsales_attr/t.accbqAllsales_attr
	       else null end totalShares_attr,<!-- 系别总的份额 （列表最后一行total）-->
	       case when t.accbqAllsales_attr is not null and t.accbqAllsales_attr !=0 
	       	   and t.acctqAllsales_attr is not null and t.acctqAllsales_attr !=0 then 
	       t.accbqsales_attr/t.accbqAllsales_attr  - t.acctqsales_attr/t.acctqAllsales_attr
	        when (t.accbqAllsales_attr is not null and t.accbqAllsales_attr !=0 )
	       	   and (t.acctqAllsales_attr is null or t.acctqAllsales_attr =0) then
	       	   t.accbqsales_attr/t.accbqAllsales_attr
	       	 when (t.accbqAllsales_attr is null or t.accbqAllsales_attr =0)
	       	   and (t.acctqAllsales_attr is not null and t.acctqAllsales_attr !=0) then
	       	   0 - t.acctqsales_attr/t.acctqAllsales_attr
	        else null end totalSharesChanges<!-- 系别总份额变化（列表最后一行total） -->
	  from total_table l
	  left join attr_table t
	    on l.fsort = t.fsort
	   and l.original_id = t.original_id
	 order by l.fsort, l.sort_num
)        
select fsort,
	       segment,
	       case
	         when accBqTotalMix is not null then
	          to_char(accBqTotalMix*100,'fm99999999990.0')
	         else
	          '-'
	       end accBqTotalMix,<!-- 本期总览区间mix -->
	       case
	         when accTqTotalMix is not null then
	          to_char(accTqTotalMix*100,'fm99999999990.0')
	         else
	          '-'
	       end accTqTotalMix,<!-- 同期总览区间mix -->
	       case
	         when actrueBqSales is not null then
	          to_char(actrueBqSales,'fm99999999990')
	         else
	          '-'
	       end actrueBqSales,<!-- 本期实际区间销量 -->
	       case
	         when actrueTqSales is not null then
	          to_char(actrueTqSales,'fm99999999990')
	         else
	          '-'
	       end actrueTqSales,<!-- 同期实际区间销量 -->
	       case
	         when accbqsales is not null then
	          to_char(accbqsales,'fm99999999990')
	         else
	          '-'
	       end accbqsales,<!-- 本期实际总销量 -->
	       case
	         when acctqsales is not null then
	          to_char(acctqsales,'fm99999999990')
	         else
	          '-'
	       end acctqsales,<!-- 同期实际总销量 -->
	       case
	         when yoy is not null then
	          to_char(yoy*100,'fm99999999990.0')
	         else
	          '-'
	       end yoy,<!-- 本期区间销量增速 -->
	       case
	         when totalyoy is not null then
	          to_char(totalyoy*100,'fm99999999990.0')
	         else
	          '-'
	       end totalyoy,<!-- 本期销量总增速 -->
	       case
	         when mixChanges is not null then
	          to_char(mixChanges*100,'fm99999999990.0')
	         else
	          '-'
	       end mixChanges,<!-- 本期区间mix变化（总变化一定为0，总mix一定为1） -->
	       attributeId,<!-- 系别id -->
	       attributeName,<!-- 系别名称 -->
	       case
	         when mix_attr is not null then
	          to_char(mix_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end mix_attr,<!-- 本期系别区间mix -->
	       case
	         when accTqTotalMix_attr is not null then
	          to_char(accTqTotalMix_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end accTqTotalMix_attr,<!-- 同期系别区间mix -->
	       case
	         when sales_attr is not null then
	          to_char(sales_attr,'fm99999999990')
	         else
	          '-'
	       end sales_attr,<!-- 本期系别区间实际总销量（放大后） -->
	       case
	         when actrueTqSales_attr is not null then
	          to_char(actrueTqSales_attr,'fm99999999990')
	         else
	          '-'
	       end actrueTqSales_attr,<!-- 同期系别区间实际总销量（放大后） -->
	       case
	         when totalSales_attr is not null then
	          to_char(totalSales_attr,'fm99999999990')
	         else
	          '-'
	       end totalSales_attr,<!-- 本期系别总销量 -->
	       case
	         when acctqsales_attr is not null then
	          to_char(acctqsales_attr,'fm99999999990')
	         else
	          '-'
	       end acctqsales_attr,<!-- 同期系别总销量 -->
	       case
	         when salesChange_attr is not null then
	          to_char(salesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end salesChange_attr,<!-- 系别区间销量增速 -->
	       case
	         when totalSalesChange_attr is not null then
	          to_char(totalSalesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end totalSalesChange_attr,<!-- 系别总销量增速（最后一行的total） -->
	       case
	         when mixChange_attr is not null then
	          to_char(mixChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end mixChange_attr,<!-- 系别区间mix变化 -->
	       case
	         when salesChanges is not null then
	          to_char(salesChanges,'fm99999999990')
	         else
	          '-'
	       end salesChanges,<!-- 系别销量变化（没用到） -->
	       case
	         when shares_attr is not null then
	          to_char(shares_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end shares_attr,<!-- 系别区间份额 -->
	       case
	         when sharesChange_attr is not null then
	          to_char(sharesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end sharesChange_attr,<!-- 系别区间份额变化 -->
	       case
	         when allMix_attr is not null then
	          to_char(allMix_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end allMix_attr,<!-- 本期系别区间totalmix（列表最后一列total） -->
	       case
	         when accTqAllMix_attr is not null then
	          to_char(accTqAllMix_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end accTqAllMix_attr,<!-- 本期系别区间totalmix（列表最后一列total） -->
	       case
	         when allSales_attr is not null then
	          to_char(allSales_attr,'fm99999999990')
	         else
	          '-'
	       end allSales_attr,<!-- 本期系别区间total总销量（最后一列） -->
	       case
	         when actrueTqAllSales_attr is not null then
	          to_char(actrueTqAllSales_attr,'fm99999999990')
	         else
	          '-'
	       end actrueTqAllSales_attr,<!-- 同期系别区间total总销量 -->
	       case
	         when accbqAllsales_attr is not null then
	          to_char(accbqAllsales_attr,'fm99999999990')
	         else
	          '-'
	       end accbqAllsales_attr,<!-- 本期所有选择系别总销量（一定小于等于列表前面的累计销量） -->
	       case
	         when acctqAllsales_attr is not null then
	          to_char(acctqAllsales_attr,'fm99999999990')
	         else
	          '-'
	       end acctqAllsales_attr,<!-- 同期所有选择系别总销量 -->
	       case
	         when allSalesChange_attr is not null then
	          to_char(allSalesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end allSalesChange_attr,<!-- 所选系别总的区间销量增速 -->
	       case
	         when totalAllyoy_attr is not null then
	          to_char(totalAllyoy_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end totalAllyoy_attr,<!-- 所选系别总的销量增速（最后一行、最后一列的total） -->
	       case
	         when allMixchange_attr is not null then
	          to_char(allMixchange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end allMixchange_attr,<!-- 所选系别 区间totalmix变化（列表最后一列total）-->
	       case
	         when salesAllChanges is not null then
	          to_char(salesAllChanges,'fm99999999990')
	         else
	          '-'
	       end salesAllChanges,<!-- 所选系别总销量变化（没用到） -->
	       case
	         when sharesAll is not null then
	          to_char(sharesAll*100,'fm99999999990.0')
	         else
	          '-'
	       end sharesAll,<!-- 所选系别区间总份额 （列表最后一列total）-->
	       case
	         when totalSharesChange_attr is not null then
	          to_char(totalSharesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end totalSharesChange_attr,<!-- 所选系别区间总份额变化（列表最后一列total） -->
	       case
	         when totalShares_attr is not null then
	          to_char(totalShares_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end totalShares_attr,<!-- 系别总的份额 （列表最后一行total）-->
	       case
	         when totalSharesChanges is not null then
	          to_char(totalSharesChanges*100,'fm99999999990.0')
	         else
	          '-'
	       end totalSharesChanges<!-- 系别总份额变化（列表最后一行total） -->
	       from lastestData 
</select>

<!-- 汽车类型 -->
<select id="getCarTypeData" parameterClass="java.util.HashMap" resultMap="overview">
with left_table as
	(
		$leftSegmentSql$
	),
wholeFilter	as (
     select distinct o.car_type_id,o.car_type_name,o.sort_num from <include refid="mixTableSql"/> t    
      left join dm_sub_model m
      on t.sub_model_id = m.sub_model_id
      left join dm_car_type o
      on m.car_type_id = o.car_type_id
      <include refid="tableSql_all_1"/>
      where t.ym between $startYm$ and $endYm$
      <include refid="paramSql_all_1"/>
      and o.car_type_id != 8
),		
left_table2 as (
  select l.segment,l.fsort,o.car_type_id,o.car_type_name,o.sort_num
  from left_table l left join wholeFilter o
  on 1=1
),
<include refid="accTotalSql"/>
bqtotalsales_attr as
 (select sum(t.bq_sales) / $monthNum$ accBqTotalSales_attr,
 	o.car_type_id,o.car_type_name
    from <include refid="mixTableSql" /> t
    left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_car_type o 
    on m.car_type_id = o.car_type_id
    <include refid="tableSql"/>
   where 
   t.ym between $startYm$ and $endYm$
    <include refid="paramSql"/>
   group by o.car_type_id,o.car_type_name
   ), 
tqtotalsales_attr as
 (select sum(t.bq_sales) / $avgMonthNum$ accTqTotalSales_attr,o.car_type_id,o.car_type_name
    from <include refid="mixTableSql" /> t
   left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_car_type o 
    on m.car_type_id = o.car_type_id
    <include refid="tableSql"/>
   where t.ym between $startLastYm$ and $endLastYm$
    <include refid="paramSql"/>
  group by o.car_type_id,o.car_type_name
  ),       
totalSales_attr as
 (select b.accBqTotalSales_attr, t.accTqTotalSales_attr,
    case when b.car_type_id is not null then 
     b.car_type_id else t.car_type_id end car_type_id,
    case when b.car_type_name is not null then 
     b.car_type_name else t.car_type_name end car_type_name
    from bqtotalsales_attr b
    full join tqtotalsales_attr t
      on b.car_type_id = t.car_type_id),  
      
accbqRegionSaledata_attr as
 (select 
 	$priceSegmentSql$
  	fsort,
    sum(t.bq_sales) / $monthNum$ accRegionBqSales_attr,
    o.car_type_id
    from <include refid="mixTableSql" /> t
  left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_car_type o 
    on m.car_type_id = o.car_type_id
    left join dm_version v
      on t.version_id = v.version_id
      <include refid="tableSql"/>
   where t.ym between $startYm$ and $endYm$
    <include refid="paramSql"/>
     <!-- and t.bq_sales is not null -->
   group by 
   		$priceSegmentSql$
        ,o.car_type_id
   order by fsort),
acctqRegionSaledata_attr as
 (select 
 		$priceSegmentSql$
 		 fsort,
         sum(t.bq_sales) / $avgMonthNum$ accRegionTqSales_attr,
         o.car_type_id
    from <include refid="mixTableSql" /> t
  left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_car_type o 
    on m.car_type_id = o.car_type_id
    left join dm_version v
      on t.version_id = v.version_id
      <include refid="tableSql"/>
   where t.ym between $startLastYm$ and $endLastYm$
    <include refid="paramSql"/>
     <!-- and t.bq_sales is not null -->
   group by 
   		$priceSegmentSql$
        ,o.car_type_id
   order by fsort),         
       
left_attr_table as (
	select l.fsort,
         l.segment,
         l.car_type_id,
         l.car_type_name,
         b.accRegionBqSales_attr / s.accBqTotalSales_attr accBqTotalMix_attr,
         c.accRegionTqSales_attr / s.accTqTotalSales_attr accTqTotalMix_attr
    from left_table2 l
    left join accbqRegionSaledata_attr b
      on l.fsort = b.fsort
      and l.car_type_id = b.car_type_id
    left join acctqRegionSaledata_attr c
      on l.fsort = c.fsort
      and l.car_type_id = c.car_type_id
    left join totalSales_attr s
      on l.car_type_id = s.car_type_id
   order by l.fsort
),      
accbqactrueTotalSales_attr as
 (select 
         sum(<include refid="salesElement"/>) / $monthNum$  accbqsales_attr,
         o.car_type_id
    from <include refid="actrueSalesTables" /> t
  left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_car_type o 
    on m.car_type_id = o.car_type_id
    <include refid="tableSql"/>
   where t.year || lpad(t.month_id, 2, 0) between $startYm$ and $endYm$
    <include refid="paramSql"/>
   group by o.car_type_id
  
  ),
acctqactrueTotalSales_attr as
 (select 
    sum(<include refid="salesElement"/>) / $avgMonthNum$  acctqsales_attr,
    o.car_type_id
    from <include refid="actrueSalesTables" /> t
   left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_car_type o 
    on m.car_type_id = o.car_type_id
    <include refid="tableSql"/>
   where (t.year || lpad(t.month_id, 2, 0) between $startLastYm$ and $endLastYm$)
    <include refid="paramSql"/>
   group by o.car_type_id
  
  )  ,
  accactrueTotalSales_attr as (
      select a.accbqsales_attr,a.car_type_id,b.acctqsales_attr from accbqactrueTotalSales_attr a  left join acctqactrueTotalSales_attr b on a.car_type_id = b.car_type_id
  ),
  
accbqactrueAllSales_attr as
 (select  sum(<include refid="salesElement"/>) / $monthNum$  accbqAllsales_attr
    from <include refid="actrueSalesTables" /> t
  left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_car_type o 
    on m.car_type_id = o.car_type_id
    <include refid="tableSql"/>
   where t.year || lpad(t.month_id, 2, 0) between $startYm$ and $endYm$
   and o.car_type_id !=8
    <include refid="paramSql"/>
  ),
acctqactrueAllSales_attr as
 (select sum(<include refid="salesElement"/>) / $avgMonthNum$  acctqAllsales_attr
    from <include refid="actrueSalesTables" /> t
   left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_car_type o 
    on m.car_type_id = o.car_type_id
    <include refid="tableSql"/>
   where (t.year || lpad(t.month_id, 2, 0) between $startLastYm$ and $endLastYm$)
   and o.car_type_id !=8 
    <include refid="paramSql"/>
  )  ,
  accactrueAllSales_attr as (
      select a.accbqAllsales_attr,b.acctqAllsales_attr from accbqactrueAllSales_attr a  left join acctqactrueAllSales_attr b on 1=1
  ),  
<!-- 系别区间销量 -->
attr_region_sales as (
    select l.fsort,
         l.segment,
         l.car_type_id,
         l.car_type_name,
         l.accBqTotalMix_attr,
         l.accTqTotalMix_attr,
         l.accBqTotalMix_attr * a.accbqsales_attr actrueBqSales_attr,
         l.accTqTotalMix_attr * a.acctqsales_attr actrueTqSales_attr,    
         a.accbqsales_attr,
         a.acctqsales_attr     
         from left_attr_table l
    left join accactrueTotalSales_attr a
      on l.car_type_id = a.car_type_id
   order by l.fsort, l.car_type_id 
),
<!-- 最后一列区间total销量    -->
attr_region_totalsales as(
  select l.fsort,
         l.segment,
         sum(l.actrueBqSales_attr) actrueBqAllSales_attr,
         sum(l.actrueTqSales_attr) actrueTqAllSales_attr
         from attr_region_sales l 
         group by l.fsort,l.segment
),
<!-- 最后一列区间total销量  与mix  -->
attr_region_mix_sales as (
  select l.fsort,
         l.segment,
         l.actrueBqAllSales_attr,
         l.actrueTqAllSales_attr,
         case when b.accbqAllsales_attr is not null and b.accbqAllsales_attr !=0
           then l.actrueBqAllSales_attr / b.accbqAllsales_attr 
             else null end accBqAllMix_attr ,
         case when b.acctqAllsales_attr is not null and b.acctqAllsales_attr !=0
           then l.actrueTqAllSales_attr / b.acctqAllsales_attr 
             else null end accTqAllMix_attr,
         b.accbqAllsales_attr,
         b.acctqAllsales_attr          
         from attr_region_totalsales l
         left join accactrueAllSales_attr b
         on 1=1         
),  
attr_table as (
   select l.fsort,
         l.segment,
         l.car_type_id,
         l.car_type_name,
         l.accBqTotalMix_attr,
         l.accTqTotalMix_attr,
         l.actrueBqSales_attr,
         l.actrueTqSales_attr,   
         l.accbqsales_attr,
         l.acctqsales_attr,
         b.actrueBqAllSales_attr,
         b.actrueTqAllSales_attr,
         b.accBqAllMix_attr,
         b.accTqAllMix_attr,
         b.accbqAllsales_attr,
         b.acctqAllsales_attr,
         case when l.actrueTqSales_attr is not null and l.actrueTqSales_attr !=0
           then (l.actrueBqSales_attr -l.actrueTqSales_attr)/ l.actrueTqSales_attr
             else null end yoy_attr,
         case
           when l.acctqsales_attr is not null and l.acctqsales_attr != 0 then
            (l.accbqsales_attr - l.acctqsales_attr) / l.acctqsales_attr
           else
            null
         end totalyoy_attr,      
          case when nvl(l.accBqTotalMix_attr,0) = 0 and nvl(l.accTqTotalMix_attr,0) = 0 then null
         	else nvl(l.accBqTotalMix_attr,0) - nvl(l.accTqTotalMix_attr,0)
         	end  mixChanges_attr,
         case when b.actrueTqAllSales_attr is not null and b.actrueTqAllSales_attr != 0 
          then (b.actrueBqAllSales_attr - b.actrueTqAllSales_attr) / b.actrueTqAllSales_attr
            else null 
              end yoyAll_attr, 
         case
           when b.acctqAllsales_attr is not null and
                b.acctqAllsales_attr != 0 then
            (b.accbqAllsales_attr - b.acctqAllsales_attr) /
            b.acctqAllsales_attr
           else
            null
         end totalAllyoy_attr,     
         case when nvl(b.accBqAllMix_attr,0) =0 and nvl(b.accTqAllMix_attr,0)=0 then null
           else  nvl(b.accBqAllMix_attr,0) - nvl(b.accTqAllMix_attr,0) end mixAllChanges_attr
        from attr_region_sales l
        left join attr_region_mix_sales b
        on l.fsort = b.fsort                    
),

lastestData as (
	select l.fsort,
	       l.segment,
	       l.accBqTotalMix,<!-- 本期总览区间mix -->
	       l.accTqTotalMix,<!-- 同期总览区间mix -->
	       l.actrueBqSales,<!-- 本期实际区间销量 -->
	       l.actrueTqSales,<!-- 同期实际区间销量 -->
	       l.accbqsales,<!-- 本期实际总销量 -->
	       l.acctqsales,<!-- 同期实际总销量 -->
	       l.yoy,<!-- 本期区间销量增速 -->
	       l.totalyoy,<!-- 本期销量总增速 -->
	       l.mixChanges,<!-- 本期区间mix变化（总变化一定为0，总mix一定为1） -->
	       t.car_type_id attributeId,<!-- 系别id -->
	       t.car_type_name attributeName,<!-- 系别名称 -->
	       t.accBqTotalMix_attr mix_attr,<!-- 本期系别区间mix -->
	       t.accTqTotalMix_attr,<!-- 同期系别区间mix -->
	       t.actrueBqSales_attr sales_attr,<!-- 本期系别区间实际总销量（放大后） -->
	       t.actrueTqSales_attr,<!-- 同期系别区间实际总销量（放大后） -->
	       t.accbqsales_attr totalSales_attr,<!-- 本期系别总销量 -->
	       t.acctqsales_attr,<!-- 同期系别总销量 -->
	       t.yoy_attr salesChange_attr,<!-- 系别区间销量增速 -->
	       t.totalyoy_attr totalSalesChange_attr,<!-- 系别总销量增速（最后一行的total） -->
	       t.mixChanges_attr mixChange_attr,<!-- 系别区间mix变化 -->
	       t.actrueBqSales_attr - t.actrueTqSales_attr salesChanges,<!-- 系别销量变化（没用到） -->
	       case
	         when l.actrueBqSales is not null and l.actrueBqSales != 0 then
	          <!-- t.actrueBqSales_attr / l.actrueBqSales -->
	          t.actrueBqSales_attr / t.actrueBqAllSales_attr
	         else
	          null
	       end shares_attr,<!-- 系别区间份额 -->
	       case
	         when t.actrueBqAllSales_attr is not null and t.actrueBqAllSales_attr != 0 and
	              t.actrueTqAllSales_attr is not null and t.actrueTqAllSales_attr != 0 then
	          t.actrueBqSales_attr / t.actrueBqAllSales_attr -
	          t.actrueTqSales_attr / t.actrueTqAllSales_attr
	         when (t.actrueBqAllSales_attr is null or t.actrueBqAllSales_attr = 0) and
	              t.actrueTqAllSales_attr is not null and t.actrueTqAllSales_attr != 0 then
	          0 - t.actrueTqSales_attr / t.actrueTqAllSales_attr
	         when (t.actrueBqAllSales_attr is not null and t.actrueBqAllSales_attr != 0) and
	              (t.actrueTqAllSales_attr is null or t.actrueTqAllSales_attr = 0) then
	          t.actrueBqSales_attr / t.actrueBqAllSales_attr
	         else
	          null
	       end sharesChange_attr,<!-- 系别区间份额变化 -->
	       
	       t.accBqAllMix_attr allMix_attr,<!-- 本期系别区间totalmix（列表最后一列total） -->
	       t.accTqAllMix_attr,<!-- 本期系别区间totalmix（列表最后一列total） -->
	       t.actrueBqAllSales_attr allSales_attr,<!-- 本期系别区间total总销量（最后一列） -->
	       t.actrueTqAllSales_attr,<!-- 同期系别区间total总销量 -->
	       
	       t.accbqAllsales_attr,<!-- 本期所有选择系别总销量（一定小于等于列表前面的累计销量） -->
	       t.acctqAllsales_attr,<!-- 同期所有选择系别总销量 -->
	       t.yoyAll_attr allSalesChange_attr,<!-- 所选系别总的区间销量增速 -->
	       t.totalAllyoy_attr,<!-- 所选系别总的销量增速（最后一行的total） -->
	       t.mixAllChanges_attr allMixchange_attr,<!-- 所选系别 区间totalmix变化（列表最后一列total）-->
	       t.actrueBqAllSales_attr - t.actrueTqAllSales_attr salesAllChanges,<!-- 所选系别总销量变化（没用到） -->
	       case
	         when l.actrueBqSales is not null and l.actrueBqSales != 0 then
	          t.actrueBqAllSales_attr / t.actrueBqAllSales_attr
	         else
	          null
	       end sharesAll,<!-- 所选系别区间总份额 （列表最后一列total）-->
	       0 totalSharesChange_attr,<!-- 所选系别区间总份额变化（列表最后一列total） -->
	       
	       case when t.accbqAllsales_attr is not null and t.accbqAllsales_attr !=0 then 
	       t.accbqsales_attr/t.accbqAllsales_attr
	       else null end totalShares_attr,<!-- 系别总的份额 （列表最后一行total）-->
	       case when t.accbqAllsales_attr is not null and t.accbqAllsales_attr !=0 
	       	   and t.acctqAllsales_attr is not null and t.acctqAllsales_attr !=0 then 
	       t.accbqsales_attr/t.accbqAllsales_attr  - t.acctqsales_attr/t.acctqAllsales_attr
	        when (t.accbqAllsales_attr is not null and t.accbqAllsales_attr !=0 )
	       	   and (t.acctqAllsales_attr is null or t.acctqAllsales_attr =0) then
	       	   t.accbqsales_attr/t.accbqAllsales_attr
	       	 when (t.accbqAllsales_attr is null or t.accbqAllsales_attr =0)
	       	   and (t.acctqAllsales_attr is not null and t.acctqAllsales_attr !=0) then
	       	   0 - t.acctqsales_attr/t.acctqAllsales_attr
	        else null end totalSharesChanges<!-- 系别总份额变化（列表最后一行total） -->
	  from total_table l
	  left join attr_table t
	    on l.fsort = t.fsort
	   and l.car_type_id = t.car_type_id
	 order by l.fsort, l.sort_num
)        
select fsort,
	       segment,
	       case
	         when accBqTotalMix is not null then
	          to_char(accBqTotalMix*100,'fm99999999990.0')
	         else
	          '-'
	       end accBqTotalMix,<!-- 本期总览区间mix -->
	       case
	         when accTqTotalMix is not null then
	          to_char(accTqTotalMix*100,'fm99999999990.0')
	         else
	          '-'
	       end accTqTotalMix,<!-- 同期总览区间mix -->
	       case
	         when actrueBqSales is not null then
	          to_char(actrueBqSales,'fm99999999990')
	         else
	          '-'
	       end actrueBqSales,<!-- 本期实际区间销量 -->
	       case
	         when actrueTqSales is not null then
	          to_char(actrueTqSales,'fm99999999990')
	         else
	          '-'
	       end actrueTqSales,<!-- 同期实际区间销量 -->
	       case
	         when accbqsales is not null then
	          to_char(accbqsales,'fm99999999990')
	         else
	          '-'
	       end accbqsales,<!-- 本期实际总销量 -->
	       case
	         when acctqsales is not null then
	          to_char(acctqsales,'fm99999999990')
	         else
	          '-'
	       end acctqsales,<!-- 同期实际总销量 -->
	       case
	         when yoy is not null then
	          to_char(yoy*100,'fm99999999990.0')
	         else
	          '-'
	       end yoy,<!-- 本期区间销量增速 -->
	       case
	         when totalyoy is not null then
	          to_char(totalyoy*100,'fm99999999990.0')
	         else
	          '-'
	       end totalyoy,<!-- 本期销量总增速 -->
	       case
	         when mixChanges is not null then
	          to_char(mixChanges*100,'fm99999999990.0')
	         else
	          '-'
	       end mixChanges,<!-- 本期区间mix变化（总变化一定为0，总mix一定为1） -->
	       attributeId,<!-- 系别id -->
	       attributeName,<!-- 系别名称 -->
	       case
	         when mix_attr is not null then
	          to_char(mix_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end mix_attr,<!-- 本期系别区间mix -->
	       case
	         when accTqTotalMix_attr is not null then
	          to_char(accTqTotalMix_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end accTqTotalMix_attr,<!-- 同期系别区间mix -->
	       case
	         when sales_attr is not null then
	          to_char(sales_attr,'fm99999999990')
	         else
	          '-'
	       end sales_attr,<!-- 本期系别区间实际总销量（放大后） -->
	       case
	         when actrueTqSales_attr is not null then
	          to_char(actrueTqSales_attr,'fm99999999990')
	         else
	          '-'
	       end actrueTqSales_attr,<!-- 同期系别区间实际总销量（放大后） -->
	       case
	         when totalSales_attr is not null then
	          to_char(totalSales_attr,'fm99999999990')
	         else
	          '-'
	       end totalSales_attr,<!-- 本期系别总销量 -->
	       case
	         when acctqsales_attr is not null then
	          to_char(acctqsales_attr,'fm99999999990')
	         else
	          '-'
	       end acctqsales_attr,<!-- 同期系别总销量 -->
	       case
	         when salesChange_attr is not null then
	          to_char(salesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end salesChange_attr,<!-- 系别区间销量增速 -->
	       case
	         when totalSalesChange_attr is not null then
	          to_char(totalSalesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end totalSalesChange_attr,<!-- 系别总销量增速（最后一行的total） -->
	       case
	         when mixChange_attr is not null then
	          to_char(mixChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end mixChange_attr,<!-- 系别区间mix变化 -->
	       case
	         when salesChanges is not null then
	          to_char(salesChanges,'fm99999999990')
	         else
	          '-'
	       end salesChanges,<!-- 系别销量变化（没用到） -->
	       case
	         when shares_attr is not null then
	          to_char(shares_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end shares_attr,<!-- 系别区间份额 -->
	       case
	         when sharesChange_attr is not null then
	          to_char(sharesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end sharesChange_attr,<!-- 系别区间份额变化 -->
	       case
	         when allMix_attr is not null then
	          to_char(allMix_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end allMix_attr,<!-- 本期系别区间totalmix（列表最后一列total） -->
	       case
	         when accTqAllMix_attr is not null then
	          to_char(accTqAllMix_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end accTqAllMix_attr,<!-- 本期系别区间totalmix（列表最后一列total） -->
	       case
	         when allSales_attr is not null then
	          to_char(allSales_attr,'fm99999999990')
	         else
	          '-'
	       end allSales_attr,<!-- 本期系别区间total总销量（最后一列） -->
	       case
	         when actrueTqAllSales_attr is not null then
	          to_char(actrueTqAllSales_attr,'fm99999999990')
	         else
	          '-'
	       end actrueTqAllSales_attr,<!-- 同期系别区间total总销量 -->
	       case
	         when accbqAllsales_attr is not null then
	          to_char(accbqAllsales_attr,'fm99999999990')
	         else
	          '-'
	       end accbqAllsales_attr,<!-- 本期所有选择系别总销量（一定小于等于列表前面的累计销量） -->
	       case
	         when acctqAllsales_attr is not null then
	          to_char(acctqAllsales_attr,'fm99999999990')
	         else
	          '-'
	       end acctqAllsales_attr,<!-- 同期所有选择系别总销量 -->
	       case
	         when allSalesChange_attr is not null then
	          to_char(allSalesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end allSalesChange_attr,<!-- 所选系别总的区间销量增速 -->
	       case
	         when totalAllyoy_attr is not null then
	          to_char(totalAllyoy_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end totalAllyoy_attr,<!-- 所选系别总的销量增速（最后一行、最后一列的total） -->
	       case
	         when allMixchange_attr is not null then
	          to_char(allMixchange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end allMixchange_attr,<!-- 所选系别 区间totalmix变化（列表最后一列total）-->
	       case
	         when salesAllChanges is not null then
	          to_char(salesAllChanges,'fm99999999990')
	         else
	          '-'
	       end salesAllChanges,<!-- 所选系别总销量变化（没用到） -->
	       case
	         when sharesAll is not null then
	          to_char(sharesAll*100,'fm99999999990.0')
	         else
	          '-'
	       end sharesAll,<!-- 所选系别区间总份额 （列表最后一列total）-->
	       case
	         when totalSharesChange_attr is not null then
	          to_char(totalSharesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end totalSharesChange_attr,<!-- 所选系别区间总份额变化（列表最后一列total） -->
	       case
	         when totalShares_attr is not null then
	          to_char(totalShares_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end totalShares_attr,<!-- 系别总的份额 （列表最后一行total）-->
	       case
	         when totalSharesChanges is not null then
	          to_char(totalSharesChanges*100,'fm99999999990.0')
	         else
	          '-'
	       end totalSharesChanges<!-- 系别总份额变化（列表最后一行total） -->
	       from lastestData 
</select>

<!-- 品牌 -->
<select id="getBrandData" parameterClass="java.util.HashMap" resultMap="overview">
with left_table as
	(
		$leftSegmentSql$
	),
left_table2 as (
  select distinct l.segment,l.fsort,o.brand_id,o.brand_name
  	<!-- ,row_number() over(partition by l.fsort order by instr(#brandIds#,o.brand_id)) sort_num -->
  	,row_number() over(partition by l.fsort order by instr(#brandIds_sort#,(','||o.brand_id||','))) sort_num
  from left_table l left join dm_brand o
  on 1=1
  where o.brand_id in ($brandIds$)
),
<include refid="accTotalSql"/>
bqtotalsales_attr as
 (select sum(t.bq_sales) / $monthNum$ accBqTotalSales_attr,
 	o.brand_id,o.brand_name
    from <include refid="mixTableSql" /> t
    left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_brand o
    on m.brand_id = o.brand_id
    <include refid="tableSql"/>
   where 
   t.ym between $startYm$ and $endYm$
   and o.brand_id in ($brandIds$)
    <include refid="paramSql"/>
   group by o.brand_id,o.brand_name
   ), 
tqtotalsales_attr as
 (select sum(t.bq_sales) / $avgMonthNum$ accTqTotalSales_attr,o.brand_id,o.brand_name
    from <include refid="mixTableSql" /> t
   left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_brand o 
    on m.brand_id = o.brand_id
    <include refid="tableSql"/>
   where t.ym between $startLastYm$ and $endLastYm$
   and o.brand_id in ($brandIds$)
    <include refid="paramSql"/>
  group by o.brand_id,o.brand_name
  ),       
totalSales_attr as
 (select b.accBqTotalSales_attr, t.accTqTotalSales_attr,
 	case when b.brand_id is not null then 
     b.brand_id else t.brand_id end brand_id,
    case when b.brand_name is not null then 
     b.brand_name else t.brand_name end brand_name
    from bqtotalsales_attr b
    full join tqtotalsales_attr t
      on b.brand_id = t.brand_id),  
      
accbqRegionSaledata_attr as
 (select 
 	$priceSegmentSql$
  	fsort,
    sum(t.bq_sales) / $monthNum$ accRegionBqSales_attr,
    o.brand_id
    from <include refid="mixTableSql" /> t
  left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_brand o 
    on m.brand_id = o.brand_id
      <include refid="tableSql"/>
   where t.ym between $startYm$ and $endYm$
   and o.brand_id in ($brandIds$)
    <include refid="paramSql"/>
     <!-- and t.bq_sales is not null -->
   group by 
   		$priceSegmentSql$
        ,o.brand_id
   order by fsort),
acctqRegionSaledata_attr as
 (select 
 		$priceSegmentSql$
 		 fsort,
         sum(t.bq_sales) / $avgMonthNum$ accRegionTqSales_attr,
         o.brand_id
    from <include refid="mixTableSql" /> t
  left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_brand o 
   on m.brand_id = o.brand_id
      <include refid="tableSql"/>
   where t.ym between $startLastYm$ and $endLastYm$
    and o.brand_id in ($brandIds$)
    <include refid="paramSql"/>
     <!-- and t.bq_sales is not null -->
   group by 
   		$priceSegmentSql$
        ,o.brand_id
   order by fsort),    
   
left_attr_table as (
	select l.fsort,
         l.segment,
         l.brand_id,
         l.brand_name,
         b.accRegionBqSales_attr / s.accBqTotalSales_attr accBqTotalMix_attr,
         c.accRegionTqSales_attr / s.accTqTotalSales_attr accTqTotalMix_attr
    from left_table2 l
    left join accbqRegionSaledata_attr b
      on l.fsort = b.fsort
      and l.brand_id = b.brand_id
    left join acctqRegionSaledata_attr c
      on l.fsort = c.fsort
      and l.brand_id = c.brand_id
    left join totalSales_attr s
      on l.brand_id = s.brand_id
   order by l.fsort
),      
accbqactrueTotalSales_attr as
 (select 
         sum(<include refid="salesElement"/>) / $monthNum$  accbqsales_attr,
         o.brand_id
    from <include refid="actrueSalesTables" /> t
  left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_brand o 
   on m.brand_id = o.brand_id
    <include refid="tableSql"/>
   where t.year || lpad(t.month_id, 2, 0) between $startYm$ and $endYm$
   and o.brand_id in ($brandIds$)
    <include refid="paramSql"/>
   group by o.brand_id
  
  ),
acctqactrueTotalSales_attr as
 (select 
    sum(<include refid="salesElement"/>) / $avgMonthNum$  acctqsales_attr,
    o.brand_id
    from <include refid="actrueSalesTables" /> t
   left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_brand o 
    on m.brand_id = o.brand_id
    <include refid="tableSql"/>
   where (t.year || lpad(t.month_id, 2, 0) between $startLastYm$ and $endLastYm$)
   and o.brand_id in ($brandIds$)
    <include refid="paramSql"/>
   group by o.brand_id
  
  )  ,
  accactrueTotalSales_attr as (
      select a.accbqsales_attr,a.brand_id,b.acctqsales_attr from accbqactrueTotalSales_attr a  left join acctqactrueTotalSales_attr b on a.brand_id = b.brand_id
  ),
  
accbqactrueAllSales_attr as
 (select 
         sum(<include refid="salesElement"/>) / $monthNum$  accbqAllsales_attr
    from <include refid="actrueSalesTables" /> t
  left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_brand o 
   on m.brand_id = o.brand_id
    <include refid="tableSql"/>
   where t.year || lpad(t.month_id, 2, 0) between $startYm$ and $endYm$
   and o.brand_id in ($brandIds$)
    <include refid="paramSql"/>
  ),
acctqactrueAllSales_attr as
 (select 
    sum(<include refid="salesElement"/>) / $avgMonthNum$  acctqAllsales_attr
    from <include refid="actrueSalesTables" /> t
   left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_brand o 
    on m.brand_id = o.brand_id
    <include refid="tableSql"/>
   where (t.year || lpad(t.month_id, 2, 0) between $startLastYm$ and $endLastYm$)
   and o.brand_id in ($brandIds$)
    <include refid="paramSql"/>
  )  ,
accactrueAllSales_attr as (
      select a.accbqAllsales_attr,b.acctqAllsales_attr from accbqactrueAllSales_attr a  left join acctqactrueAllSales_attr b on 1=1
  ),  
<!-- 系别区间销量 -->
attr_region_sales as (
    select l.fsort,
         l.segment,
         l.brand_id,
         l.brand_name,
         l.accBqTotalMix_attr,
         l.accTqTotalMix_attr,
         l.accBqTotalMix_attr * a.accbqsales_attr actrueBqSales_attr,
         l.accTqTotalMix_attr * a.acctqsales_attr actrueTqSales_attr,    
         a.accbqsales_attr,
         a.acctqsales_attr     
         from left_attr_table l
    left join accactrueTotalSales_attr a
      on l.brand_id = a.brand_id
   order by l.fsort, l.brand_id 
),
<!-- 最后一列区间total销量    -->
attr_region_totalsales as(
  select l.fsort,
         l.segment,
         sum(l.actrueBqSales_attr) actrueBqAllSales_attr,
         sum(l.actrueTqSales_attr) actrueTqAllSales_attr
         from attr_region_sales l 
         group by l.fsort,l.segment
),
<!-- 最后一列区间total销量  与mix  -->
attr_region_mix_sales as (
  select l.fsort,
         l.segment,
         l.actrueBqAllSales_attr,
         l.actrueTqAllSales_attr,
         case when b.accbqAllsales_attr is not null and b.accbqAllsales_attr !=0
           then l.actrueBqAllSales_attr / b.accbqAllsales_attr 
             else null end accBqAllMix_attr ,
         case when b.acctqAllsales_attr is not null and b.acctqAllsales_attr !=0
           then l.actrueTqAllSales_attr / b.acctqAllsales_attr 
             else null end accTqAllMix_attr,
         b.accbqAllsales_attr,
         b.acctqAllsales_attr          
         from attr_region_totalsales l
         left join accactrueAllSales_attr b
         on 1=1         
),    
attr_table as(
	select l.fsort,
         l.segment,
         l.brand_id,
         l.brand_name,
         l.accBqTotalMix_attr,
         l.accTqTotalMix_attr,
         l.actrueBqSales_attr,
         l.actrueTqSales_attr,   
         l.accbqsales_attr,
         l.acctqsales_attr,
         b.actrueBqAllSales_attr,
         b.actrueTqAllSales_attr,
         b.accBqAllMix_attr,
         b.accTqAllMix_attr,
         b.accbqAllsales_attr,
         b.acctqAllsales_attr,
         case when l.actrueTqSales_attr is not null and l.actrueTqSales_attr !=0
           then (l.actrueBqSales_attr -l.actrueTqSales_attr)/ l.actrueTqSales_attr
             else null end yoy_attr,
         case
           when l.acctqsales_attr is not null and l.acctqsales_attr != 0 then
            (l.accbqsales_attr - l.acctqsales_attr) / l.acctqsales_attr
           else
            null
         end totalyoy_attr,      
          case when nvl(l.accBqTotalMix_attr,0) = 0 and nvl(l.accTqTotalMix_attr,0) = 0 then null
         	else nvl(l.accBqTotalMix_attr,0) - nvl(l.accTqTotalMix_attr,0)
         	end  mixChanges_attr,
         case when b.actrueTqAllSales_attr is not null and b.actrueTqAllSales_attr != 0 
          then (b.actrueBqAllSales_attr - b.actrueTqAllSales_attr) / b.actrueTqAllSales_attr
            else null 
              end yoyAll_attr, 
         case
           when b.acctqAllsales_attr is not null and
                b.acctqAllsales_attr != 0 then
            (b.accbqAllsales_attr - b.acctqAllsales_attr) /
            b.acctqAllsales_attr
           else
            null
         end totalAllyoy_attr,     
         case when nvl(b.accBqAllMix_attr,0) =0 and nvl(b.accTqAllMix_attr,0)=0 then null
           else  nvl(b.accBqAllMix_attr,0) - nvl(b.accTqAllMix_attr,0) end mixAllChanges_attr
        from attr_region_sales l
        left join attr_region_mix_sales b
        on l.fsort = b.fsort       
),  
lastestData as (
	select l.fsort,
	       l.segment,
	       l.accBqTotalMix,<!-- 本期总览区间mix -->
	       l.accTqTotalMix,<!-- 同期总览区间mix -->
	       l.actrueBqSales,<!-- 本期实际区间销量 -->
	       l.actrueTqSales,<!-- 同期实际区间销量 -->
	       l.accbqsales,<!-- 本期实际总销量 -->
	       l.acctqsales,<!-- 同期实际总销量 -->
	       l.yoy,<!-- 本期区间销量增速 -->
	       l.totalyoy,<!-- 本期销量总增速 -->
	       l.mixChanges,<!-- 本期区间mix变化（总变化一定为0，总mix一定为1） -->
	       t.brand_id attributeId,<!-- 系别id -->
	       t.brand_name attributeName,<!-- 系别名称 -->
	       t.accBqTotalMix_attr mix_attr,<!-- 本期系别区间mix -->
	       t.accTqTotalMix_attr,<!-- 同期系别区间mix -->
	       t.actrueBqSales_attr sales_attr,<!-- 本期系别区间实际总销量（放大后） -->
	       t.actrueTqSales_attr,<!-- 同期系别区间实际总销量（放大后） -->
	       t.accbqsales_attr totalSales_attr,<!-- 本期系别总销量 -->
	       t.acctqsales_attr,<!-- 同期系别总销量 -->
	       t.yoy_attr salesChange_attr,<!-- 系别区间销量增速 -->
	       t.totalyoy_attr totalSalesChange_attr,<!-- 系别总销量增速（最后一行的total） -->
	       t.mixChanges_attr mixChange_attr,<!-- 系别区间mix变化 -->
	       t.actrueBqSales_attr - t.actrueTqSales_attr salesChanges,<!-- 系别销量变化（没用到） -->
	       case
	         when l.actrueBqSales is not null and l.actrueBqSales != 0 then
	          <!-- t.actrueBqSales_attr / l.actrueBqSales -->
	          t.actrueBqSales_attr / t.actrueBqAllSales_attr
	         else
	          null
	       end shares_attr,<!-- 系别区间份额 -->
	       case
	         when t.actrueBqAllSales_attr is not null and t.actrueBqAllSales_attr != 0 and
	              t.actrueTqAllSales_attr is not null and t.actrueTqAllSales_attr != 0 then
	          t.actrueBqSales_attr / t.actrueBqAllSales_attr -
	          t.actrueTqSales_attr / t.actrueTqAllSales_attr
	         when (t.actrueBqAllSales_attr is null or t.actrueBqAllSales_attr = 0) and
	              t.actrueTqAllSales_attr is not null and t.actrueTqAllSales_attr != 0 then
	          0 - t.actrueTqSales_attr / t.actrueTqAllSales_attr
	         when (t.actrueBqAllSales_attr is not null and t.actrueBqAllSales_attr != 0) and
	              (t.actrueTqAllSales_attr is null or t.actrueTqAllSales_attr = 0) then
	          t.actrueBqSales_attr / t.actrueBqAllSales_attr
	         else
	          null
	       end sharesChange_attr,<!-- 系别区间份额变化 -->
	       
	       t.accBqAllMix_attr allMix_attr,<!-- 本期系别区间totalmix（列表最后一列total） -->
	       t.accTqAllMix_attr,<!-- 本期系别区间totalmix（列表最后一列total） -->
	       t.actrueBqAllSales_attr allSales_attr,<!-- 本期系别区间total总销量（最后一列） -->
	       t.actrueTqAllSales_attr,<!-- 同期系别区间total总销量 -->
	       
	       t.accbqAllsales_attr,<!-- 本期所有选择系别总销量（一定小于等于列表前面的累计销量） -->
	       t.acctqAllsales_attr,<!-- 同期所有选择系别总销量 -->
	       t.yoyAll_attr allSalesChange_attr,<!-- 所选系别总的区间销量增速 -->
	       t.totalAllyoy_attr,<!-- 所选系别总的销量增速（最后一行的total） -->
	       t.mixAllChanges_attr allMixchange_attr,<!-- 所选系别 区间totalmix变化（列表最后一列total）-->
	       t.actrueBqAllSales_attr - t.actrueTqAllSales_attr salesAllChanges,<!-- 所选系别总销量变化（没用到） -->
	       case
	         when l.actrueBqSales is not null and l.actrueBqSales != 0 then
	          t.actrueBqAllSales_attr / t.actrueBqAllSales_attr
	         else
	          null
	       end sharesAll,<!-- 所选系别区间总份额 （列表最后一列total）-->
	       0 totalSharesChange_attr,<!-- 所选系别区间总份额变化（列表最后一列total） -->
	       
	       case when t.accbqAllsales_attr is not null and t.accbqAllsales_attr !=0 then 
	       t.accbqsales_attr/t.accbqAllsales_attr
	       else null end totalShares_attr,<!-- 系别总的份额 （列表最后一行total）-->
	       case when t.accbqAllsales_attr is not null and t.accbqAllsales_attr !=0 
	       	   and t.acctqAllsales_attr is not null and t.acctqAllsales_attr !=0 then 
	       t.accbqsales_attr/t.accbqAllsales_attr  - t.acctqsales_attr/t.acctqAllsales_attr
	        when (t.accbqAllsales_attr is not null and t.accbqAllsales_attr !=0 )
	       	   and (t.acctqAllsales_attr is null or t.acctqAllsales_attr =0) then
	       	   t.accbqsales_attr/t.accbqAllsales_attr
	       	 when (t.accbqAllsales_attr is null or t.accbqAllsales_attr =0)
	       	   and (t.acctqAllsales_attr is not null and t.acctqAllsales_attr !=0) then
	       	   0 - t.acctqsales_attr/t.acctqAllsales_attr
	        else null end totalSharesChanges<!-- 系别总份额变化（列表最后一行total） -->
	  from total_table l
	  left join attr_table t
	    on l.fsort = t.fsort
	   and l.brand_id = t.brand_id
	 order by l.fsort, l.sort_num
)        
select fsort,
	       segment,
	       case
	         when accBqTotalMix is not null then
	          to_char(accBqTotalMix*100,'fm99999999990.0')
	         else
	          '-'
	       end accBqTotalMix,<!-- 本期总览区间mix -->
	       case
	         when accTqTotalMix is not null then
	          to_char(accTqTotalMix*100,'fm99999999990.0')
	         else
	          '-'
	       end accTqTotalMix,<!-- 同期总览区间mix -->
	       case
	         when actrueBqSales is not null then
	          to_char(actrueBqSales,'fm99999999990')
	         else
	          '-'
	       end actrueBqSales,<!-- 本期实际区间销量 -->
	       case
	         when actrueTqSales is not null then
	          to_char(actrueTqSales,'fm99999999990')
	         else
	          '-'
	       end actrueTqSales,<!-- 同期实际区间销量 -->
	       case
	         when accbqsales is not null then
	          to_char(accbqsales,'fm99999999990')
	         else
	          '-'
	       end accbqsales,<!-- 本期实际总销量 -->
	       case
	         when acctqsales is not null then
	          to_char(acctqsales,'fm99999999990')
	         else
	          '-'
	       end acctqsales,<!-- 同期实际总销量 -->
	       case
	         when yoy is not null then
	          to_char(yoy*100,'fm99999999990.0')
	         else
	          '-'
	       end yoy,<!-- 本期区间销量增速 -->
	       case
	         when totalyoy is not null then
	          to_char(totalyoy*100,'fm99999999990.0')
	         else
	          '-'
	       end totalyoy,<!-- 本期销量总增速 -->
	       case
	         when mixChanges is not null then
	          to_char(mixChanges*100,'fm99999999990.0')
	         else
	          '-'
	       end mixChanges,<!-- 本期区间mix变化（总变化一定为0，总mix一定为1） -->
	       attributeId,<!-- 系别id -->
	       attributeName,<!-- 系别名称 -->
	       case
	         when mix_attr is not null then
	          to_char(mix_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end mix_attr,<!-- 本期系别区间mix -->
	       case
	         when accTqTotalMix_attr is not null then
	          to_char(accTqTotalMix_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end accTqTotalMix_attr,<!-- 同期系别区间mix -->
	       case
	         when sales_attr is not null then
	          to_char(sales_attr,'fm99999999990')
	         else
	          '-'
	       end sales_attr,<!-- 本期系别区间实际总销量（放大后） -->
	       case
	         when actrueTqSales_attr is not null then
	          to_char(actrueTqSales_attr,'fm99999999990')
	         else
	          '-'
	       end actrueTqSales_attr,<!-- 同期系别区间实际总销量（放大后） -->
	       case
	         when totalSales_attr is not null then
	          to_char(totalSales_attr,'fm99999999990')
	         else
	          '-'
	       end totalSales_attr,<!-- 本期系别总销量 -->
	       case
	         when acctqsales_attr is not null then
	          to_char(acctqsales_attr,'fm99999999990')
	         else
	          '-'
	       end acctqsales_attr,<!-- 同期系别总销量 -->
	       case
	         when salesChange_attr is not null then
	          to_char(salesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end salesChange_attr,<!-- 系别区间销量增速 -->
	       case
	         when totalSalesChange_attr is not null then
	          to_char(totalSalesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end totalSalesChange_attr,<!-- 系别总销量增速（最后一行的total） -->
	       case
	         when mixChange_attr is not null then
	          to_char(mixChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end mixChange_attr,<!-- 系别区间mix变化 -->
	       case
	         when salesChanges is not null then
	          to_char(salesChanges,'fm99999999990')
	         else
	          '-'
	       end salesChanges,<!-- 系别销量变化（没用到） -->
	       case
	         when shares_attr is not null then
	          to_char(shares_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end shares_attr,<!-- 系别区间份额 -->
	       case
	         when sharesChange_attr is not null then
	          to_char(sharesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end sharesChange_attr,<!-- 系别区间份额变化 -->
	       case
	         when allMix_attr is not null then
	          to_char(allMix_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end allMix_attr,<!-- 本期系别区间totalmix（列表最后一列total） -->
	       case
	         when accTqAllMix_attr is not null then
	          to_char(accTqAllMix_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end accTqAllMix_attr,<!-- 本期系别区间totalmix（列表最后一列total） -->
	       case
	         when allSales_attr is not null then
	          to_char(allSales_attr,'fm99999999990')
	         else
	          '-'
	       end allSales_attr,<!-- 本期系别区间total总销量（最后一列） -->
	       case
	         when actrueTqAllSales_attr is not null then
	          to_char(actrueTqAllSales_attr,'fm99999999990')
	         else
	          '-'
	       end actrueTqAllSales_attr,<!-- 同期系别区间total总销量 -->
	       case
	         when accbqAllsales_attr is not null then
	          to_char(accbqAllsales_attr,'fm99999999990')
	         else
	          '-'
	       end accbqAllsales_attr,<!-- 本期所有选择系别总销量（一定小于等于列表前面的累计销量） -->
	       case
	         when acctqAllsales_attr is not null then
	          to_char(acctqAllsales_attr,'fm99999999990')
	         else
	          '-'
	       end acctqAllsales_attr,<!-- 同期所有选择系别总销量 -->
	       case
	         when allSalesChange_attr is not null then
	          to_char(allSalesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end allSalesChange_attr,<!-- 所选系别总的区间销量增速 -->
	       case
	         when totalAllyoy_attr is not null then
	          to_char(totalAllyoy_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end totalAllyoy_attr,<!-- 所选系别总的销量增速（最后一行、最后一列的total） -->
	       case
	         when allMixchange_attr is not null then
	          to_char(allMixchange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end allMixchange_attr,<!-- 所选系别 区间totalmix变化（列表最后一列total）-->
	       case
	         when salesAllChanges is not null then
	          to_char(salesAllChanges,'fm99999999990')
	         else
	          '-'
	       end salesAllChanges,<!-- 所选系别总销量变化（没用到） -->
	       case
	         when sharesAll is not null then
	          to_char(sharesAll*100,'fm99999999990.0')
	         else
	          '-'
	       end sharesAll,<!-- 所选系别区间总份额 （列表最后一列total）-->
	       case
	         when totalSharesChange_attr is not null then
	          to_char(totalSharesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end totalSharesChange_attr,<!-- 所选系别区间总份额变化（列表最后一列total） -->
	       case
	         when totalShares_attr is not null then
	          to_char(totalShares_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end totalShares_attr,<!-- 系别总的份额 （列表最后一行total）-->
	       case
	         when totalSharesChanges is not null then
	          to_char(totalSharesChanges*100,'fm99999999990.0')
	         else
	          '-'
	       end totalSharesChanges<!-- 系别总份额变化（列表最后一行total） -->
	       from lastestData 
</select>

<!-- 厂商 -->
<select id="getManfData" parameterClass="java.util.HashMap" resultMap="overview">
with left_table as
	(
		$leftSegmentSql$
	),
left_table2 as (
  select distinct l.segment,l.fsort,o.manf_id,o.manf_name
  	,row_number() over(partition by l.fsort order by instr(#manfIds_sort#,(','||o.manf_id||','))) sort_num
  from left_table l left join dm_manf o
  on 1=1
  where o.manf_id in ($manfIds$)
),
<include refid="accTotalSql"/>
bqtotalsales_attr as
 (select sum(t.bq_sales) / $monthNum$ accBqTotalSales_attr,
 	o.manf_id,o.manf_name
    from <include refid="mixTableSql" /> t
    left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_manf o
    on m.manf_id = o.manf_id
    <include refid="tableSql"/>
   where 
   t.ym between $startYm$ and $endYm$
   and o.manf_id in ($manfIds$)
    <include refid="paramSql"/>
   group by o.manf_id,o.manf_name
   ), 
tqtotalsales_attr as
 (select sum(t.bq_sales) / $avgMonthNum$ accTqTotalSales_attr,o.manf_id,o.manf_name
    from <include refid="mixTableSql" /> t
   left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_manf o 
    on m.manf_id = o.manf_id
    <include refid="tableSql"/>
   where t.ym between $startLastYm$ and $endLastYm$
   and o.manf_id in ($manfIds$)
    <include refid="paramSql"/>
  group by o.manf_id,o.manf_name
  ),       
totalSales_attr as
 (select b.accBqTotalSales_attr, t.accTqTotalSales_attr,
 	case when b.manf_id is not null then 
     b.manf_id else t.manf_id end manf_id,
    case when b.manf_name is not null then 
     b.manf_name else t.manf_name end manf_name
    from bqtotalsales_attr b
    full join tqtotalsales_attr t
      on b.manf_id = t.manf_id),  
      
accbqRegionSaledata_attr as
 (select 
 	$priceSegmentSql$
  	fsort,
    sum(t.bq_sales) / $monthNum$ accRegionBqSales_attr,
    o.manf_id
    from <include refid="mixTableSql" /> t
  left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_manf o 
    on m.manf_id = o.manf_id
      <include refid="tableSql"/>
   where t.ym between $startYm$ and $endYm$
   and o.manf_id in ($manfIds$)
    <include refid="paramSql"/>
     <!-- and t.bq_sales is not null -->
   group by 
   		$priceSegmentSql$
        ,o.manf_id
   order by fsort),
acctqRegionSaledata_attr as
 (select 
 		$priceSegmentSql$
 		 fsort,
         sum(t.bq_sales) / $avgMonthNum$ accRegionTqSales_attr,
         o.manf_id
    from <include refid="mixTableSql" /> t
  left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_manf o 
   on m.manf_id = o.manf_id
      <include refid="tableSql"/>
   where t.ym between $startLastYm$ and $endLastYm$
    and o.manf_id in ($manfIds$)
    <include refid="paramSql"/>
     <!-- and t.bq_sales is not null -->
   group by 
   		$priceSegmentSql$
        ,o.manf_id
   order by fsort),    
   
left_attr_table as (
	select l.fsort,
         l.segment,
         l.manf_id,
         l.manf_name,
         b.accRegionBqSales_attr / s.accBqTotalSales_attr accBqTotalMix_attr,
         c.accRegionTqSales_attr / s.accTqTotalSales_attr accTqTotalMix_attr
    from left_table2 l
    left join accbqRegionSaledata_attr b
      on l.fsort = b.fsort
      and l.manf_id = b.manf_id
    left join acctqRegionSaledata_attr c
      on l.fsort = c.fsort
      and l.manf_id = c.manf_id
    left join totalSales_attr s
      on l.manf_id = s.manf_id
   order by l.fsort
),      
accbqactrueTotalSales_attr as
 (select 
         sum(<include refid="salesElement"/>) / $monthNum$  accbqsales_attr,
         o.manf_id
    from <include refid="actrueSalesTables" /> t
  left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_manf o 
   on m.manf_id = o.manf_id
    <include refid="tableSql"/>
   where t.year || lpad(t.month_id, 2, 0) between $startYm$ and $endYm$
   and o.manf_id in ($manfIds$)
    <include refid="paramSql"/>
   group by o.manf_id
  
  ),
acctqactrueTotalSales_attr as
 (select 
    sum(<include refid="salesElement"/>) / $avgMonthNum$  acctqsales_attr,
    o.manf_id
    from <include refid="actrueSalesTables" /> t
   left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_manf o 
    on m.manf_id = o.manf_id
    <include refid="tableSql"/>
   where (t.year || lpad(t.month_id, 2, 0) between $startLastYm$ and $endLastYm$)
   and o.manf_id in ($manfIds$)
    <include refid="paramSql"/>
   group by o.manf_id
  
  )  ,
  accactrueTotalSales_attr as (
      select a.accbqsales_attr,a.manf_id,b.acctqsales_attr from accbqactrueTotalSales_attr a  left join acctqactrueTotalSales_attr b on a.manf_id = b.manf_id
  ),
  
accbqactrueAllSales_attr as
 (select 
         sum(<include refid="salesElement"/>) / $monthNum$  accbqAllsales_attr
    from <include refid="actrueSalesTables" /> t
  left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_manf o 
   on m.manf_id = o.manf_id
    <include refid="tableSql"/>
   where t.year || lpad(t.month_id, 2, 0) between $startYm$ and $endYm$
   and o.manf_id in ($manfIds$)
    <include refid="paramSql"/>
  ),
acctqactrueAllSales_attr as
 (select 
    sum(<include refid="salesElement"/>) / $avgMonthNum$  acctqAllsales_attr
    from <include refid="actrueSalesTables" /> t
   left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_manf o 
    on m.manf_id = o.manf_id
    <include refid="tableSql"/>
   where (t.year || lpad(t.month_id, 2, 0) between $startLastYm$ and $endLastYm$)
   and o.manf_id in ($manfIds$)
    <include refid="paramSql"/>
  )  ,
accactrueAllSales_attr as (
      select a.accbqAllsales_attr,b.acctqAllsales_attr from accbqactrueAllSales_attr a  left join acctqactrueAllSales_attr b on 1=1
  ),  
<!-- 系别区间销量 -->
attr_region_sales as (
    select l.fsort,
         l.segment,
         l.manf_id,
         l.manf_name,
         l.accBqTotalMix_attr,
         l.accTqTotalMix_attr,
         l.accBqTotalMix_attr * a.accbqsales_attr actrueBqSales_attr,
         l.accTqTotalMix_attr * a.acctqsales_attr actrueTqSales_attr,    
         a.accbqsales_attr,
         a.acctqsales_attr     
         from left_attr_table l
    left join accactrueTotalSales_attr a
      on l.manf_id = a.manf_id
   order by l.fsort, l.manf_id 
),
<!-- 最后一列区间total销量    -->
attr_region_totalsales as(
  select l.fsort,
         l.segment,
         sum(l.actrueBqSales_attr) actrueBqAllSales_attr,
         sum(l.actrueTqSales_attr) actrueTqAllSales_attr
         from attr_region_sales l 
         group by l.fsort,l.segment
),
<!-- 最后一列区间total销量  与mix  -->
attr_region_mix_sales as (
  select l.fsort,
         l.segment,
         l.actrueBqAllSales_attr,
         l.actrueTqAllSales_attr,
         case when b.accbqAllsales_attr is not null and b.accbqAllsales_attr !=0
           then l.actrueBqAllSales_attr / b.accbqAllsales_attr 
             else null end accBqAllMix_attr ,
         case when b.acctqAllsales_attr is not null and b.acctqAllsales_attr !=0
           then l.actrueTqAllSales_attr / b.acctqAllsales_attr 
             else null end accTqAllMix_attr,
         b.accbqAllsales_attr,
         b.acctqAllsales_attr          
         from attr_region_totalsales l
         left join accactrueAllSales_attr b
         on 1=1         
),   
attr_table as(
	select l.fsort,
         l.segment,
         l.manf_id,
         l.manf_name,
         l.accBqTotalMix_attr,
         l.accTqTotalMix_attr,
         l.actrueBqSales_attr,
         l.actrueTqSales_attr,   
         l.accbqsales_attr,
         l.acctqsales_attr,
         b.actrueBqAllSales_attr,
         b.actrueTqAllSales_attr,
         b.accBqAllMix_attr,
         b.accTqAllMix_attr,
         b.accbqAllsales_attr,
         b.acctqAllsales_attr,
         case when l.actrueTqSales_attr is not null and l.actrueTqSales_attr !=0
           then (l.actrueBqSales_attr -l.actrueTqSales_attr)/ l.actrueTqSales_attr
             else null end yoy_attr,
         case
           when l.acctqsales_attr is not null and l.acctqsales_attr != 0 then
            (l.accbqsales_attr - l.acctqsales_attr) / l.acctqsales_attr
           else
            null
         end totalyoy_attr,      
          case when nvl(l.accBqTotalMix_attr,0) = 0 and nvl(l.accTqTotalMix_attr,0) = 0 then null
         	else nvl(l.accBqTotalMix_attr,0) - nvl(l.accTqTotalMix_attr,0)
         	end  mixChanges_attr,
         case when b.actrueTqAllSales_attr is not null and b.actrueTqAllSales_attr != 0 
          then (b.actrueBqAllSales_attr - b.actrueTqAllSales_attr) / b.actrueTqAllSales_attr
            else null 
              end yoyAll_attr, 
         case
           when b.acctqAllsales_attr is not null and
                b.acctqAllsales_attr != 0 then
            (b.accbqAllsales_attr - b.acctqAllsales_attr) /
            b.acctqAllsales_attr
           else
            null
         end totalAllyoy_attr,     
         case when nvl(b.accBqAllMix_attr,0) =0 and nvl(b.accTqAllMix_attr,0)=0 then null
           else  nvl(b.accBqAllMix_attr,0) - nvl(b.accTqAllMix_attr,0) end mixAllChanges_attr
        from attr_region_sales l
        left join attr_region_mix_sales b
        on l.fsort = b.fsort 
),  
lastestData as (
	select l.fsort,
	       l.segment,
	       l.accBqTotalMix,<!-- 本期总览区间mix -->
	       l.accTqTotalMix,<!-- 同期总览区间mix -->
	       l.actrueBqSales,<!-- 本期实际区间销量 -->
	       l.actrueTqSales,<!-- 同期实际区间销量 -->
	       l.accbqsales,<!-- 本期实际总销量 -->
	       l.acctqsales,<!-- 同期实际总销量 -->
	       l.yoy,<!-- 本期区间销量增速 -->
	       l.totalyoy,<!-- 本期销量总增速 -->
	       l.mixChanges,<!-- 本期区间mix变化（总变化一定为0，总mix一定为1） -->
	       t.manf_id attributeId,<!-- 系别id -->
	       t.manf_name attributeName,<!-- 系别名称 -->
	       t.accBqTotalMix_attr mix_attr,<!-- 本期系别区间mix -->
	       t.accTqTotalMix_attr,<!-- 同期系别区间mix -->
	       t.actrueBqSales_attr sales_attr,<!-- 本期系别区间实际总销量（放大后） -->
	       t.actrueTqSales_attr,<!-- 同期系别区间实际总销量（放大后） -->
	       t.accbqsales_attr totalSales_attr,<!-- 本期系别总销量 -->
	       t.acctqsales_attr,<!-- 同期系别总销量 -->
	       t.yoy_attr salesChange_attr,<!-- 系别区间销量增速 -->
	       t.totalyoy_attr totalSalesChange_attr,<!-- 系别总销量增速（最后一行的total） -->
	       t.mixChanges_attr mixChange_attr,<!-- 系别区间mix变化 -->
	       t.actrueBqSales_attr - t.actrueTqSales_attr salesChanges,<!-- 系别销量变化（没用到） -->
	       case
	         when l.actrueBqSales is not null and l.actrueBqSales != 0 then
	          <!-- t.actrueBqSales_attr / l.actrueBqSales -->
	          t.actrueBqSales_attr / t.actrueBqAllSales_attr
	         else
	          null
	       end shares_attr,<!-- 系别区间份额 -->
	       case
	         when t.actrueBqAllSales_attr is not null and t.actrueBqAllSales_attr != 0 and
	              t.actrueTqAllSales_attr is not null and t.actrueTqAllSales_attr != 0 then
	          t.actrueBqSales_attr / t.actrueBqAllSales_attr -
	          t.actrueTqSales_attr / t.actrueTqAllSales_attr
	         when (t.actrueBqAllSales_attr is null or t.actrueBqAllSales_attr = 0) and
	              t.actrueTqAllSales_attr is not null and t.actrueTqAllSales_attr != 0 then
	          0 - t.actrueTqSales_attr / t.actrueTqAllSales_attr
	         when (t.actrueBqAllSales_attr is not null and t.actrueBqAllSales_attr != 0) and
	              (t.actrueTqAllSales_attr is null or t.actrueTqAllSales_attr = 0) then
	          t.actrueBqSales_attr / t.actrueBqAllSales_attr
	         else
	          null
	       end sharesChange_attr,<!-- 系别区间份额变化 -->
	       
	       t.accBqAllMix_attr allMix_attr,<!-- 本期系别区间totalmix（列表最后一列total） -->
	       t.accTqAllMix_attr,<!-- 本期系别区间totalmix（列表最后一列total） -->
	       t.actrueBqAllSales_attr allSales_attr,<!-- 本期系别区间total总销量（最后一列） -->
	       t.actrueTqAllSales_attr,<!-- 同期系别区间total总销量 -->
	       
	       t.accbqAllsales_attr,<!-- 本期所有选择系别总销量（一定小于等于列表前面的累计销量） -->
	       t.acctqAllsales_attr,<!-- 同期所有选择系别总销量 -->
	       t.yoyAll_attr allSalesChange_attr,<!-- 所选系别总的区间销量增速 -->
	       t.totalAllyoy_attr,<!-- 所选系别总的销量增速（最后一行的total） -->
	       t.mixAllChanges_attr allMixchange_attr,<!-- 所选系别 区间totalmix变化（列表最后一列total）-->
	       t.actrueBqAllSales_attr - t.actrueTqAllSales_attr salesAllChanges,<!-- 所选系别总销量变化（没用到） -->
	       case
	         when l.actrueBqSales is not null and l.actrueBqSales != 0 then
	          t.actrueBqAllSales_attr / t.actrueBqAllSales_attr
	         else
	          null
	       end sharesAll,<!-- 所选系别区间总份额 （列表最后一列total）-->
	       0 totalSharesChange_attr,<!-- 所选系别区间总份额变化（列表最后一列total） -->
	       
	       case when t.accbqAllsales_attr is not null and t.accbqAllsales_attr !=0 then 
	       t.accbqsales_attr/t.accbqAllsales_attr
	       else null end totalShares_attr,<!-- 系别总的份额 （列表最后一行total）-->
	       case when t.accbqAllsales_attr is not null and t.accbqAllsales_attr !=0 
	       	   and t.acctqAllsales_attr is not null and t.acctqAllsales_attr !=0 then 
	       t.accbqsales_attr/t.accbqAllsales_attr  - t.acctqsales_attr/t.acctqAllsales_attr
	        when (t.accbqAllsales_attr is not null and t.accbqAllsales_attr !=0 )
	       	   and (t.acctqAllsales_attr is null or t.acctqAllsales_attr =0) then
	       	   t.accbqsales_attr/t.accbqAllsales_attr
	       	 when (t.accbqAllsales_attr is null or t.accbqAllsales_attr =0)
	       	   and (t.acctqAllsales_attr is not null and t.acctqAllsales_attr !=0) then
	       	   0 - t.acctqsales_attr/t.acctqAllsales_attr
	        else null end totalSharesChanges<!-- 系别总份额变化（列表最后一行total） -->
	  from total_table l
	  left join attr_table t
	    on l.fsort = t.fsort
	   and l.manf_id = t.manf_id
	 order by l.fsort, l.sort_num
)        
select fsort,
	       segment,
	       case
	         when accBqTotalMix is not null then
	          to_char(accBqTotalMix*100,'fm99999999990.0')
	         else
	          '-'
	       end accBqTotalMix,<!-- 本期总览区间mix -->
	       case
	         when accTqTotalMix is not null then
	          to_char(accTqTotalMix*100,'fm99999999990.0')
	         else
	          '-'
	       end accTqTotalMix,<!-- 同期总览区间mix -->
	       case
	         when actrueBqSales is not null then
	          to_char(actrueBqSales,'fm99999999990')
	         else
	          '-'
	       end actrueBqSales,<!-- 本期实际区间销量 -->
	       case
	         when actrueTqSales is not null then
	          to_char(actrueTqSales,'fm99999999990')
	         else
	          '-'
	       end actrueTqSales,<!-- 同期实际区间销量 -->
	       case
	         when accbqsales is not null then
	          to_char(accbqsales,'fm99999999990')
	         else
	          '-'
	       end accbqsales,<!-- 本期实际总销量 -->
	       case
	         when acctqsales is not null then
	          to_char(acctqsales,'fm99999999990')
	         else
	          '-'
	       end acctqsales,<!-- 同期实际总销量 -->
	       case
	         when yoy is not null then
	          to_char(yoy*100,'fm99999999990.0')
	         else
	          '-'
	       end yoy,<!-- 本期区间销量增速 -->
	       case
	         when totalyoy is not null then
	          to_char(totalyoy*100,'fm99999999990.0')
	         else
	          '-'
	       end totalyoy,<!-- 本期销量总增速 -->
	       case
	         when mixChanges is not null then
	          to_char(mixChanges*100,'fm99999999990.0')
	         else
	          '-'
	       end mixChanges,<!-- 本期区间mix变化（总变化一定为0，总mix一定为1） -->
	       attributeId,<!-- 系别id -->
	       attributeName,<!-- 系别名称 -->
	       case
	         when mix_attr is not null then
	          to_char(mix_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end mix_attr,<!-- 本期系别区间mix -->
	       case
	         when accTqTotalMix_attr is not null then
	          to_char(accTqTotalMix_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end accTqTotalMix_attr,<!-- 同期系别区间mix -->
	       case
	         when sales_attr is not null then
	          to_char(sales_attr,'fm99999999990')
	         else
	          '-'
	       end sales_attr,<!-- 本期系别区间实际总销量（放大后） -->
	       case
	         when actrueTqSales_attr is not null then
	          to_char(actrueTqSales_attr,'fm99999999990')
	         else
	          '-'
	       end actrueTqSales_attr,<!-- 同期系别区间实际总销量（放大后） -->
	       case
	         when totalSales_attr is not null then
	          to_char(totalSales_attr,'fm99999999990')
	         else
	          '-'
	       end totalSales_attr,<!-- 本期系别总销量 -->
	       case
	         when acctqsales_attr is not null then
	          to_char(acctqsales_attr,'fm99999999990')
	         else
	          '-'
	       end acctqsales_attr,<!-- 同期系别总销量 -->
	       case
	         when salesChange_attr is not null then
	          to_char(salesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end salesChange_attr,<!-- 系别区间销量增速 -->
	       case
	         when totalSalesChange_attr is not null then
	          to_char(totalSalesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end totalSalesChange_attr,<!-- 系别总销量增速（最后一行的total） -->
	       case
	         when mixChange_attr is not null then
	          to_char(mixChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end mixChange_attr,<!-- 系别区间mix变化 -->
	       case
	         when salesChanges is not null then
	          to_char(salesChanges,'fm99999999990')
	         else
	          '-'
	       end salesChanges,<!-- 系别销量变化（没用到） -->
	       case
	         when shares_attr is not null then
	          to_char(shares_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end shares_attr,<!-- 系别区间份额 -->
	       case
	         when sharesChange_attr is not null then
	          to_char(sharesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end sharesChange_attr,<!-- 系别区间份额变化 -->
	       case
	         when allMix_attr is not null then
	          to_char(allMix_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end allMix_attr,<!-- 本期系别区间totalmix（列表最后一列total） -->
	       case
	         when accTqAllMix_attr is not null then
	          to_char(accTqAllMix_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end accTqAllMix_attr,<!-- 本期系别区间totalmix（列表最后一列total） -->
	       case
	         when allSales_attr is not null then
	          to_char(allSales_attr,'fm99999999990')
	         else
	          '-'
	       end allSales_attr,<!-- 本期系别区间total总销量（最后一列） -->
	       case
	         when actrueTqAllSales_attr is not null then
	          to_char(actrueTqAllSales_attr,'fm99999999990')
	         else
	          '-'
	       end actrueTqAllSales_attr,<!-- 同期系别区间total总销量 -->
	       case
	         when accbqAllsales_attr is not null then
	          to_char(accbqAllsales_attr,'fm99999999990')
	         else
	          '-'
	       end accbqAllsales_attr,<!-- 本期所有选择系别总销量（一定小于等于列表前面的累计销量） -->
	       case
	         when acctqAllsales_attr is not null then
	          to_char(acctqAllsales_attr,'fm99999999990')
	         else
	          '-'
	       end acctqAllsales_attr,<!-- 同期所有选择系别总销量 -->
	       case
	         when allSalesChange_attr is not null then
	          to_char(allSalesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end allSalesChange_attr,<!-- 所选系别总的区间销量增速 -->
	       case
	         when totalAllyoy_attr is not null then
	          to_char(totalAllyoy_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end totalAllyoy_attr,<!-- 所选系别总的销量增速（最后一行、最后一列的total） -->
	       case
	         when allMixchange_attr is not null then
	          to_char(allMixchange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end allMixchange_attr,<!-- 所选系别 区间totalmix变化（列表最后一列total）-->
	       case
	         when salesAllChanges is not null then
	          to_char(salesAllChanges,'fm99999999990')
	         else
	          '-'
	       end salesAllChanges,<!-- 所选系别总销量变化（没用到） -->
	       case
	         when sharesAll is not null then
	          to_char(sharesAll*100,'fm99999999990.0')
	         else
	          '-'
	       end sharesAll,<!-- 所选系别区间总份额 （列表最后一列total）-->
	       case
	         when totalSharesChange_attr is not null then
	          to_char(totalSharesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end totalSharesChange_attr,<!-- 所选系别区间总份额变化（列表最后一列total） -->
	       case
	         when totalShares_attr is not null then
	          to_char(totalShares_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end totalShares_attr,<!-- 系别总的份额 （列表最后一行total）-->
	       case
	         when totalSharesChanges is not null then
	          to_char(totalSharesChanges*100,'fm99999999990.0')
	         else
	          '-'
	       end totalSharesChanges<!-- 系别总份额变化（列表最后一行total） -->
	       from lastestData 
</select>

<!-- 厂商品牌 -->
<select id="getManfBrandData" parameterClass="java.util.HashMap" resultMap="overview">
with left_table as
	(
		$leftSegmentSql$
	),
left_table2 as (
  select distinct l.segment,l.fsort,o.manf_brand_id,o.manf_brand_name
  	,row_number() over(partition by l.fsort order by instr(#manfBrandIds_sort#,(','||o.manf_brand_id||','))) sort_num
  from left_table l left join dm_manf_brand o
  on 1=1
  where o.manf_brand_id in ($manfBrandIds$)
),
<include refid="accTotalSql"/>
bqtotalsales_attr as
 (select sum(t.bq_sales) / $monthNum$ accBqTotalSales_attr,
 	o.manf_brand_id,o.manf_brand_name
    from <include refid="mixTableSql" /> t
    left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_manf_brand o
    on m.manf_brand_id = o.manf_brand_id
    <include refid="tableSql"/>
   where 
   t.ym between $startYm$ and $endYm$
   and o.manf_brand_id in ($manfBrandIds$)
    <include refid="paramSql"/>
   group by o.manf_brand_id,o.manf_brand_name
   ), 
tqtotalsales_attr as
 (select sum(t.bq_sales) / $avgMonthNum$ accTqTotalSales_attr,o.manf_brand_id,o.manf_brand_name
    from <include refid="mixTableSql" /> t
   left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_manf_brand o 
    on m.manf_brand_id = o.manf_brand_id
    <include refid="tableSql"/>
   where t.ym between $startLastYm$ and $endLastYm$
   and o.manf_brand_id in ($manfBrandIds$)
    <include refid="paramSql"/>
  group by o.manf_brand_id,o.manf_brand_name
  ),       
totalSales_attr as
 (select b.accBqTotalSales_attr, t.accTqTotalSales_attr,
 	case when b.manf_brand_id is not null then 
     b.manf_brand_id else t.manf_brand_id end manf_brand_id,
    case when b.manf_brand_name is not null then 
     b.manf_brand_name else t.manf_brand_name end manf_brand_name
    from bqtotalsales_attr b
    full join tqtotalsales_attr t
      on b.manf_brand_id = t.manf_brand_id),  
      
accbqRegionSaledata_attr as
 (select 
 	$priceSegmentSql$
  	fsort,
    sum(t.bq_sales) / $monthNum$ accRegionBqSales_attr,
    o.manf_brand_id
    from <include refid="mixTableSql" /> t
  left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_manf_brand o 
    on m.manf_brand_id = o.manf_brand_id
      <include refid="tableSql"/>
   where t.ym between $startYm$ and $endYm$
   and o.manf_brand_id in ($manfBrandIds$)
    <include refid="paramSql"/>
     <!-- and t.bq_sales is not null -->
   group by 
   		$priceSegmentSql$
        ,o.manf_brand_id
   order by fsort),
acctqRegionSaledata_attr as
 (select 
 		$priceSegmentSql$
 		 fsort,
         sum(t.bq_sales) / $avgMonthNum$ accRegionTqSales_attr,
         o.manf_brand_id
    from <include refid="mixTableSql" /> t
  left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_manf_brand o 
   on m.manf_brand_id = o.manf_brand_id
      <include refid="tableSql"/>
   where t.ym between $startLastYm$ and $endLastYm$
    and o.manf_brand_id in ($manfBrandIds$)
    <include refid="paramSql"/>
     <!-- and t.bq_sales is not null -->
   group by 
   		$priceSegmentSql$
        ,o.manf_brand_id
   order by fsort),    
   
left_attr_table as (
	select l.fsort,
         l.segment,
         l.manf_brand_id,
         l.manf_brand_name,
         b.accRegionBqSales_attr / s.accBqTotalSales_attr accBqTotalMix_attr,
         c.accRegionTqSales_attr / s.accTqTotalSales_attr accTqTotalMix_attr
    from left_table2 l
    left join accbqRegionSaledata_attr b
      on l.fsort = b.fsort
      and l.manf_brand_id = b.manf_brand_id
    left join acctqRegionSaledata_attr c
      on l.fsort = c.fsort
      and l.manf_brand_id = c.manf_brand_id
    left join totalSales_attr s
      on l.manf_brand_id = s.manf_brand_id
    
   order by l.fsort
),      
accbqactrueTotalSales_attr as
 (select 
         sum(<include refid="salesElement"/>) / $monthNum$  accbqsales_attr,
         o.manf_brand_id
    from <include refid="actrueSalesTables" /> t
  left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_manf_brand o 
   on m.manf_brand_id = o.manf_brand_id
    <include refid="tableSql"/>
   where t.year || lpad(t.month_id, 2, 0) between $startYm$ and $endYm$
   and o.manf_brand_id in ($manfBrandIds$)
    <include refid="paramSql"/>
   group by o.manf_brand_id
  
  ),
acctqactrueTotalSales_attr as
 (select 
    sum(<include refid="salesElement"/>) / $avgMonthNum$  acctqsales_attr,
    o.manf_brand_id
    from <include refid="actrueSalesTables" /> t
   left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_manf_brand o 
    on m.manf_brand_id = o.manf_brand_id
    <include refid="tableSql"/>
   where (t.year || lpad(t.month_id, 2, 0) between $startLastYm$ and $endLastYm$)
   and o.manf_brand_id in ($manfBrandIds$)
    <include refid="paramSql"/>
   group by o.manf_brand_id
  
  )  ,
  accactrueTotalSales_attr as (
      select a.accbqsales_attr,a.manf_brand_id,b.acctqsales_attr from accbqactrueTotalSales_attr a  left join acctqactrueTotalSales_attr b on a.manf_brand_id = b.manf_brand_id
  ),
  
accbqactrueAllSales_attr as
 (select 
         sum(<include refid="salesElement"/>) / $monthNum$  accbqAllsales_attr
    from <include refid="actrueSalesTables" /> t
  left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_manf_brand o 
   on m.manf_brand_id = o.manf_brand_id
    <include refid="tableSql"/>
   where t.year || lpad(t.month_id, 2, 0) between $startYm$ and $endYm$
   and o.manf_brand_id in ($manfBrandIds$)
    <include refid="paramSql"/>
  ),
acctqactrueAllSales_attr as
 (select 
    sum(<include refid="salesElement"/>) / $avgMonthNum$  acctqAllsales_attr
    from <include refid="actrueSalesTables" /> t
   left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_manf_brand o 
    on m.manf_brand_id = o.manf_brand_id
    <include refid="tableSql"/>
   where (t.year || lpad(t.month_id, 2, 0) between $startLastYm$ and $endLastYm$)
   and o.manf_brand_id in ($manfBrandIds$)
    <include refid="paramSql"/>
  )  ,
accactrueAllSales_attr as (
      select a.accbqAllsales_attr,b.acctqAllsales_attr from accbqactrueAllSales_attr a  left join acctqactrueAllSales_attr b on 1=1
  ),  
<!-- 系别区间销量 -->
attr_region_sales as (
    select l.fsort,
         l.segment,
         l.manf_brand_id,
         l.manf_brand_name,
         l.accBqTotalMix_attr,
         l.accTqTotalMix_attr,
         l.accBqTotalMix_attr * a.accbqsales_attr actrueBqSales_attr,
         l.accTqTotalMix_attr * a.acctqsales_attr actrueTqSales_attr,    
         a.accbqsales_attr,
         a.acctqsales_attr     
         from left_attr_table l
    left join accactrueTotalSales_attr a
      on l.manf_brand_id = a.manf_brand_id
   order by l.fsort, l.manf_brand_id 
),
<!-- 最后一列区间total销量    -->
attr_region_totalsales as(
  select l.fsort,
         l.segment,
         sum(l.actrueBqSales_attr) actrueBqAllSales_attr,
         sum(l.actrueTqSales_attr) actrueTqAllSales_attr
         from attr_region_sales l 
         group by l.fsort,l.segment
),
<!-- 最后一列区间total销量  与mix  -->
attr_region_mix_sales as (
  select l.fsort,
         l.segment,
         l.actrueBqAllSales_attr,
         l.actrueTqAllSales_attr,
         case when b.accbqAllsales_attr is not null and b.accbqAllsales_attr !=0
           then l.actrueBqAllSales_attr / b.accbqAllsales_attr 
             else null end accBqAllMix_attr ,
         case when b.acctqAllsales_attr is not null and b.acctqAllsales_attr !=0
           then l.actrueTqAllSales_attr / b.acctqAllsales_attr 
             else null end accTqAllMix_attr,
         b.accbqAllsales_attr,
         b.acctqAllsales_attr          
         from attr_region_totalsales l
         left join accactrueAllSales_attr b
         on 1=1         
),   
attr_table as(
	select l.fsort,
         l.segment,
         l.manf_brand_id,
         l.manf_brand_name,
         l.accBqTotalMix_attr,
         l.accTqTotalMix_attr,
         l.actrueBqSales_attr,
         l.actrueTqSales_attr,   
         l.accbqsales_attr,
         l.acctqsales_attr,
         b.actrueBqAllSales_attr,
         b.actrueTqAllSales_attr,
         b.accBqAllMix_attr,
         b.accTqAllMix_attr,
         b.accbqAllsales_attr,
         b.acctqAllsales_attr,
         case when l.actrueTqSales_attr is not null and l.actrueTqSales_attr !=0
           then (l.actrueBqSales_attr -l.actrueTqSales_attr)/ l.actrueTqSales_attr
             else null end yoy_attr,
         case
           when l.acctqsales_attr is not null and l.acctqsales_attr != 0 then
            (l.accbqsales_attr - l.acctqsales_attr) / l.acctqsales_attr
           else
            null
         end totalyoy_attr,      
          case when nvl(l.accBqTotalMix_attr,0) = 0 and nvl(l.accTqTotalMix_attr,0) = 0 then null
         	else nvl(l.accBqTotalMix_attr,0) - nvl(l.accTqTotalMix_attr,0)
         	end  mixChanges_attr,
         case when b.actrueTqAllSales_attr is not null and b.actrueTqAllSales_attr != 0 
          then (b.actrueBqAllSales_attr - b.actrueTqAllSales_attr) / b.actrueTqAllSales_attr
            else null 
              end yoyAll_attr, 
         case
           when b.acctqAllsales_attr is not null and
                b.acctqAllsales_attr != 0 then
            (b.accbqAllsales_attr - b.acctqAllsales_attr) /
            b.acctqAllsales_attr
           else
            null
         end totalAllyoy_attr,     
         case when nvl(b.accBqAllMix_attr,0) =0 and nvl(b.accTqAllMix_attr,0)=0 then null
           else  nvl(b.accBqAllMix_attr,0) - nvl(b.accTqAllMix_attr,0) end mixAllChanges_attr
        from attr_region_sales l
        left join attr_region_mix_sales b
        on l.fsort = b.fsort 
),  
lastestData as (
	select l.fsort,
	       l.segment,
	       l.accBqTotalMix,<!-- 本期总览区间mix -->
	       l.accTqTotalMix,<!-- 同期总览区间mix -->
	       l.actrueBqSales,<!-- 本期实际区间销量 -->
	       l.actrueTqSales,<!-- 同期实际区间销量 -->
	       l.accbqsales,<!-- 本期实际总销量 -->
	       l.acctqsales,<!-- 同期实际总销量 -->
	       l.yoy,<!-- 本期区间销量增速 -->
	       l.totalyoy,<!-- 本期销量总增速 -->
	       l.mixChanges,<!-- 本期区间mix变化（总变化一定为0，总mix一定为1） -->
	       t.manf_brand_id attributeId,<!-- 系别id -->
	       t.manf_brand_name attributeName,<!-- 系别名称 -->
	       t.accBqTotalMix_attr mix_attr,<!-- 本期系别区间mix -->
	       t.accTqTotalMix_attr,<!-- 同期系别区间mix -->
	       t.actrueBqSales_attr sales_attr,<!-- 本期系别区间实际总销量（放大后） -->
	       t.actrueTqSales_attr,<!-- 同期系别区间实际总销量（放大后） -->
	       t.accbqsales_attr totalSales_attr,<!-- 本期系别总销量 -->
	       t.acctqsales_attr,<!-- 同期系别总销量 -->
	       t.yoy_attr salesChange_attr,<!-- 系别区间销量增速 -->
	       t.totalyoy_attr totalSalesChange_attr,<!-- 系别总销量增速（最后一行的total） -->
	       t.mixChanges_attr mixChange_attr,<!-- 系别区间mix变化 -->
	       t.actrueBqSales_attr - t.actrueTqSales_attr salesChanges,<!-- 系别销量变化（没用到） -->
	       case
	         when l.actrueBqSales is not null and l.actrueBqSales != 0 then
	          <!-- t.actrueBqSales_attr / l.actrueBqSales -->
	          t.actrueBqSales_attr / t.actrueBqAllSales_attr
	         else
	          null
	       end shares_attr,<!-- 系别区间份额 -->
	       case
	         when t.actrueBqAllSales_attr is not null and t.actrueBqAllSales_attr != 0 and
	              t.actrueTqAllSales_attr is not null and t.actrueTqAllSales_attr != 0 then
	          t.actrueBqSales_attr / t.actrueBqAllSales_attr -
	          t.actrueTqSales_attr / t.actrueTqAllSales_attr
	         when (t.actrueBqAllSales_attr is null or t.actrueBqAllSales_attr = 0) and
	              t.actrueTqAllSales_attr is not null and t.actrueTqAllSales_attr != 0 then
	          0 - t.actrueTqSales_attr / t.actrueTqAllSales_attr
	         when (t.actrueBqAllSales_attr is not null and t.actrueBqAllSales_attr != 0) and
	              (t.actrueTqAllSales_attr is null or t.actrueTqAllSales_attr = 0) then
	          t.actrueBqSales_attr / t.actrueBqAllSales_attr
	         else
	          null
	       end sharesChange_attr,<!-- 系别区间份额变化 -->
	       
	       t.accBqAllMix_attr allMix_attr,<!-- 本期系别区间totalmix（列表最后一列total） -->
	       t.accTqAllMix_attr,<!-- 本期系别区间totalmix（列表最后一列total） -->
	       t.actrueBqAllSales_attr allSales_attr,<!-- 本期系别区间total总销量（最后一列） -->
	       t.actrueTqAllSales_attr,<!-- 同期系别区间total总销量 -->
	       
	       t.accbqAllsales_attr,<!-- 本期所有选择系别总销量（一定小于等于列表前面的累计销量） -->
	       t.acctqAllsales_attr,<!-- 同期所有选择系别总销量 -->
	       t.yoyAll_attr allSalesChange_attr,<!-- 所选系别总的区间销量增速 -->
	       t.totalAllyoy_attr,<!-- 所选系别总的销量增速（最后一行的total） -->
	       t.mixAllChanges_attr allMixchange_attr,<!-- 所选系别 区间totalmix变化（列表最后一列total）-->
	       t.actrueBqAllSales_attr - t.actrueTqAllSales_attr salesAllChanges,<!-- 所选系别总销量变化（没用到） -->
	       case
	         when l.actrueBqSales is not null and l.actrueBqSales != 0 then
	          t.actrueBqAllSales_attr / t.actrueBqAllSales_attr
	         else
	          null
	       end sharesAll,<!-- 所选系别区间总份额 （列表最后一列total）-->
	       0 totalSharesChange_attr,<!-- 所选系别区间总份额变化（列表最后一列total） -->
	       
	       case when t.accbqAllsales_attr is not null and t.accbqAllsales_attr !=0 then 
	       t.accbqsales_attr/t.accbqAllsales_attr
	       else null end totalShares_attr,<!-- 系别总的份额 （列表最后一行total）-->
	       case when t.accbqAllsales_attr is not null and t.accbqAllsales_attr !=0 
	       	   and t.acctqAllsales_attr is not null and t.acctqAllsales_attr !=0 then 
	       t.accbqsales_attr/t.accbqAllsales_attr  - t.acctqsales_attr/t.acctqAllsales_attr
	        when (t.accbqAllsales_attr is not null and t.accbqAllsales_attr !=0 )
	       	   and (t.acctqAllsales_attr is null or t.acctqAllsales_attr =0) then
	       	   t.accbqsales_attr/t.accbqAllsales_attr
	       	 when (t.accbqAllsales_attr is null or t.accbqAllsales_attr =0)
	       	   and (t.acctqAllsales_attr is not null and t.acctqAllsales_attr !=0) then
	       	   0 - t.acctqsales_attr/t.acctqAllsales_attr
	        else null end totalSharesChanges<!-- 系别总份额变化（列表最后一行total） -->
	  from total_table l
	  left join attr_table t
	    on l.fsort = t.fsort
	   and l.manf_brand_id = t.manf_brand_id
	 order by l.fsort, l.sort_num
)        
select fsort,
	       segment,
	       case
	         when accBqTotalMix is not null then
	          to_char(accBqTotalMix*100,'fm99999999990.0')
	         else
	          '-'
	       end accBqTotalMix,<!-- 本期总览区间mix -->
	       case
	         when accTqTotalMix is not null then
	          to_char(accTqTotalMix*100,'fm99999999990.0')
	         else
	          '-'
	       end accTqTotalMix,<!-- 同期总览区间mix -->
	       case
	         when actrueBqSales is not null then
	          to_char(actrueBqSales,'fm99999999990')
	         else
	          '-'
	       end actrueBqSales,<!-- 本期实际区间销量 -->
	       case
	         when actrueTqSales is not null then
	          to_char(actrueTqSales,'fm99999999990')
	         else
	          '-'
	       end actrueTqSales,<!-- 同期实际区间销量 -->
	       case
	         when accbqsales is not null then
	          to_char(accbqsales,'fm99999999990')
	         else
	          '-'
	       end accbqsales,<!-- 本期实际总销量 -->
	       case
	         when acctqsales is not null then
	          to_char(acctqsales,'fm99999999990')
	         else
	          '-'
	       end acctqsales,<!-- 同期实际总销量 -->
	       case
	         when yoy is not null then
	          to_char(yoy*100,'fm99999999990.0')
	         else
	          '-'
	       end yoy,<!-- 本期区间销量增速 -->
	       case
	         when totalyoy is not null then
	          to_char(totalyoy*100,'fm99999999990.0')
	         else
	          '-'
	       end totalyoy,<!-- 本期销量总增速 -->
	       case
	         when mixChanges is not null then
	          to_char(mixChanges*100,'fm99999999990.0')
	         else
	          '-'
	       end mixChanges,<!-- 本期区间mix变化（总变化一定为0，总mix一定为1） -->
	       attributeId,<!-- 系别id -->
	       attributeName,<!-- 系别名称 -->
	       case
	         when mix_attr is not null then
	          to_char(mix_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end mix_attr,<!-- 本期系别区间mix -->
	       case
	         when accTqTotalMix_attr is not null then
	          to_char(accTqTotalMix_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end accTqTotalMix_attr,<!-- 同期系别区间mix -->
	       case
	         when sales_attr is not null then
	          to_char(sales_attr,'fm99999999990')
	         else
	          '-'
	       end sales_attr,<!-- 本期系别区间实际总销量（放大后） -->
	       case
	         when actrueTqSales_attr is not null then
	          to_char(actrueTqSales_attr,'fm99999999990')
	         else
	          '-'
	       end actrueTqSales_attr,<!-- 同期系别区间实际总销量（放大后） -->
	       case
	         when totalSales_attr is not null then
	          to_char(totalSales_attr,'fm99999999990')
	         else
	          '-'
	       end totalSales_attr,<!-- 本期系别总销量 -->
	       case
	         when acctqsales_attr is not null then
	          to_char(acctqsales_attr,'fm99999999990')
	         else
	          '-'
	       end acctqsales_attr,<!-- 同期系别总销量 -->
	       case
	         when salesChange_attr is not null then
	          to_char(salesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end salesChange_attr,<!-- 系别区间销量增速 -->
	       case
	         when totalSalesChange_attr is not null then
	          to_char(totalSalesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end totalSalesChange_attr,<!-- 系别总销量增速（最后一行的total） -->
	       case
	         when mixChange_attr is not null then
	          to_char(mixChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end mixChange_attr,<!-- 系别区间mix变化 -->
	       case
	         when salesChanges is not null then
	          to_char(salesChanges,'fm99999999990')
	         else
	          '-'
	       end salesChanges,<!-- 系别销量变化（没用到） -->
	       case
	         when shares_attr is not null then
	          to_char(shares_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end shares_attr,<!-- 系别区间份额 -->
	       case
	         when sharesChange_attr is not null then
	          to_char(sharesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end sharesChange_attr,<!-- 系别区间份额变化 -->
	       case
	         when allMix_attr is not null then
	          to_char(allMix_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end allMix_attr,<!-- 本期系别区间totalmix（列表最后一列total） -->
	       case
	         when accTqAllMix_attr is not null then
	          to_char(accTqAllMix_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end accTqAllMix_attr,<!-- 本期系别区间totalmix（列表最后一列total） -->
	       case
	         when allSales_attr is not null then
	          to_char(allSales_attr,'fm99999999990')
	         else
	          '-'
	       end allSales_attr,<!-- 本期系别区间total总销量（最后一列） -->
	       case
	         when actrueTqAllSales_attr is not null then
	          to_char(actrueTqAllSales_attr,'fm99999999990')
	         else
	          '-'
	       end actrueTqAllSales_attr,<!-- 同期系别区间total总销量 -->
	       case
	         when accbqAllsales_attr is not null then
	          to_char(accbqAllsales_attr,'fm99999999990')
	         else
	          '-'
	       end accbqAllsales_attr,<!-- 本期所有选择系别总销量（一定小于等于列表前面的累计销量） -->
	       case
	         when acctqAllsales_attr is not null then
	          to_char(acctqAllsales_attr,'fm99999999990')
	         else
	          '-'
	       end acctqAllsales_attr,<!-- 同期所有选择系别总销量 -->
	       case
	         when allSalesChange_attr is not null then
	          to_char(allSalesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end allSalesChange_attr,<!-- 所选系别总的区间销量增速 -->
	       case
	         when totalAllyoy_attr is not null then
	          to_char(totalAllyoy_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end totalAllyoy_attr,<!-- 所选系别总的销量增速（最后一行、最后一列的total） -->
	       case
	         when allMixchange_attr is not null then
	          to_char(allMixchange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end allMixchange_attr,<!-- 所选系别 区间totalmix变化（列表最后一列total）-->
	       case
	         when salesAllChanges is not null then
	          to_char(salesAllChanges,'fm99999999990')
	         else
	          '-'
	       end salesAllChanges,<!-- 所选系别总销量变化（没用到） -->
	       case
	         when sharesAll is not null then
	          to_char(sharesAll*100,'fm99999999990.0')
	         else
	          '-'
	       end sharesAll,<!-- 所选系别区间总份额 （列表最后一列total）-->
	       case
	         when totalSharesChange_attr is not null then
	          to_char(totalSharesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end totalSharesChange_attr,<!-- 所选系别区间总份额变化（列表最后一列total） -->
	       case
	         when totalShares_attr is not null then
	          to_char(totalShares_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end totalShares_attr,<!-- 系别总的份额 （列表最后一行total）-->
	       case
	         when totalSharesChanges is not null then
	          to_char(totalSharesChanges*100,'fm99999999990.0')
	         else
	          '-'
	       end totalSharesChanges<!-- 系别总份额变化（列表最后一行total） -->
	       from lastestData 
</select>

<!-- 产地属性 -->
<select id="getPooData" parameterClass="java.util.HashMap" resultMap="overview">
with left_table as
	(
		$leftSegmentSql$
	),
wholeFilter	as (
     select distinct o.poo_attribute_id,o.poo_attribute_name,o.sn sort_num from <include refid="mixTableSql"/> t    
      left join dm_sub_model m
      on t.sub_model_id = m.sub_model_id
      left join dm_poo_attribute o
      on m.poo_attribute_id = o.poo_attribute_id
      <include refid="tableSql_all_1"/>
      where t.ym between $startYm$ and $endYm$
      <include refid="paramSql_all_1"/>
      and o.poo_attribute_id in ($pooAttributeIds$)
),	
left_table2 as (
  select distinct l.segment,l.fsort,o.poo_attribute_id,o.poo_attribute_name
  	,o.sort_num
  from left_table l left join wholeFilter o
  on 1=1
),
<include refid="accTotalSql"/>
bqtotalsales_attr as
 (
  select sum(bq_sales) / $monthNum$ accBqTotalSales_attr,
	 	 poo_attribute_id,poo_attribute_name
  from (
	 select t.bq_sales,
		 	case when o.poo_attribute_id = 2 
	          then 3
	          else o.poo_attribute_id
	        end poo_attribute_id,
	        case when o.poo_attribute_id = 2 
	          then '国产'
	          else o.poo_attribute_name
	        end poo_attribute_name
	    from <include refid="mixTableSql" /> t
	    left join dm_sub_model m 
	    on t.sub_model_id = m.sub_model_id
	    left join dm_poo_attribute o
	    on m.poo_attribute_id = o.poo_attribute_id
	    <include refid="tableSql"/>
	   where 
	   t.ym between $startYm$ and $endYm$
	   and o.poo_attribute_id in ($pooAttributeIds$)
	    <include refid="paramSql"/>
  )
  group by poo_attribute_id,poo_attribute_name
), 
tqtotalsales_attr as
 (
  select sum(bq_sales) / $monthNum$ acctqTotalSales_attr,
	 	 poo_attribute_id,poo_attribute_name
  from (
	 select t.bq_sales,
	        case when o.poo_attribute_id = 2 
	          then 3
	          else o.poo_attribute_id
	        end poo_attribute_id,
	        case when o.poo_attribute_id = 2 
	          then '国产'
	          else o.poo_attribute_name
	        end poo_attribute_name
	    from <include refid="mixTableSql" /> t
	   left join dm_sub_model m 
	    on t.sub_model_id = m.sub_model_id
	    left join dm_poo_attribute o 
	    on m.poo_attribute_id = o.poo_attribute_id
	    <include refid="tableSql"/>
	   where t.ym between $startLastYm$ and $endLastYm$
	   and o.poo_attribute_id in ($pooAttributeIds$)
	    <include refid="paramSql"/>
  )
  group by poo_attribute_id,poo_attribute_name
),       
totalSales_attr as
 (select b.accBqTotalSales_attr, t.accTqTotalSales_attr,
 	case when b.poo_attribute_id is not null then 
     b.poo_attribute_id else t.poo_attribute_id end poo_attribute_id,
    case when b.poo_attribute_name is not null then 
     b.poo_attribute_name else t.poo_attribute_name end poo_attribute_name
    from bqtotalsales_attr b
    full join tqtotalsales_attr t
      on b.poo_attribute_id = t.poo_attribute_id),  
      
accbqRegionSaledata_attr as
(
  select FSORT,
  		 sum(bq_sales) / $monthNum$ accRegionBqSales_attr,
  		 POO_ATTRIBUTE_ID
  from (
	  select 
	 	$priceSegmentSql$
	  	fsort,
	    sum(t.bq_sales) bq_sales,
	    case when o.poo_attribute_id = 2 
          then 3
          else o.poo_attribute_id
        end poo_attribute_id
	    from <include refid="mixTableSql" /> t
	  left join dm_sub_model m 
	    on t.sub_model_id = m.sub_model_id
	    left join dm_poo_attribute o 
	    on m.poo_attribute_id = o.poo_attribute_id
	      <include refid="tableSql"/>
	   where t.ym between $startYm$ and $endYm$
	   and o.poo_attribute_id in ($pooAttributeIds$)
	    <include refid="paramSql"/>
	     <!-- and t.bq_sales is not null -->
	   group by 
	   		$priceSegmentSql$
	        ,o.poo_attribute_id
	   order by fsort
  ) group by FSORT, POO_ATTRIBUTE_ID
),
acctqRegionSaledata_attr as
(
  select FSORT,
  		 sum(bq_sales) / $monthNum$ accRegiontqSales_attr,
  		 POO_ATTRIBUTE_ID
  from (
	  select 
	 		$priceSegmentSql$
	 		 fsort,
	         sum(t.bq_sales) bq_sales,
	         case when o.poo_attribute_id = 2 
	           then 3
	           else o.poo_attribute_id
	         end poo_attribute_id
	    from <include refid="mixTableSql" /> t
	  left join dm_sub_model m 
	    on t.sub_model_id = m.sub_model_id
	    left join dm_poo_attribute o 
	   on m.poo_attribute_id = o.poo_attribute_id
	      <include refid="tableSql"/>
	   where t.ym between $startLastYm$ and $endLastYm$
	    and o.poo_attribute_id in ($pooAttributeIds$)
	    <include refid="paramSql"/>
	     <!-- and t.bq_sales is not null -->
	   group by 
	   		$priceSegmentSql$
	        ,o.poo_attribute_id
	   order by fsort
  ) group by FSORT, POO_ATTRIBUTE_ID
), 
left_attr_table as (
	select l.fsort,
         l.segment,
         l.poo_attribute_id,
         l.poo_attribute_name,
         b.accRegionBqSales_attr / s.accBqTotalSales_attr accBqTotalMix_attr,
         c.accRegionTqSales_attr / s.accTqTotalSales_attr accTqTotalMix_attr
    from left_table2 l
    left join accbqRegionSaledata_attr b
      on l.fsort = b.fsort
      and l.poo_attribute_id = b.poo_attribute_id
    left join acctqRegionSaledata_attr c
      on l.fsort = c.fsort
      and l.poo_attribute_id = c.poo_attribute_id
    left join totalSales_attr s
      on l.poo_attribute_id = s.poo_attribute_id
   
   order by l.fsort
),      
accbqactrueTotalSales_attr as
(
  select sum(accbqsales_attr) / $monthNum$  accbqsales_attr,poo_attribute_id
  from (
	  select sum(<include refid="salesElement"/>) accbqsales_attr,
	         case when o.poo_attribute_id = 2 
	           then 3
               else o.poo_attribute_id
             end poo_attribute_id
	    from <include refid="actrueSalesTables" /> t
	  left join dm_sub_model m 
	    on t.sub_model_id = m.sub_model_id
	    left join dm_poo_attribute o 
	   on m.poo_attribute_id = o.poo_attribute_id
	    <include refid="tableSql"/>
	   where t.year || lpad(t.month_id, 2, 0) between $startYm$ and $endYm$
	   and o.poo_attribute_id in ($pooAttributeIds$)
	    <include refid="paramSql"/>
	   group by o.poo_attribute_id
  ) group by poo_attribute_id
),
acctqactrueTotalSales_attr as
(
  select sum(acctqsales_attr) / $monthNum$  acctqsales_attr,poo_attribute_id
  from (
	  select sum(<include refid="salesElement"/>)  acctqsales_attr,
	    	 case when o.poo_attribute_id = 2 
	           then 3
               else o.poo_attribute_id
             end poo_attribute_id
	    from <include refid="actrueSalesTables" /> t
	   left join dm_sub_model m 
	    on t.sub_model_id = m.sub_model_id
	    left join dm_poo_attribute o 
	    on m.poo_attribute_id = o.poo_attribute_id
	    <include refid="tableSql"/>
	   where (t.year || lpad(t.month_id, 2, 0) between $startLastYm$ and $endLastYm$)
	   and o.poo_attribute_id in ($pooAttributeIds$)
	    <include refid="paramSql"/>
	   group by o.poo_attribute_id
  ) group by poo_attribute_id
),
  accactrueTotalSales_attr as (
      select a.accbqsales_attr,a.poo_attribute_id,b.acctqsales_attr from accbqactrueTotalSales_attr a  left join acctqactrueTotalSales_attr b on a.poo_attribute_id = b.poo_attribute_id
  ),
  
accbqactrueAllSales_attr as
 (select 
         sum(<include refid="salesElement"/>) / $monthNum$  accbqAllsales_attr
    from <include refid="actrueSalesTables" /> t
  left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_poo_attribute o 
   on m.poo_attribute_id = o.poo_attribute_id
    <include refid="tableSql"/>
   where t.year || lpad(t.month_id, 2, 0) between $startYm$ and $endYm$
   and o.poo_attribute_id in ($pooAttributeIds$)
    <include refid="paramSql"/>
  ),
acctqactrueAllSales_attr as
 (select 
    sum(<include refid="salesElement"/>) / $avgMonthNum$  acctqAllsales_attr
    from <include refid="actrueSalesTables" /> t
   left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    left join dm_poo_attribute o 
    on m.poo_attribute_id = o.poo_attribute_id
    <include refid="tableSql"/>
   where (t.year || lpad(t.month_id, 2, 0) between $startLastYm$ and $endLastYm$)
   and o.poo_attribute_id in ($pooAttributeIds$)
    <include refid="paramSql"/>
  )  ,
accactrueAllSales_attr as (
      select a.accbqAllsales_attr,b.acctqAllsales_attr from accbqactrueAllSales_attr a  left join acctqactrueAllSales_attr b on 1=1
  ),  
<!-- 系别区间销量 -->
attr_region_sales as (
    select l.fsort,
         l.segment,
         l.poo_attribute_id,
         l.poo_attribute_name,
         l.accBqTotalMix_attr,
         l.accTqTotalMix_attr,
         l.accBqTotalMix_attr * a.accbqsales_attr actrueBqSales_attr,
         l.accTqTotalMix_attr * a.acctqsales_attr actrueTqSales_attr,    
         a.accbqsales_attr,
         a.acctqsales_attr     
         from left_attr_table l
    left join accactrueTotalSales_attr a
      on l.poo_attribute_id = a.poo_attribute_id
   order by l.fsort, l.poo_attribute_id 
),
<!-- 最后一列区间total销量    -->
attr_region_totalsales as(
  select l.fsort,
         l.segment,
         sum(l.actrueBqSales_attr) actrueBqAllSales_attr,
         sum(l.actrueTqSales_attr) actrueTqAllSales_attr
         from attr_region_sales l 
         group by l.fsort,l.segment
),
<!-- 最后一列区间total销量  与mix  -->
attr_region_mix_sales as (
  select l.fsort,
         l.segment,
         l.actrueBqAllSales_attr,
         l.actrueTqAllSales_attr,
         case when b.accbqAllsales_attr is not null and b.accbqAllsales_attr !=0
           then l.actrueBqAllSales_attr / b.accbqAllsales_attr 
             else null end accBqAllMix_attr ,
         case when b.acctqAllsales_attr is not null and b.acctqAllsales_attr !=0
           then l.actrueTqAllSales_attr / b.acctqAllsales_attr 
             else null end accTqAllMix_attr,
         b.accbqAllsales_attr,
         b.acctqAllsales_attr          
         from attr_region_totalsales l
         left join accactrueAllSales_attr b
         on 1=1         
),   
attr_table as(
	select l.fsort,
         l.segment,
         l.poo_attribute_id,
         l.poo_attribute_name,
         l.accBqTotalMix_attr,
         l.accTqTotalMix_attr,
         l.actrueBqSales_attr,
         l.actrueTqSales_attr,   
         l.accbqsales_attr,
         l.acctqsales_attr,
         b.actrueBqAllSales_attr,
         b.actrueTqAllSales_attr,
         b.accBqAllMix_attr,
         b.accTqAllMix_attr,
         b.accbqAllsales_attr,
         b.acctqAllsales_attr,
         case when l.actrueTqSales_attr is not null and l.actrueTqSales_attr !=0
           then (l.actrueBqSales_attr -l.actrueTqSales_attr)/ l.actrueTqSales_attr
             else null end yoy_attr,
         case
           when l.acctqsales_attr is not null and l.acctqsales_attr != 0 then
            (l.accbqsales_attr - l.acctqsales_attr) / l.acctqsales_attr
           else
            null
         end totalyoy_attr,      
          case when nvl(l.accBqTotalMix_attr,0) = 0 and nvl(l.accTqTotalMix_attr,0) = 0 then null
         	else nvl(l.accBqTotalMix_attr,0) - nvl(l.accTqTotalMix_attr,0)
         	end  mixChanges_attr,
         case when b.actrueTqAllSales_attr is not null and b.actrueTqAllSales_attr != 0 
          then (b.actrueBqAllSales_attr - b.actrueTqAllSales_attr) / b.actrueTqAllSales_attr
            else null 
              end yoyAll_attr, 
         case
           when b.acctqAllsales_attr is not null and
                b.acctqAllsales_attr != 0 then
            (b.accbqAllsales_attr - b.acctqAllsales_attr) /
            b.acctqAllsales_attr
           else
            null
         end totalAllyoy_attr,     
         case when nvl(b.accBqAllMix_attr,0) =0 and nvl(b.accTqAllMix_attr,0)=0 then null
           else  nvl(b.accBqAllMix_attr,0) - nvl(b.accTqAllMix_attr,0) end mixAllChanges_attr
        from attr_region_sales l
        left join attr_region_mix_sales b
        on l.fsort = b.fsort     
),  
lastestData as (
	select l.fsort,
	       l.segment,
	       l.accBqTotalMix,<!-- 本期总览区间mix -->
	       l.accTqTotalMix,<!-- 同期总览区间mix -->
	       l.actrueBqSales,<!-- 本期实际区间销量 -->
	       l.actrueTqSales,<!-- 同期实际区间销量 -->
	       l.accbqsales,<!-- 本期实际总销量 -->
	       l.acctqsales,<!-- 同期实际总销量 -->
	       l.yoy,<!-- 本期区间销量增速 -->
	       l.totalyoy,<!-- 本期销量总增速 -->
	       l.mixChanges,<!-- 本期区间mix变化（总变化一定为0，总mix一定为1） -->
	       t.poo_attribute_id attributeId,<!-- 系别id -->
	       t.poo_attribute_name attributeName,<!-- 系别名称 -->
	       t.accBqTotalMix_attr mix_attr,<!-- 本期系别区间mix -->
	       t.accTqTotalMix_attr,<!-- 同期系别区间mix -->
	       t.actrueBqSales_attr sales_attr,<!-- 本期系别区间实际总销量（放大后） -->
	       t.actrueTqSales_attr,<!-- 同期系别区间实际总销量（放大后） -->
	       t.accbqsales_attr totalSales_attr,<!-- 本期系别总销量 -->
	       t.acctqsales_attr,<!-- 同期系别总销量 -->
	       t.yoy_attr salesChange_attr,<!-- 系别区间销量增速 -->
	       t.totalyoy_attr totalSalesChange_attr,<!-- 系别总销量增速（最后一行的total） -->
	       t.mixChanges_attr mixChange_attr,<!-- 系别区间mix变化 -->
	       t.actrueBqSales_attr - t.actrueTqSales_attr salesChanges,<!-- 系别销量变化（没用到） -->
	       case
	         when l.actrueBqSales is not null and l.actrueBqSales != 0 then
	          <!-- t.actrueBqSales_attr / l.actrueBqSales -->
	          t.actrueBqSales_attr / t.actrueBqAllSales_attr
	         else
	          null
	       end shares_attr,<!-- 系别区间份额 -->
	       case
	         when t.actrueBqAllSales_attr is not null and t.actrueBqAllSales_attr != 0 and
	              t.actrueTqAllSales_attr is not null and t.actrueTqAllSales_attr != 0 then
	          t.actrueBqSales_attr / t.actrueBqAllSales_attr -
	          t.actrueTqSales_attr / t.actrueTqAllSales_attr
	         when (t.actrueBqAllSales_attr is null or t.actrueBqAllSales_attr = 0) and
	              t.actrueTqAllSales_attr is not null and t.actrueTqAllSales_attr != 0 then
	          0 - t.actrueTqSales_attr / t.actrueTqAllSales_attr
	         when (t.actrueBqAllSales_attr is not null and t.actrueBqAllSales_attr != 0) and
	              (t.actrueTqAllSales_attr is null or t.actrueTqAllSales_attr = 0) then
	          t.actrueBqSales_attr / t.actrueBqAllSales_attr
	         else
	          null
	       end sharesChange_attr,<!-- 系别区间份额变化 -->
	       
	       t.accBqAllMix_attr allMix_attr,<!-- 本期系别区间totalmix（列表最后一列total） -->
	       t.accTqAllMix_attr,<!-- 本期系别区间totalmix（列表最后一列total） -->
	       t.actrueBqAllSales_attr allSales_attr,<!-- 本期系别区间total总销量（最后一列） -->
	       t.actrueTqAllSales_attr,<!-- 同期系别区间total总销量 -->
	       
	       t.accbqAllsales_attr,<!-- 本期所有选择系别总销量（一定小于等于列表前面的累计销量） -->
	       t.acctqAllsales_attr,<!-- 同期所有选择系别总销量 -->
	       t.yoyAll_attr allSalesChange_attr,<!-- 所选系别总的区间销量增速 -->
	       t.totalAllyoy_attr,<!-- 所选系别总的销量增速（最后一行的total） -->
	       t.mixAllChanges_attr allMixchange_attr,<!-- 所选系别 区间totalmix变化（列表最后一列total）-->
	       t.actrueBqAllSales_attr - t.actrueTqAllSales_attr salesAllChanges,<!-- 所选系别总销量变化（没用到） -->
	       case
	         when l.actrueBqSales is not null and l.actrueBqSales != 0 then
	          t.actrueBqAllSales_attr / t.actrueBqAllSales_attr
	         else
	          null
	       end sharesAll,<!-- 所选系别区间总份额 （列表最后一列total）-->
	       0 totalSharesChange_attr,<!-- 所选系别区间总份额变化（列表最后一列total） -->
	       
	       case when t.accbqAllsales_attr is not null and t.accbqAllsales_attr !=0 then 
	       t.accbqsales_attr/t.accbqAllsales_attr
	       else null end totalShares_attr,<!-- 系别总的份额 （列表最后一行total）-->
	       case when t.accbqAllsales_attr is not null and t.accbqAllsales_attr !=0 
	       	   and t.acctqAllsales_attr is not null and t.acctqAllsales_attr !=0 then 
	       t.accbqsales_attr/t.accbqAllsales_attr  - t.acctqsales_attr/t.acctqAllsales_attr
	        when (t.accbqAllsales_attr is not null and t.accbqAllsales_attr !=0 )
	       	   and (t.acctqAllsales_attr is null or t.acctqAllsales_attr =0) then
	       	   t.accbqsales_attr/t.accbqAllsales_attr
	       	 when (t.accbqAllsales_attr is null or t.accbqAllsales_attr =0)
	       	   and (t.acctqAllsales_attr is not null and t.acctqAllsales_attr !=0) then
	       	   0 - t.acctqsales_attr/t.acctqAllsales_attr
	        else null end totalSharesChanges<!-- 系别总份额变化（列表最后一行total） -->
	  from total_table l
	  left join attr_table t
	    on l.fsort = t.fsort
	   and l.poo_attribute_id = t.poo_attribute_id
	 order by l.fsort, l.sort_num desc
)        
select fsort,
	       segment,
	       case
	         when accBqTotalMix is not null then
	          to_char(accBqTotalMix*100,'fm99999999990.0')
	         else
	          '-'
	       end accBqTotalMix,<!-- 本期总览区间mix -->
	       case
	         when accTqTotalMix is not null then
	          to_char(accTqTotalMix*100,'fm99999999990.0')
	         else
	          '-'
	       end accTqTotalMix,<!-- 同期总览区间mix -->
	       case
	         when actrueBqSales is not null then
	          to_char(actrueBqSales,'fm99999999990')
	         else
	          '-'
	       end actrueBqSales,<!-- 本期实际区间销量 -->
	       case
	         when actrueTqSales is not null then
	          to_char(actrueTqSales,'fm99999999990')
	         else
	          '-'
	       end actrueTqSales,<!-- 同期实际区间销量 -->
	       case
	         when accbqsales is not null then
	          to_char(accbqsales,'fm99999999990')
	         else
	          '-'
	       end accbqsales,<!-- 本期实际总销量 -->
	       case
	         when acctqsales is not null then
	          to_char(acctqsales,'fm99999999990')
	         else
	          '-'
	       end acctqsales,<!-- 同期实际总销量 -->
	       case
	         when yoy is not null then
	          to_char(yoy*100,'fm99999999990.0')
	         else
	          '-'
	       end yoy,<!-- 本期区间销量增速 -->
	       case
	         when totalyoy is not null then
	          to_char(totalyoy*100,'fm99999999990.0')
	         else
	          '-'
	       end totalyoy,<!-- 本期销量总增速 -->
	       case
	         when mixChanges is not null then
	          to_char(mixChanges*100,'fm99999999990.0')
	         else
	          '-'
	       end mixChanges,<!-- 本期区间mix变化（总变化一定为0，总mix一定为1） -->
	       attributeId,<!-- 系别id -->
	       attributeName,<!-- 系别名称 -->
	       case
	         when mix_attr is not null then
	          to_char(mix_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end mix_attr,<!-- 本期系别区间mix -->
	       case
	         when accTqTotalMix_attr is not null then
	          to_char(accTqTotalMix_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end accTqTotalMix_attr,<!-- 同期系别区间mix -->
	       case
	         when sales_attr is not null then
	          to_char(sales_attr,'fm99999999990')
	         else
	          '-'
	       end sales_attr,<!-- 本期系别区间实际总销量（放大后） -->
	       case
	         when actrueTqSales_attr is not null then
	          to_char(actrueTqSales_attr,'fm99999999990')
	         else
	          '-'
	       end actrueTqSales_attr,<!-- 同期系别区间实际总销量（放大后） -->
	       case
	         when totalSales_attr is not null then
	          to_char(totalSales_attr,'fm99999999990')
	         else
	          '-'
	       end totalSales_attr,<!-- 本期系别总销量 -->
	       case
	         when acctqsales_attr is not null then
	          to_char(acctqsales_attr,'fm99999999990')
	         else
	          '-'
	       end acctqsales_attr,<!-- 同期系别总销量 -->
	       case
	         when salesChange_attr is not null then
	          to_char(salesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end salesChange_attr,<!-- 系别区间销量增速 -->
	       case
	         when totalSalesChange_attr is not null then
	          to_char(totalSalesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end totalSalesChange_attr,<!-- 系别总销量增速（最后一行的total） -->
	       case
	         when mixChange_attr is not null then
	          to_char(mixChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end mixChange_attr,<!-- 系别区间mix变化 -->
	       case
	         when salesChanges is not null then
	          to_char(salesChanges,'fm99999999990')
	         else
	          '-'
	       end salesChanges,<!-- 系别销量变化（没用到） -->
	       case
	         when shares_attr is not null then
	          to_char(shares_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end shares_attr,<!-- 系别区间份额 -->
	       case
	         when sharesChange_attr is not null then
	          to_char(sharesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end sharesChange_attr,<!-- 系别区间份额变化 -->
	       case
	         when allMix_attr is not null then
	          to_char(allMix_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end allMix_attr,<!-- 本期系别区间totalmix（列表最后一列total） -->
	       case
	         when accTqAllMix_attr is not null then
	          to_char(accTqAllMix_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end accTqAllMix_attr,<!-- 本期系别区间totalmix（列表最后一列total） -->
	       case
	         when allSales_attr is not null then
	          to_char(allSales_attr,'fm99999999990')
	         else
	          '-'
	       end allSales_attr,<!-- 本期系别区间total总销量（最后一列） -->
	       case
	         when actrueTqAllSales_attr is not null then
	          to_char(actrueTqAllSales_attr,'fm99999999990')
	         else
	          '-'
	       end actrueTqAllSales_attr,<!-- 同期系别区间total总销量 -->
	       case
	         when accbqAllsales_attr is not null then
	          to_char(accbqAllsales_attr,'fm99999999990')
	         else
	          '-'
	       end accbqAllsales_attr,<!-- 本期所有选择系别总销量（一定小于等于列表前面的累计销量） -->
	       case
	         when acctqAllsales_attr is not null then
	          to_char(acctqAllsales_attr,'fm99999999990')
	         else
	          '-'
	       end acctqAllsales_attr,<!-- 同期所有选择系别总销量 -->
	       case
	         when allSalesChange_attr is not null then
	          to_char(allSalesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end allSalesChange_attr,<!-- 所选系别总的区间销量增速 -->
	       case
	         when totalAllyoy_attr is not null then
	          to_char(totalAllyoy_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end totalAllyoy_attr,<!-- 所选系别总的销量增速（最后一行、最后一列的total） -->
	       case
	         when allMixchange_attr is not null then
	          to_char(allMixchange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end allMixchange_attr,<!-- 所选系别 区间totalmix变化（列表最后一列total）-->
	       case
	         when salesAllChanges is not null then
	          to_char(salesAllChanges,'fm99999999990')
	         else
	          '-'
	       end salesAllChanges,<!-- 所选系别总销量变化（没用到） -->
	       case
	         when sharesAll is not null then
	          to_char(sharesAll*100,'fm99999999990.0')
	         else
	          '-'
	       end sharesAll,<!-- 所选系别区间总份额 （列表最后一列total）-->
	       case
	         when totalSharesChange_attr is not null then
	          to_char(totalSharesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end totalSharesChange_attr,<!-- 所选系别区间总份额变化（列表最后一列total） -->
	       case
	         when totalShares_attr is not null then
	          to_char(totalShares_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end totalShares_attr,<!-- 系别总的份额 （列表最后一行total）-->
	       case
	         when totalSharesChanges is not null then
	          to_char(totalSharesChanges*100,'fm99999999990.0')
	         else
	          '-'
	       end totalSharesChanges<!-- 系别总份额变化（列表最后一行total） -->
	       from lastestData 
	       where ATTRIBUTEID != 2
</select>

<!-- 城市层级 -->
<select id="getCityGradeData" parameterClass="java.util.HashMap" resultMap="overview">
with left_table as
	(
		$leftSegmentSql$
	),
left_table2 as (
  select distinct l.segment,l.fsort,o.citygrade_id,o.citygrade_name
  	, row_number() over(partition by l.fsort order by instr(',1,2,3,',(','||o.citygrade_id||','))) sort_num
  from left_table l left join dm_city_grade o
  on 1=1
  where o.citygrade_id in (1, 2, 3)
),
<include refid="accTotalSql"/>
bqtotalsales_attr as
 (select sum(t.bq_sales) / $monthNum$ accBqTotalSales_attr,
 	o.citygrade_id,o.citygrade_name
    from fdm_version_insurance_mix_city t
    left join dm_sub_model m
    on t.sub_model_id = m.sub_model_id
    left join dm_grade_city c 
    on t.city_id = c.city_id
    left join dm_city_grade o
    on c.gradecity_id = o.citygrade_id
    <include refid="tableSql"/>
   where 
   t.ym between $startYm$ and $endYm$
    <include refid="paramSql"/>
   group by o.citygrade_id,o.citygrade_name
   ), 
tqtotalsales_attr as
 (select sum(t.bq_sales) / $avgMonthNum$ accTqTotalSales_attr,o.citygrade_id,o.citygrade_name
    from fdm_version_insurance_mix_city t
    left join dm_sub_model m
    on t.sub_model_id = m.sub_model_id
   left join dm_grade_city c 
    on t.city_id = c.city_id
    left join dm_city_grade o
    on c.gradecity_id = o.citygrade_id
    <include refid="tableSql"/>
   where t.ym between $startLastYm$ and $endLastYm$
    <include refid="paramSql"/>
  group by o.citygrade_id,o.citygrade_name
  ),       
totalSales_attr as
 (select b.accBqTotalSales_attr, t.accTqTotalSales_attr,
 	case when b.citygrade_id is not null then 
     b.citygrade_id else t.citygrade_id end citygrade_id,
    case when b.citygrade_name is not null then 
     b.citygrade_name else t.citygrade_name end citygrade_name
    from bqtotalsales_attr b
    full join tqtotalsales_attr t
      on b.citygrade_id = t.citygrade_id),  
      
accbqRegionSaledata_attr as
 (select 
 	$priceSegmentSql$
  	fsort,
    sum(t.bq_sales) / $monthNum$ accRegionBqSales_attr,
    o.citygrade_id
    from fdm_version_insurance_mix_city t
    left join dm_sub_model m
    on t.sub_model_id = m.sub_model_id
  left join dm_grade_city c 
    on t.city_id = c.city_id
    left join dm_city_grade o
    on c.gradecity_id = o.citygrade_id
      <include refid="tableSql"/>
   where t.ym between $startYm$ and $endYm$
    <include refid="paramSql"/>
     <!-- and t.bq_sales is not null -->
   group by 
   		$priceSegmentSql$
        ,o.citygrade_id
   order by fsort),
acctqRegionSaledata_attr as
 (select 
 		$priceSegmentSql$
 		 fsort,
         sum(t.bq_sales) / $avgMonthNum$ accRegionTqSales_attr,
         o.citygrade_id
    from fdm_version_insurance_mix_city t
    left join dm_sub_model m
    on t.sub_model_id = m.sub_model_id
  left join dm_grade_city c 
    on t.city_id = c.city_id
    left join dm_city_grade o
    on c.gradecity_id = o.citygrade_id
      <include refid="tableSql"/>
   where t.ym between $startLastYm$ and $endLastYm$
    <include refid="paramSql"/>
     <!-- and t.bq_sales is not null -->
   group by 
   		$priceSegmentSql$
        ,o.citygrade_id
   order by fsort),    
   
     
left_attr_table as (
	select l.fsort,
         l.segment,
         l.citygrade_id,
         l.citygrade_name,
         b.accRegionBqSales_attr / s.accBqTotalSales_attr accBqTotalMix_attr,
         c.accRegionTqSales_attr / s.accTqTotalSales_attr accTqTotalMix_attr
    from left_table2 l
    left join accbqRegionSaledata_attr b
      on l.fsort = b.fsort
      and l.citygrade_id = b.citygrade_id
    left join acctqRegionSaledata_attr c
      on l.fsort = c.fsort
      and l.citygrade_id = c.citygrade_id
    left join totalSales_attr s
      on l.citygrade_id = s.citygrade_id
    
   order by l.fsort
),      
accbqactrueTotalSales_attr as
 (select 
         sum(t.bq_reg_qty) / $monthNum$  accbqsales_attr,
         o.citygrade_id
    from fdm_city_insurance t
    left join dm_sub_model m
    on t.sub_model_id = m.sub_model_id
  left join dm_grade_city c 
    on t.city_id = c.city_id
    left join dm_city_grade o
    on c.gradecity_id = o.citygrade_id
    <include refid="tableSql"/>
   where t.year || lpad(t.month_id, 2, 0) between $startYm$ and $endYm$
    <include refid="paramSql"/>
   group by o.citygrade_id
  
  ),
acctqactrueTotalSales_attr as
 (select 
    sum(t.bq_reg_qty) / $avgMonthNum$  acctqsales_attr,
    o.citygrade_id
    from fdm_city_insurance t
    left join dm_sub_model m
    on t.sub_model_id = m.sub_model_id
   left join dm_grade_city c 
    on t.city_id = c.city_id
    left join dm_city_grade o
    on c.gradecity_id = o.citygrade_id
    <include refid="tableSql"/>
   where (t.year || lpad(t.month_id, 2, 0) between $startLastYm$ and $endLastYm$)
    <include refid="paramSql"/>
   group by o.citygrade_id
  
  )  ,
  accactrueTotalSales_attr as (
      select a.accbqsales_attr,a.citygrade_id,b.acctqsales_attr from accbqactrueTotalSales_attr a  left join acctqactrueTotalSales_attr b on a.citygrade_id = b.citygrade_id
  ),
  
accbqactrueAllSales_attr as
 (select 
         sum(t.bq_reg_qty) / $monthNum$  accbqAllsales_attr
    from fdm_city_insurance t
    left join dm_sub_model m
    on t.sub_model_id = m.sub_model_id
  left join dm_grade_city c 
    on t.city_id = c.city_id
    left join dm_city_grade o
    on c.gradecity_id = o.citygrade_id
    <include refid="tableSql"/>
   where t.year || lpad(t.month_id, 2, 0) between $startYm$ and $endYm$
    <include refid="paramSql"/>
  ),
acctqactrueAllSales_attr as
 (select 
    sum(t.bq_reg_qty) / $avgMonthNum$  acctqAllsales_attr
    from fdm_city_insurance t
    left join dm_sub_model m
    on t.sub_model_id = m.sub_model_id
   left join dm_grade_city c 
    on t.city_id = c.city_id
    left join dm_city_grade o
    on c.gradecity_id = o.citygrade_id
    <include refid="tableSql"/>
   where (t.year || lpad(t.month_id, 2, 0) between $startLastYm$ and $endLastYm$)
    <include refid="paramSql"/>
  )  ,
accactrueAllSales_attr as (
      select a.accbqAllsales_attr,b.acctqAllsales_attr from accbqactrueAllSales_attr a  left join acctqactrueAllSales_attr b on 1=1
  ),  
<!-- 系别区间销量 -->
attr_region_sales as (
    select l.fsort,
         l.segment,
         l.citygrade_id,
         l.citygrade_name,
         l.accBqTotalMix_attr,
         l.accTqTotalMix_attr,
         l.accBqTotalMix_attr * a.accbqsales_attr actrueBqSales_attr,
         l.accTqTotalMix_attr * a.acctqsales_attr actrueTqSales_attr,    
         a.accbqsales_attr,
         a.acctqsales_attr     
         from left_attr_table l
    left join accactrueTotalSales_attr a
      on l.citygrade_id = a.citygrade_id
   order by l.fsort, l.citygrade_id 
),
<!-- 最后一列区间total销量    -->
attr_region_totalsales as(
  select l.fsort,
         l.segment,
         sum(l.actrueBqSales_attr) actrueBqAllSales_attr,
         sum(l.actrueTqSales_attr) actrueTqAllSales_attr
         from attr_region_sales l 
         group by l.fsort,l.segment
),
<!-- 最后一列区间total销量  与mix  -->
attr_region_mix_sales as (
  select l.fsort,
         l.segment,
         l.actrueBqAllSales_attr,
         l.actrueTqAllSales_attr,
         case when b.accbqAllsales_attr is not null and b.accbqAllsales_attr !=0
           then l.actrueBqAllSales_attr / b.accbqAllsales_attr 
             else null end accBqAllMix_attr ,
         case when b.acctqAllsales_attr is not null and b.acctqAllsales_attr !=0
           then l.actrueTqAllSales_attr / b.acctqAllsales_attr 
             else null end accTqAllMix_attr,
         b.accbqAllsales_attr,
         b.acctqAllsales_attr          
         from attr_region_totalsales l
         left join accactrueAllSales_attr b
         on 1=1         
),   
attr_table as(
	select l.fsort,
         l.segment,
         l.citygrade_id,
         l.citygrade_name,
         l.accBqTotalMix_attr,
         l.accTqTotalMix_attr,
         l.actrueBqSales_attr,
         l.actrueTqSales_attr,   
         l.accbqsales_attr,
         l.acctqsales_attr,
         b.actrueBqAllSales_attr,
         b.actrueTqAllSales_attr,
         b.accBqAllMix_attr,
         b.accTqAllMix_attr,
         b.accbqAllsales_attr,
         b.acctqAllsales_attr,
         case when l.actrueTqSales_attr is not null and l.actrueTqSales_attr !=0
           then (l.actrueBqSales_attr -l.actrueTqSales_attr)/ l.actrueTqSales_attr
             else null end yoy_attr,
         case
           when l.acctqsales_attr is not null and l.acctqsales_attr != 0 then
            (l.accbqsales_attr - l.acctqsales_attr) / l.acctqsales_attr
           else
            null
         end totalyoy_attr,      
          case when nvl(l.accBqTotalMix_attr,0) = 0 and nvl(l.accTqTotalMix_attr,0) = 0 then null
         	else nvl(l.accBqTotalMix_attr,0) - nvl(l.accTqTotalMix_attr,0)
         	end  mixChanges_attr,
         case when b.actrueTqAllSales_attr is not null and b.actrueTqAllSales_attr != 0 
          then (b.actrueBqAllSales_attr - b.actrueTqAllSales_attr) / b.actrueTqAllSales_attr
            else null 
              end yoyAll_attr, 
         case
           when b.acctqAllsales_attr is not null and
                b.acctqAllsales_attr != 0 then
            (b.accbqAllsales_attr - b.acctqAllsales_attr) /
            b.acctqAllsales_attr
           else
            null
         end totalAllyoy_attr,     
         case when nvl(b.accBqAllMix_attr,0) =0 and nvl(b.accTqAllMix_attr,0)=0 then null
           else  nvl(b.accBqAllMix_attr,0) - nvl(b.accTqAllMix_attr,0) end mixAllChanges_attr
        from attr_region_sales l
        left join attr_region_mix_sales b
        on l.fsort = b.fsort 
),  
lastestData as (
	select l.fsort,
	       l.segment,
	       l.accBqTotalMix,<!-- 本期总览区间mix -->
	       l.accTqTotalMix,<!-- 同期总览区间mix -->
	       l.actrueBqSales,<!-- 本期实际区间销量 -->
	       l.actrueTqSales,<!-- 同期实际区间销量 -->
	       l.accbqsales,<!-- 本期实际总销量 -->
	       l.acctqsales,<!-- 同期实际总销量 -->
	       l.yoy,<!-- 本期区间销量增速 -->
	       l.totalyoy,<!-- 本期销量总增速 -->
	       l.mixChanges,<!-- 本期区间mix变化（总变化一定为0，总mix一定为1） -->
	       t.citygrade_id attributeId,<!-- 系别id -->
	       t.citygrade_name attributeName,<!-- 系别名称 -->
	       t.accBqTotalMix_attr mix_attr,<!-- 本期系别区间mix -->
	       t.accTqTotalMix_attr,<!-- 同期系别区间mix -->
	       t.actrueBqSales_attr sales_attr,<!-- 本期系别区间实际总销量（放大后） -->
	       t.actrueTqSales_attr,<!-- 同期系别区间实际总销量（放大后） -->
	       t.accbqsales_attr totalSales_attr,<!-- 本期系别总销量 -->
	       t.acctqsales_attr,<!-- 同期系别总销量 -->
	       t.yoy_attr salesChange_attr,<!-- 系别区间销量增速 -->
	       t.totalyoy_attr totalSalesChange_attr,<!-- 系别总销量增速（最后一行的total） -->
	       t.mixChanges_attr mixChange_attr,<!-- 系别区间mix变化 -->
	       t.actrueBqSales_attr - t.actrueTqSales_attr salesChanges,<!-- 系别销量变化（没用到） -->
	       case
	         when l.actrueBqSales is not null and l.actrueBqSales != 0 then
	          <!-- t.actrueBqSales_attr / l.actrueBqSales -->
	          t.actrueBqSales_attr / t.actrueBqAllSales_attr
	         else
	          null
	       end shares_attr,<!-- 系别区间份额 -->
	       case
	         when t.actrueBqAllSales_attr is not null and t.actrueBqAllSales_attr != 0 and
	              t.actrueTqAllSales_attr is not null and t.actrueTqAllSales_attr != 0 then
	          t.actrueBqSales_attr / t.actrueBqAllSales_attr -
	          t.actrueTqSales_attr / t.actrueTqAllSales_attr
	         when (t.actrueBqAllSales_attr is null or t.actrueBqAllSales_attr = 0) and
	              t.actrueTqAllSales_attr is not null and t.actrueTqAllSales_attr != 0 then
	          0 - t.actrueTqSales_attr / t.actrueTqAllSales_attr
	         when (t.actrueBqAllSales_attr is not null and t.actrueBqAllSales_attr != 0) and
	              (t.actrueTqAllSales_attr is null or t.actrueTqAllSales_attr = 0) then
	          t.actrueBqSales_attr / t.actrueBqAllSales_attr
	         else
	          null
	       end sharesChange_attr,<!-- 系别区间份额变化 -->
	       
	       t.accBqAllMix_attr allMix_attr,<!-- 本期系别区间totalmix（列表最后一列total） -->
	       t.accTqAllMix_attr,<!-- 本期系别区间totalmix（列表最后一列total） -->
	       t.actrueBqAllSales_attr allSales_attr,<!-- 本期系别区间total总销量（最后一列） -->
	       t.actrueTqAllSales_attr,<!-- 同期系别区间total总销量 -->
	       
	       t.accbqAllsales_attr,<!-- 本期所有选择系别总销量（一定小于等于列表前面的累计销量） -->
	       t.acctqAllsales_attr,<!-- 同期所有选择系别总销量 -->
	       t.yoyAll_attr allSalesChange_attr,<!-- 所选系别总的区间销量增速 -->
	       t.totalAllyoy_attr,<!-- 所选系别总的销量增速（最后一行的total） -->
	       t.mixAllChanges_attr allMixchange_attr,<!-- 所选系别 区间totalmix变化（列表最后一列total）-->
	       t.actrueBqAllSales_attr - t.actrueTqAllSales_attr salesAllChanges,<!-- 所选系别总销量变化（没用到） -->
	       case
	         when l.actrueBqSales is not null and l.actrueBqSales != 0 then
	          t.actrueBqAllSales_attr / t.actrueBqAllSales_attr
	         else
	          null
	       end sharesAll,<!-- 所选系别区间总份额 （列表最后一列total）-->
	       0 totalSharesChange_attr,<!-- 所选系别区间总份额变化（列表最后一列total） -->
	       
	       case when t.accbqAllsales_attr is not null and t.accbqAllsales_attr !=0 then 
	       t.accbqsales_attr/t.accbqAllsales_attr
	       else null end totalShares_attr,<!-- 系别总的份额 （列表最后一行total）-->
	       case when t.accbqAllsales_attr is not null and t.accbqAllsales_attr !=0 
	       	   and t.acctqAllsales_attr is not null and t.acctqAllsales_attr !=0 then 
	       t.accbqsales_attr/t.accbqAllsales_attr  - t.acctqsales_attr/t.acctqAllsales_attr
	        when (t.accbqAllsales_attr is not null and t.accbqAllsales_attr !=0 )
	       	   and (t.acctqAllsales_attr is null or t.acctqAllsales_attr =0) then
	       	   t.accbqsales_attr/t.accbqAllsales_attr
	       	 when (t.accbqAllsales_attr is null or t.accbqAllsales_attr =0)
	       	   and (t.acctqAllsales_attr is not null and t.acctqAllsales_attr !=0) then
	       	   0 - t.acctqsales_attr/t.acctqAllsales_attr
	        else null end totalSharesChanges<!-- 系别总份额变化（列表最后一行total） -->
	  from total_table l
	  left join attr_table t
	    on l.fsort = t.fsort
	   and l.citygrade_id = t.citygrade_id
	 order by l.fsort, l.sort_num
)        
select fsort,
	       segment,
	       case
	         when accBqTotalMix is not null then
	          to_char(accBqTotalMix*100,'fm99999999990.0')
	         else
	          '-'
	       end accBqTotalMix,<!-- 本期总览区间mix -->
	       case
	         when accTqTotalMix is not null then
	          to_char(accTqTotalMix*100,'fm99999999990.0')
	         else
	          '-'
	       end accTqTotalMix,<!-- 同期总览区间mix -->
	       case
	         when actrueBqSales is not null then
	          to_char(actrueBqSales,'fm99999999990')
	         else
	          '-'
	       end actrueBqSales,<!-- 本期实际区间销量 -->
	       case
	         when actrueTqSales is not null then
	          to_char(actrueTqSales,'fm99999999990')
	         else
	          '-'
	       end actrueTqSales,<!-- 同期实际区间销量 -->
	       case
	         when accbqsales is not null then
	          to_char(accbqsales,'fm99999999990')
	         else
	          '-'
	       end accbqsales,<!-- 本期实际总销量 -->
	       case
	         when acctqsales is not null then
	          to_char(acctqsales,'fm99999999990')
	         else
	          '-'
	       end acctqsales,<!-- 同期实际总销量 -->
	       case
	         when yoy is not null then
	          to_char(yoy*100,'fm99999999990.0')
	         else
	          '-'
	       end yoy,<!-- 本期区间销量增速 -->
	       case
	         when totalyoy is not null then
	          to_char(totalyoy*100,'fm99999999990.0')
	         else
	          '-'
	       end totalyoy,<!-- 本期销量总增速 -->
	       case
	         when mixChanges is not null then
	          to_char(mixChanges*100,'fm99999999990.0')
	         else
	          '-'
	       end mixChanges,<!-- 本期区间mix变化（总变化一定为0，总mix一定为1） -->
	       attributeId,<!-- 系别id -->
	       attributeName,<!-- 系别名称 -->
	       case
	         when mix_attr is not null then
	          to_char(mix_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end mix_attr,<!-- 本期系别区间mix -->
	       case
	         when accTqTotalMix_attr is not null then
	          to_char(accTqTotalMix_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end accTqTotalMix_attr,<!-- 同期系别区间mix -->
	       case
	         when sales_attr is not null then
	          to_char(sales_attr,'fm99999999990')
	         else
	          '-'
	       end sales_attr,<!-- 本期系别区间实际总销量（放大后） -->
	       case
	         when actrueTqSales_attr is not null then
	          to_char(actrueTqSales_attr,'fm99999999990')
	         else
	          '-'
	       end actrueTqSales_attr,<!-- 同期系别区间实际总销量（放大后） -->
	       case
	         when totalSales_attr is not null then
	          to_char(totalSales_attr,'fm99999999990')
	         else
	          '-'
	       end totalSales_attr,<!-- 本期系别总销量 -->
	       case
	         when acctqsales_attr is not null then
	          to_char(acctqsales_attr,'fm99999999990')
	         else
	          '-'
	       end acctqsales_attr,<!-- 同期系别总销量 -->
	       case
	         when salesChange_attr is not null then
	          to_char(salesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end salesChange_attr,<!-- 系别区间销量增速 -->
	       case
	         when totalSalesChange_attr is not null then
	          to_char(totalSalesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end totalSalesChange_attr,<!-- 系别总销量增速（最后一行的total） -->
	       case
	         when mixChange_attr is not null then
	          to_char(mixChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end mixChange_attr,<!-- 系别区间mix变化 -->
	       case
	         when salesChanges is not null then
	          to_char(salesChanges,'fm99999999990')
	         else
	          '-'
	       end salesChanges,<!-- 系别销量变化（没用到） -->
	       case
	         when shares_attr is not null then
	          to_char(shares_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end shares_attr,<!-- 系别区间份额 -->
	       case
	         when sharesChange_attr is not null then
	          to_char(sharesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end sharesChange_attr,<!-- 系别区间份额变化 -->
	       case
	         when allMix_attr is not null then
	          to_char(allMix_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end allMix_attr,<!-- 本期系别区间totalmix（列表最后一列total） -->
	       case
	         when accTqAllMix_attr is not null then
	          to_char(accTqAllMix_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end accTqAllMix_attr,<!-- 本期系别区间totalmix（列表最后一列total） -->
	       case
	         when allSales_attr is not null then
	          to_char(allSales_attr,'fm99999999990')
	         else
	          '-'
	       end allSales_attr,<!-- 本期系别区间total总销量（最后一列） -->
	       case
	         when actrueTqAllSales_attr is not null then
	          to_char(actrueTqAllSales_attr,'fm99999999990')
	         else
	          '-'
	       end actrueTqAllSales_attr,<!-- 同期系别区间total总销量 -->
	       case
	         when accbqAllsales_attr is not null then
	          to_char(accbqAllsales_attr,'fm99999999990')
	         else
	          '-'
	       end accbqAllsales_attr,<!-- 本期所有选择系别总销量（一定小于等于列表前面的累计销量） -->
	       case
	         when acctqAllsales_attr is not null then
	          to_char(acctqAllsales_attr,'fm99999999990')
	         else
	          '-'
	       end acctqAllsales_attr,<!-- 同期所有选择系别总销量 -->
	       case
	         when allSalesChange_attr is not null then
	          to_char(allSalesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end allSalesChange_attr,<!-- 所选系别总的区间销量增速 -->
	       case
	         when totalAllyoy_attr is not null then
	          to_char(totalAllyoy_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end totalAllyoy_attr,<!-- 所选系别总的销量增速（最后一行、最后一列的total） -->
	       case
	         when allMixchange_attr is not null then
	          to_char(allMixchange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end allMixchange_attr,<!-- 所选系别 区间totalmix变化（列表最后一列total）-->
	       case
	         when salesAllChanges is not null then
	          to_char(salesAllChanges,'fm99999999990')
	         else
	          '-'
	       end salesAllChanges,<!-- 所选系别总销量变化（没用到） -->
	       case
	         when sharesAll is not null then
	          to_char(sharesAll*100,'fm99999999990.0')
	         else
	          '-'
	       end sharesAll,<!-- 所选系别区间总份额 （列表最后一列total）-->
	       case
	         when totalSharesChange_attr is not null then
	          to_char(totalSharesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end totalSharesChange_attr,<!-- 所选系别区间总份额变化（列表最后一列total） -->
	       case
	         when totalShares_attr is not null then
	          to_char(totalShares_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end totalShares_attr,<!-- 系别总的份额 （列表最后一行total）-->
	       case
	         when totalSharesChanges is not null then
	          to_char(totalSharesChanges*100,'fm99999999990.0')
	         else
	          '-'
	       end totalSharesChanges<!-- 系别总份额变化（列表最后一行total） -->
	       from lastestData 
</select>


<!-- 累计总数据sql -->
<sql id="modelAccTotalSql">
t1 as
 (select distinct  sub_grade_id ,connect_by_root p_sub_grade_id p_sub_grade_id
  from dm_sub_grade_new 
  where levelflag = 3
  connect by prior sub_grade_id = p_sub_grade_id 
  <isNotEmpty property="subGradeIds_all">
	 start with p_sub_grade_id in ($subGradeIds_all$)
  </isNotEmpty>
  <isEmpty property="subGradeIds_all">
	 start with p_sub_grade_id in (
	 	select distinct sub_grade_id from dm_sub_grade_new where levelflag = 0
	 )
  </isEmpty>
 
 order by sub_grade_id),
t2 as
 (select distinct sub_grade_id, sub_grade_name
    from dm_sub_grade_new
   where 
   <isNotEmpty property="subGradeIds_all">
	 sub_grade_id in ($subGradeIds_all$)
  </isNotEmpty>
  <isEmpty property="subGradeIds_all">
	 sub_grade_id in (
	 	select distinct sub_grade_id from dm_sub_grade_new where levelflag = 0
	 )
  </isEmpty>
   ),
t3 as (select t2.sub_grade_id p_sub_grade_id,
       t2.sub_grade_name,
       case
         when t1.sub_grade_id is not null then
          t1.sub_grade_id
         else
          t2.sub_grade_id
       end sub_grade_id
  from t2
  left join t1
    on t2.sub_grade_id = t1.p_sub_grade_id),
<!-- left_table3 as
 (select l.segment, l.fsort,t.sub_grade_id,t.sub_grade_name,t.p_sub_grade_id
    from left_table l
    left join t3 t
      on  1=1
   ), -->
bqtotalsales as
 (select sum(t.bq_sales) / $monthNum$ accBqTotalSales, g.sub_grade_id
    from <include refid="mixTableSql" /> t
    left join dm_sub_model m
    on t.sub_model_id = m.sub_model_id
    <include refid="tableSql_all"/>
    left join dm_sub_grade_new g
      on t.sub_model_id = g.sub_model_id
   where t.ym between $startYm$ and $endYm$
   	<include refid="paramSql_all"/>
   	and g.sub_grade_id in (select sub_grade_id from t3)
   group by g.sub_grade_id
   ),
tqtotalsales as
 (select sum(t.bq_sales) / $avgMonthNum$ accTqTotalSales, g.sub_grade_id
    from <include refid="mixTableSql" /> t
    left join dm_sub_model m
    on t.sub_model_id = m.sub_model_id
    left join dm_sub_grade_new g
      on t.sub_model_id = g.sub_model_id
    <include refid="tableSql_all"/>
   where 
   t.ym between $startLastYm$ and $endLastYm$
   <include refid="paramSql_all"/>
   and g.sub_grade_id in (select sub_grade_id from t3)
   group by g.sub_grade_id
  ),
totalSales as
 (select b.accBqTotalSales, t.accTqTotalSales
 		,case
           when b.sub_grade_id is not null then
            b.sub_grade_id
           else
            t.sub_grade_id
         end sub_grade_id
    from bqtotalsales b
    full join tqtotalsales t
      on b.sub_grade_id = t.sub_grade_id),
accbqRegionSaledata as
 (select 
 	$priceSegmentSql$
	 fsort,
     sum(t.bq_sales) / $monthNum$ accRegionBqSales
     , g.sub_grade_id
    from <include refid="mixTableSql" /> t
    left join dm_sub_model m
    on t.sub_model_id = m.sub_model_id
    <include refid="tableSql_all"/>
    left join dm_version v
      on t.version_id = v.version_id
    left join dm_sub_grade_new g
      on t.sub_model_id = g.sub_model_id  
   where t.ym between $startYm$ and $endYm$
   <include refid="paramSql_all"/>
     <!-- and t.bq_sales is not null -->
     and g.sub_grade_id in (select sub_grade_id from t3)
   group by 
	$priceSegmentSql$
	,g.sub_grade_id
   order by fsort),
bqRegionMixdata as
 (select a.fsort,
         a.accRegionBqSales,
         a.sub_grade_id,
         case
           when b.accBqTotalSales is not null and b.accBqTotalSales !=0 then
            a.accRegionBqSales / b.accBqTotalSales
           else
            null
         end accBqTotalMix
    from accbqRegionSaledata a
    left join totalSales b
      on a.sub_grade_id = b.sub_grade_id),   
acctqRegionSaledata as
 (select 
 	$priceSegmentSql$
  	fsort,
    sum(t.bq_sales) / $avgMonthNum$ accRegionTqSales
    , g.sub_grade_id
    from <include refid="mixTableSql" /> t
    left join dm_sub_model m
    on t.sub_model_id = m.sub_model_id
    <include refid="tableSql_all"/>
    left join dm_version v
      on t.version_id = v.version_id
    left join dm_sub_grade_new g
      on t.sub_model_id = g.sub_model_id    
   where t.ym between $startLastYm$ and $endLastYm$
   <include refid="paramSql_all"/>
     <!-- and t.bq_sales is not null -->
     and g.sub_grade_id in (select sub_grade_id from t3)
   group by 
   $priceSegmentSql$
   ,g.sub_grade_id
   order by fsort),
tqRegionMixdata as
 (select a.fsort,
         a.accRegionTqSales,
         a.sub_grade_id,
         case
           when b.accTqTotalSales is not null and b.accTqTotalSales !=0 then
            a.accRegionTqSales / b.accTqTotalSales
           else
            null
         end accTqTotalMix
    from acctqRegionSaledata a
    left join totalSales b
      on a.sub_grade_id = b.sub_grade_id),
regionMixdata as
 (select  case when  a.fsort is null then
           b.fsort else a.fsort end fsort,
         a.accRegionBqSales,
         case
           when a.sub_grade_id is null then
            b.sub_grade_id
           else
            a.sub_grade_id
         end sub_grade_id,
         a.accBqTotalMix,
         b.accRegionTqSales,
         b.accTqTotalMix
    from bqRegionMixdata a
    full join tqRegionMixdata b
      on a.fsort = b.fsort
     and a.sub_grade_id = b.sub_grade_id),
left_grade_table as
 (select l.fsort,
         l.segment,
         l.sort_num,
         <!-- l.p_sub_grade_id, -->
         $attributeSql$
         b.accBqTotalMix,
         b.accTqTotalMix
         ,b.sub_grade_id
    from left_table2 l
    left join regionMixdata b
      on l.fsort = b.fsort
   order by l.fsort),
accbqactrueGradeSales as
 (select sum(t.bq_sales) / $monthNum$ accbqsales, g.sub_grade_id
    from <include refid="mixTableSql" /> t
    left join dm_sub_model m
      on t.sub_model_id = m.sub_model_id
    left join dm_sub_grade_new g
      on t.sub_model_id = g.sub_model_id
    <include refid="tableSql_all"/>  
   where t.ym between $startYm$ and $endYm$
   <include refid="paramSql_all"/>
     and g.sub_grade_id in (select sub_grade_id from t3)
   group by g.sub_grade_id),
acctqactrueGradeSales as
 (select sum(t.bq_sales) / $avgMonthNum$ acctqsales, g.sub_grade_id
    from <include refid="mixTableSql" /> t
    left join dm_sub_model m
      on t.sub_model_id = m.sub_model_id
    left join dm_sub_grade_new g
      on t.sub_model_id = g.sub_model_id
    <include refid="tableSql_all"/>  
   where (t.ym between $startLastYm$ and $endLastYm$)
   <include refid="paramSql_all"/>
     and g.sub_grade_id in (select sub_grade_id from t3)
   group by g.sub_grade_id),
accactrueGradeSales as
 (select a.accbqsales,
         b.acctqsales,
         case
           when a.sub_grade_id is not null then
            a.sub_grade_id
           else
            b.sub_grade_id
         end sub_grade_id
    from accbqactrueGradeSales a
    full join acctqactrueGradeSales b
      on a.sub_grade_id = b.sub_grade_id),     
actrueRegionSales as
 (select l.fsort,
         l.segment,
         l.sort_num,
         $attributeSql$
         l.accBqTotalMix * t.accbqsales actrueBqSales,
         l.accTqTotalMix * t.acctqsales actrueTqSales
	     ,l.sub_grade_id
    from left_grade_table l
    left join accactrueGradeSales t
      on l.sub_grade_id = t.sub_grade_id),
left_actrue_sales as
 (select l.fsort,
         l.segment,
         l.sort_num,
         $attributeSql$
         sum(l.actrueBqSales) actrueBqSales,
         sum(l.actrueTqSales) actrueTqSales
    from actrueRegionSales l
   group by $attributeSql$ l.fsort, l.segment,l.sort_num
   ),                        
accbqactrueTotalSales as
 (select sum(t.bq_sales) / $monthNum$  accbqsales
    from <include refid="mixTableSql" /> t
    left join dm_sub_model m
    on t.sub_model_id = m.sub_model_id
    <include refid="tableSql_all"/>
   where t.ym between $startYm$ and $endYm$
   <include refid="paramSql_all"/>
  
  ),
acctqactrueTotalSales as
 (	select 
    sum(t.bq_sales) / $avgMonthNum$  acctqsales
    from <include refid="mixTableSql" /> t
    left join dm_sub_model m
    on t.sub_model_id = m.sub_model_id
     <include refid="tableSql_all"/>
   where (t.ym between $startLastYm$ and $endLastYm$)
    <include refid="paramSql_all"/>
  
  ),
accactrueTotalSales as (
      select * from accbqactrueTotalSales a  left join acctqactrueTotalSales b on 1=1
  ),
total_table as(
   select l.fsort,
         l.segment,
         l.sort_num,
         $attributeSql$
         l.actrueBqSales,
         l.actrueTqSales,
         case
           when b.accbqsales is not null then
            l.actrueBqSales / b.accbqsales
           else
            null
         end accBqTotalMix,
         case
           when b.acctqsales is not null then
            l.actrueTqSales / b.acctqsales
           else
            null
         end accTqTotalMix,
         b.accbqsales,
         b.acctqsales,
         case
           when l.actrueTqSales is not null then
            (l.actrueBqSales - l.actrueTqSales) / l.actrueTqSales
           else
            null
         end yoy,
         case
           when b.acctqsales is not null then
            (b.accbqsales - b.acctqsales) / b.acctqsales
           else
            null
         end totalyoy,
         l.actrueBqSales / b.accbqsales - l.actrueTqSales / b.acctqsales mixChanges
    from left_actrue_sales l
    left join accactrueTotalSales b
      on 1 = 1
   order by l.fsort
),  
</sql>
<!-- 车型(子车型不需要放大，这里做了放大操作，但是实际销量是一样的) -->
<select id="getModelData" parameterClass="java.util.HashMap" resultMap="overview">
with left_table as
	(
		$leftSegmentSql$
	),
<!-- 车型ids为空，表示查询销量前10的车型 -->	
<isEmpty property="subModelIds">
topTenIds as (
  select *
  	from (select t.sub_model_id
          from <include refid="mixTableSql" /> t
          left join dm_sub_model m
		    on t.sub_model_id = m.sub_model_id
		  <include refid="tableSql"/>
         where 
           t.ym = (select max(ym) from <include refid="mixTableSql"/> )
           <include refid="paramSql"/>
         group by t.sub_model_id
         order by sum(t.bq_sales) desc) s
 where rownum <![CDATA[ <= ]]> 10
),   	 
</isEmpty>	
left_table2 as (
  select distinct l.segment,l.fsort,o.sub_model_id,
  	case when o.poo_attribute_id = 1 then 	
  	 	o.sub_model_name || '(进口)'
  	    else o.sub_model_name end sub_model_name
  	, row_number() over(partition by l.fsort order by instr(#subModelIds_sort#,(','||o.sub_model_id||','))) sort_num
  from left_table l left join dm_sub_model o
  on 1=1
  where 
  <isNotEmpty property="subModelIds">
	 o.sub_model_id in ($subModelIds$)
   </isNotEmpty>
   <isEmpty property="subModelIds">
   	 o.sub_model_id in (select * from topTenIds)
   </isEmpty>
),
<include refid="modelAccTotalSql"/>
<!-- 本期各车型销量 -->
bqtotalsales_attr as
 (select sum(t.bq_sales) / $monthNum$ accBqTotalSales_attr,
 	m.sub_model_id,m.sub_model_name
    from <include refid="mixTableSql" /> t
    left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    <include refid="tableSql"/>
   where 
   t.ym between $startYm$ and $endYm$
   <isNotEmpty property="subModelIds">
	   and m.sub_model_id in ($subModelIds$)
   </isNotEmpty>
   <isEmpty property="subModelIds">
   		and m.sub_model_id in (select * from topTenIds)
   </isEmpty>
    <include refid="paramSql"/>
   group by m.sub_model_id,m.sub_model_name
   ), 
<!-- 同期各车型销量 -->   
tqtotalsales_attr as
 (select sum(t.bq_sales) / $avgMonthNum$ accTqTotalSales_attr,m.sub_model_id,m.sub_model_name
    from <include refid="mixTableSql" /> t
    left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    <include refid="tableSql"/>
   where t.ym between $startLastYm$ and $endLastYm$
   <isNotEmpty property="subModelIds">
	   and m.sub_model_id in ($subModelIds$)
   </isNotEmpty>
   <isEmpty property="subModelIds">
   		and m.sub_model_id in (select * from topTenIds)
   </isEmpty>
    <include refid="paramSql"/>
  group by m.sub_model_id,m.sub_model_name
  ),       
totalSales_attr as
 (select b.accBqTotalSales_attr, t.accTqTotalSales_attr,
 	case when b.sub_model_id is not null then 
     b.sub_model_id else t.sub_model_id end sub_model_id,
    case when b.sub_model_name is not null then 
     b.sub_model_name else t.sub_model_name end sub_model_name
    from bqtotalsales_attr b
    full join tqtotalsales_attr t
      on b.sub_model_id = t.sub_model_id),  
  
<!-- 车型区间销量，本期 -->      
accbqRegionSaledata_attr as
 (select 
 	$priceSegmentSql$
  	fsort,
    sum(t.bq_sales) / $monthNum$ accRegionBqSales_attr,
    m.sub_model_id
    from <include refid="mixTableSql" /> t
    left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
      <include refid="tableSql"/>
   where t.ym between $startYm$ and $endYm$
   <isNotEmpty property="subModelIds">
	   and m.sub_model_id in ($subModelIds$)
   </isNotEmpty>
   <isEmpty property="subModelIds">
   		and m.sub_model_id in (select * from topTenIds)
   </isEmpty>
    <include refid="paramSql"/>
     <!-- and t.bq_sales is not null -->
   group by 
   		$priceSegmentSql$
        ,m.sub_model_id
   order by fsort),
<!-- 车型区间销量，同期 -->       
acctqRegionSaledata_attr as
 (select 
 		$priceSegmentSql$
 		 fsort,
         sum(t.bq_sales) / $avgMonthNum$ accRegionTqSales_attr,
         m.sub_model_id
    from <include refid="mixTableSql" /> t
    left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
   <include refid="tableSql"/>
   where t.ym between $startLastYm$ and $endLastYm$
    <isNotEmpty property="subModelIds">
	   and m.sub_model_id in ($subModelIds$)
   </isNotEmpty>
   <isEmpty property="subModelIds">
   		and m.sub_model_id in (select * from topTenIds)
   </isEmpty>
    <include refid="paramSql"/>
     <!-- and t.bq_sales is not null -->
   group by 
   		$priceSegmentSql$
        ,m.sub_model_id
   order by fsort),    

<!-- 车型区间销量mix与区间总销量mix -->     
left_attr_table as (
	select l.fsort,
         l.segment,
         l.sub_model_id,
         l.sub_model_name,
         case when s.accBqTotalSales_attr is not null and s.accBqTotalSales_attr !=0 
           then b.accRegionBqSales_attr / s.accBqTotalSales_attr 
            else null end
             accBqTotalMix_attr,
         case when s.accTqTotalSales_attr is not null and s.accTqTotalSales_attr !=0
         	then c.accRegionTqSales_attr / s.accTqTotalSales_attr
         	  else null end      
          		accTqTotalMix_attr
    from left_table2 l
    left join accbqRegionSaledata_attr b
      on l.fsort = b.fsort
      and l.sub_model_id = b.sub_model_id
    left join acctqRegionSaledata_attr c
      on l.fsort = c.fsort
      and l.sub_model_id = c.sub_model_id
    left join totalSales_attr s
      on l.sub_model_id = s.sub_model_id
    
   order by l.fsort
),      
accbqactrueTotalSales_attr as
 (select 
         sum(t.bq_sales) / $monthNum$  accbqsales_attr,
         m.sub_model_id
    from <include refid="mixTableSql" /> t
    left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    <include refid="tableSql"/>
   where t.ym between $startYm$ and $endYm$
   <isNotEmpty property="subModelIds">
	   and m.sub_model_id in ($subModelIds$)
   </isNotEmpty>
   <isEmpty property="subModelIds">
   		and m.sub_model_id in (select * from topTenIds)
   </isEmpty>
    <include refid="paramSql"/>
   group by m.sub_model_id
  
  ),
acctqactrueTotalSales_attr as
 (select 
    sum(t.bq_sales) / $avgMonthNum$  acctqsales_attr,
    m.sub_model_id
    from <include refid="mixTableSql" /> t
    left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    <include refid="tableSql"/>
   where (t.ym between $startLastYm$ and $endLastYm$)
   <isNotEmpty property="subModelIds">
	   and m.sub_model_id in ($subModelIds$)
   </isNotEmpty>
   <isEmpty property="subModelIds">
   		and m.sub_model_id in (select * from topTenIds)
   </isEmpty>
    <include refid="paramSql"/>
   group by m.sub_model_id
  
  )  ,
  accactrueTotalSales_attr as (
      select a.accbqsales_attr,a.sub_model_id,b.acctqsales_attr from accbqactrueTotalSales_attr a  left join acctqactrueTotalSales_attr b on a.sub_model_id = b.sub_model_id
  ),
  
accbqactrueAllSales_attr as
 (select 
         sum(t.bq_sales) / $monthNum$  accbqAllsales_attr
    from <include refid="mixTableSql" /> t
    left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    <include refid="tableSql"/>
   where t.ym between $startYm$ and $endYm$
   <isNotEmpty property="subModelIds">
	   and m.sub_model_id in ($subModelIds$)
   </isNotEmpty>
   <isEmpty property="subModelIds">
   		and m.sub_model_id in (select * from topTenIds)
   </isEmpty>
    <include refid="paramSql"/>
  ),
acctqactrueAllSales_attr as
 (select 
    sum(t.bq_sales) / $avgMonthNum$  acctqAllsales_attr
    from <include refid="mixTableSql" /> t
    left join dm_sub_model m 
    on t.sub_model_id = m.sub_model_id
    <include refid="tableSql"/>
   where (t.ym between $startLastYm$ and $endLastYm$)
   <isNotEmpty property="subModelIds">
	   and m.sub_model_id in ($subModelIds$)
   </isNotEmpty>
   <isEmpty property="subModelIds">
   		and m.sub_model_id in (select * from topTenIds)
   </isEmpty>
    <include refid="paramSql"/>
  )  ,
accactrueAllSales_attr as (
      select a.accbqAllsales_attr,b.acctqAllsales_attr from accbqactrueAllSales_attr a  left join acctqactrueAllSales_attr b on 1=1
  ),  
<!-- 系别区间销量 -->
attr_region_sales as (
    select l.fsort,
         l.segment,
         l.sub_model_id,
         l.sub_model_name,
         l.accBqTotalMix_attr,
         l.accTqTotalMix_attr,
         l.accBqTotalMix_attr * a.accbqsales_attr actrueBqSales_attr,
         l.accTqTotalMix_attr * a.acctqsales_attr actrueTqSales_attr,    
         a.accbqsales_attr,
         a.acctqsales_attr     
         from left_attr_table l
    left join accactrueTotalSales_attr a
      on l.sub_model_id = a.sub_model_id
   order by l.fsort, l.sub_model_id 
),
<!-- 最后一列区间total销量    -->
attr_region_totalsales as(
  select l.fsort,
         l.segment,
         sum(l.actrueBqSales_attr) actrueBqAllSales_attr,
         sum(l.actrueTqSales_attr) actrueTqAllSales_attr
         from attr_region_sales l 
         group by l.fsort,l.segment
),
<!-- 最后一列区间total销量  与mix  -->
attr_region_mix_sales as (
  select l.fsort,
         l.segment,
         l.actrueBqAllSales_attr,
         l.actrueTqAllSales_attr,
         case when b.accbqAllsales_attr is not null and b.accbqAllsales_attr !=0
           then l.actrueBqAllSales_attr / b.accbqAllsales_attr 
             else null end accBqAllMix_attr ,
         case when b.acctqAllsales_attr is not null and b.acctqAllsales_attr !=0
           then l.actrueTqAllSales_attr / b.acctqAllsales_attr 
             else null end accTqAllMix_attr,
         b.accbqAllsales_attr,
         b.acctqAllsales_attr          
         from attr_region_totalsales l
         left join accactrueAllSales_attr b
         on 1=1         
),   
attr_table as(
	select l.fsort,
         l.segment,
         l.sub_model_id,
         l.sub_model_name,
         l.accBqTotalMix_attr,
         l.accTqTotalMix_attr,
         l.actrueBqSales_attr,
         l.actrueTqSales_attr,   
         l.accbqsales_attr,
         l.acctqsales_attr,
         b.actrueBqAllSales_attr,
         b.actrueTqAllSales_attr,
         b.accBqAllMix_attr,
         b.accTqAllMix_attr,
         b.accbqAllsales_attr,
         b.acctqAllsales_attr,
         case when l.actrueTqSales_attr is not null and l.actrueTqSales_attr !=0
           then (l.actrueBqSales_attr -l.actrueTqSales_attr)/ l.actrueTqSales_attr
             else null end yoy_attr,
         case
           when l.acctqsales_attr is not null and l.acctqsales_attr != 0 then
            (l.accbqsales_attr - l.acctqsales_attr) / l.acctqsales_attr
           else
            null
         end totalyoy_attr,      
         case when nvl(l.accBqTotalMix_attr,0) = 0 and nvl(l.accTqTotalMix_attr,0) = 0 then null
         	else nvl(l.accBqTotalMix_attr,0) - nvl(l.accTqTotalMix_attr,0)
         	end  mixChanges_attr,
         case when b.actrueTqAllSales_attr is not null and b.actrueTqAllSales_attr != 0 
          then (b.actrueBqAllSales_attr - b.actrueTqAllSales_attr) / b.actrueTqAllSales_attr
            else null 
              end yoyAll_attr, 
         case
           when b.acctqAllsales_attr is not null and
                b.acctqAllsales_attr != 0 then
            (b.accbqAllsales_attr - b.acctqAllsales_attr) /
            b.acctqAllsales_attr
           else
            null
         end totalAllyoy_attr,     
         case when nvl(b.accBqAllMix_attr,0) =0 and nvl(b.accTqAllMix_attr,0)=0 then null
           else  nvl(b.accBqAllMix_attr,0) - nvl(b.accTqAllMix_attr,0) end mixAllChanges_attr
        from attr_region_sales l
        left join attr_region_mix_sales b
        on l.fsort = b.fsort      
),  
lastestData as (
	select l.fsort,
	       l.segment,
	       l.accBqTotalMix,<!-- 本期总览区间mix -->
	       l.accTqTotalMix,<!-- 同期总览区间mix -->
	       l.actrueBqSales,<!-- 本期实际区间销量 -->
	       l.actrueTqSales,<!-- 同期实际区间销量 -->
	       l.accbqsales,<!-- 本期实际总销量 -->
	       l.acctqsales,<!-- 同期实际总销量 -->
	       l.yoy,<!-- 本期区间销量增速 -->
	       l.totalyoy,<!-- 本期销量总增速 -->
	       l.mixChanges,<!-- 本期区间mix变化（总变化一定为0，总mix一定为1） -->
	       t.sub_model_id attributeId,<!-- 系别id -->
	       t.sub_model_name attributeName,<!-- 系别名称 -->
	       t.accBqTotalMix_attr mix_attr,<!-- 本期系别区间mix -->
	       t.accTqTotalMix_attr,<!-- 同期系别区间mix -->
	       t.actrueBqSales_attr sales_attr,<!-- 本期系别区间实际总销量（放大后） -->
	       t.actrueTqSales_attr,<!-- 同期系别区间实际总销量（放大后） -->
	       t.accbqsales_attr totalSales_attr,<!-- 本期系别总销量 -->
	       t.acctqsales_attr,<!-- 同期系别总销量 -->
	       t.yoy_attr salesChange_attr,<!-- 系别区间销量增速 -->
	       t.totalyoy_attr totalSalesChange_attr,<!-- 系别总销量增速（最后一行的total） -->
	       t.mixChanges_attr mixChange_attr,<!-- 系别区间mix变化 -->
	       t.actrueBqSales_attr - t.actrueTqSales_attr salesChanges,<!-- 系别销量变化（没用到） -->
	       case
	         when l.actrueBqSales is not null and l.actrueBqSales != 0 then
	          <!-- t.actrueBqSales_attr / l.actrueBqSales -->
	          t.actrueBqSales_attr / t.actrueBqAllSales_attr
	         else
	          null
	       end shares_attr,<!-- 系别区间份额 -->
	       case
	         when t.actrueBqAllSales_attr is not null and t.actrueBqAllSales_attr != 0 and
	              t.actrueTqAllSales_attr is not null and t.actrueTqAllSales_attr != 0 then
	          t.actrueBqSales_attr / t.actrueBqAllSales_attr -
	          t.actrueTqSales_attr / t.actrueTqAllSales_attr
	         when (t.actrueBqAllSales_attr is null or t.actrueBqAllSales_attr = 0) and
	              t.actrueTqAllSales_attr is not null and t.actrueTqAllSales_attr != 0 then
	          0 - t.actrueTqSales_attr / t.actrueTqAllSales_attr
	         when (t.actrueBqAllSales_attr is not null and t.actrueBqAllSales_attr != 0) and
	              (t.actrueTqAllSales_attr is null or t.actrueTqAllSales_attr = 0) then
	          t.actrueBqSales_attr / t.actrueBqAllSales_attr
	         else
	          null
	       end sharesChange_attr,<!-- 系别区间份额变化 -->
	       
	       t.accBqAllMix_attr allMix_attr,<!-- 本期系别区间totalmix（列表最后一列total） -->
	       t.accTqAllMix_attr,<!-- 本期系别区间totalmix（列表最后一列total） -->
	       t.actrueBqAllSales_attr allSales_attr,<!-- 本期系别区间total总销量（最后一列） -->
	       t.actrueTqAllSales_attr,<!-- 同期系别区间total总销量 -->
	       
	       t.accbqAllsales_attr,<!-- 本期所有选择系别总销量（一定小于等于列表前面的累计销量） -->
	       t.acctqAllsales_attr,<!-- 同期所有选择系别总销量 -->
	       t.yoyAll_attr allSalesChange_attr,<!-- 所选系别总的区间销量增速 -->
	       t.totalAllyoy_attr,<!-- 所选系别总的销量增速（最后一行的total） -->
	       t.mixAllChanges_attr allMixchange_attr,<!-- 所选系别 区间totalmix变化（列表最后一列total）-->
	       t.actrueBqAllSales_attr - t.actrueTqAllSales_attr salesAllChanges,<!-- 所选系别总销量变化（没用到） -->
	       case
	         when l.actrueBqSales is not null and l.actrueBqSales != 0 then
	          t.actrueBqAllSales_attr / t.actrueBqAllSales_attr
	         else
	          null
	       end sharesAll,<!-- 所选系别区间总份额 （列表最后一列total）-->
	       0 totalSharesChange_attr,<!-- 所选系别区间总份额变化（列表最后一列total） -->
	       
	       case when t.accbqAllsales_attr is not null and t.accbqAllsales_attr !=0 then 
	       t.accbqsales_attr/t.accbqAllsales_attr
	       else null end totalShares_attr,<!-- 系别总的份额 （列表最后一行total）-->
	       case when t.accbqAllsales_attr is not null and t.accbqAllsales_attr !=0 
	       	   and t.acctqAllsales_attr is not null and t.acctqAllsales_attr !=0 then 
	       t.accbqsales_attr/t.accbqAllsales_attr  - t.acctqsales_attr/t.acctqAllsales_attr
	        when (t.accbqAllsales_attr is not null and t.accbqAllsales_attr !=0 )
	       	   and (t.acctqAllsales_attr is null or t.acctqAllsales_attr =0) then
	       	   t.accbqsales_attr/t.accbqAllsales_attr
	       	 when (t.accbqAllsales_attr is null or t.accbqAllsales_attr =0)
	       	   and (t.acctqAllsales_attr is not null and t.acctqAllsales_attr !=0) then
	       	   0 - t.acctqsales_attr/t.acctqAllsales_attr
	        else null end totalSharesChanges<!-- 系别总份额变化（列表最后一行total） -->
	  from total_table l
	  left join attr_table t
	    on l.fsort = t.fsort
	   and l.sub_model_id = t.sub_model_id
	 order by l.fsort, l.sort_num
)        
select fsort,
	       segment,
	       case
	         when accBqTotalMix is not null then
	          to_char(accBqTotalMix*100,'fm99999999990.0')
	         else
	          '-'
	       end accBqTotalMix,<!-- 本期总览区间mix -->
	       case
	         when accTqTotalMix is not null then
	          to_char(accTqTotalMix*100,'fm99999999990.0')
	         else
	          '-'
	       end accTqTotalMix,<!-- 同期总览区间mix -->
	       case
	         when actrueBqSales is not null then
	          to_char(actrueBqSales,'fm99999999990')
	         else
	          '-'
	       end actrueBqSales,<!-- 本期实际区间销量 -->
	       case
	         when actrueTqSales is not null then
	          to_char(actrueTqSales,'fm99999999990')
	         else
	          '-'
	       end actrueTqSales,<!-- 同期实际区间销量 -->
	       case
	         when accbqsales is not null then
	          to_char(accbqsales,'fm99999999990')
	         else
	          '-'
	       end accbqsales,<!-- 本期实际总销量 -->
	       case
	         when acctqsales is not null then
	          to_char(acctqsales,'fm99999999990')
	         else
	          '-'
	       end acctqsales,<!-- 同期实际总销量 -->
	       case
	         when yoy is not null then
	          to_char(yoy*100,'fm99999999990.0')
	         else
	          '-'
	       end yoy,<!-- 本期区间销量增速 -->
	       case
	         when totalyoy is not null then
	          to_char(totalyoy*100,'fm99999999990.0')
	         else
	          '-'
	       end totalyoy,<!-- 本期销量总增速 -->
	       case
	         when mixChanges is not null then
	          to_char(mixChanges*100,'fm99999999990.0')
	         else
	          '-'
	       end mixChanges,<!-- 本期区间mix变化（总变化一定为0，总mix一定为1） -->
	       attributeId,<!-- 系别id -->
	       attributeName,<!-- 系别名称 -->
	       case
	         when mix_attr is not null then
	          to_char(mix_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end mix_attr,<!-- 本期系别区间mix -->
	       case
	         when accTqTotalMix_attr is not null then
	          to_char(accTqTotalMix_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end accTqTotalMix_attr,<!-- 同期系别区间mix -->
	       case
	         when sales_attr is not null then
	          to_char(sales_attr,'fm99999999990')
	         else
	          '-'
	       end sales_attr,<!-- 本期系别区间实际总销量（放大后） -->
	       case
	         when actrueTqSales_attr is not null then
	          to_char(actrueTqSales_attr,'fm99999999990')
	         else
	          '-'
	       end actrueTqSales_attr,<!-- 同期系别区间实际总销量（放大后） -->
	       case
	         when totalSales_attr is not null then
	          to_char(totalSales_attr,'fm99999999990')
	         else
	          '-'
	       end totalSales_attr,<!-- 本期系别总销量 -->
	       case
	         when acctqsales_attr is not null then
	          to_char(acctqsales_attr,'fm99999999990')
	         else
	          '-'
	       end acctqsales_attr,<!-- 同期系别总销量 -->
	       case
	         when salesChange_attr is not null then
	          to_char(salesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end salesChange_attr,<!-- 系别区间销量增速 -->
	       case
	         when totalSalesChange_attr is not null then
	          to_char(totalSalesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end totalSalesChange_attr,<!-- 系别总销量增速（最后一行的total） -->
	       case
	         when mixChange_attr is not null then
	          to_char(mixChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end mixChange_attr,<!-- 系别区间mix变化 -->
	       case
	         when salesChanges is not null then
	          to_char(salesChanges,'fm99999999990')
	         else
	          '-'
	       end salesChanges,<!-- 系别销量变化（没用到） -->
	       case
	         when shares_attr is not null then
	          to_char(shares_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end shares_attr,<!-- 系别区间份额 -->
	       case
	         when sharesChange_attr is not null then
	          to_char(sharesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end sharesChange_attr,<!-- 系别区间份额变化 -->
	       case
	         when allMix_attr is not null then
	          to_char(allMix_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end allMix_attr,<!-- 本期系别区间totalmix（列表最后一列total） -->
	       case
	         when accTqAllMix_attr is not null then
	          to_char(accTqAllMix_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end accTqAllMix_attr,<!-- 本期系别区间totalmix（列表最后一列total） -->
	       case
	         when allSales_attr is not null then
	          to_char(allSales_attr,'fm99999999990')
	         else
	          '-'
	       end allSales_attr,<!-- 本期系别区间total总销量（最后一列） -->
	       case
	         when actrueTqAllSales_attr is not null then
	          to_char(actrueTqAllSales_attr,'fm99999999990')
	         else
	          '-'
	       end actrueTqAllSales_attr,<!-- 同期系别区间total总销量 -->
	       case
	         when accbqAllsales_attr is not null then
	          to_char(accbqAllsales_attr,'fm99999999990')
	         else
	          '-'
	       end accbqAllsales_attr,<!-- 本期所有选择系别总销量（一定小于等于列表前面的累计销量） -->
	       case
	         when acctqAllsales_attr is not null then
	          to_char(acctqAllsales_attr,'fm99999999990')
	         else
	          '-'
	       end acctqAllsales_attr,<!-- 同期所有选择系别总销量 -->
	       case
	         when allSalesChange_attr is not null then
	          to_char(allSalesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end allSalesChange_attr,<!-- 所选系别总的区间销量增速 -->
	       case
	         when totalAllyoy_attr is not null then
	          to_char(totalAllyoy_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end totalAllyoy_attr,<!-- 所选系别总的销量增速（最后一行、最后一列的total） -->
	       case
	         when allMixchange_attr is not null then
	          to_char(allMixchange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end allMixchange_attr,<!-- 所选系别 区间totalmix变化（列表最后一列total）-->
	       case
	         when salesAllChanges is not null then
	          to_char(salesAllChanges,'fm99999999990')
	         else
	          '-'
	       end salesAllChanges,<!-- 所选系别总销量变化（没用到） -->
	       case
	         when sharesAll is not null then
	          to_char(sharesAll*100,'fm99999999990.0')
	         else
	          '-'
	       end sharesAll,<!-- 所选系别区间总份额 （列表最后一列total）-->
	       case
	         when totalSharesChange_attr is not null then
	          to_char(totalSharesChange_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end totalSharesChange_attr,<!-- 所选系别区间总份额变化（列表最后一列total） -->
	       case
	         when totalShares_attr is not null then
	          to_char(totalShares_attr*100,'fm99999999990.0')
	         else
	          '-'
	       end totalShares_attr,<!-- 系别总的份额 （列表最后一行total）-->
	       case
	         when totalSharesChanges is not null then
	          to_char(totalSharesChanges*100,'fm99999999990.0')
	         else
	          '-'
	       end totalSharesChanges<!-- 系别总份额变化（列表最后一行total） -->
	       from lastestData 
</select>


<resultMap class="com.ways.app.module.entity.PriceSegmentOverview" id="versionDatas" groupBy="segment">
			 <result property="segment" column="segment" nullValue=""/> 
		    
	  		 <result property="list" resultMap="priceSalesAnalysis.modelDatas" /> 
	</resultMap>
	<resultMap class="com.ways.app.module.entity.DimensionDataEntity" id="modelDatas" groupBy="attributeId">
		<result property="attributeId" column="sub_model_id" nullValue=""/> 
		<result property="attributeName" column="sub_model_name" nullValue=""/> 
	  	<result property="list" resultMap="priceSalesAnalysis.saleDatas" />
	</resultMap>
	<resultMap class="com.ways.app.module.entity.AttributeChangeDataEntity" id="saleDatas">
		 <result property="sales" column="regionSales" nullValue=""/> 
  		 <result property="mix" column="mix" nullValue=""/>
  		 <result property="totalSales" column="totalSales" nullValue=""/> 
  		 <result property="versionId" column="version_id" nullValue=""/> 
  		 <result property="versionName" column="version_name" nullValue=""/> 
	</resultMap>

<!-- 型号 -->
<select id="getVersionModelData" parameterClass="java.util.HashMap" resultMap="versionDatas">
	<!-- 价格区间  -->
with left_table as
 (
	$leftSegmentSql$
 ),
model_ids as (
   select sub_model_id,sub_model_name from dm_sub_model where sub_model_id in ($subModelIds$)<!-- 2850,3390 -->
),    
left_table2 as (
	select distinct l.segment,l.fsort,o.sub_model_id,
	case when o.poo_attribute_id = 1 then 	
  	 	o.sub_model_name || '(进口)'
  	    else o.sub_model_name end sub_model_name
  	, row_number() over(partition by l.fsort order by instr(#subModelIds_sort#,(','||o.sub_model_id||','))) sort_num
	  from left_table l left join dm_sub_model o
	  on 1=1
	  where o.sub_model_id in ($subModelIds$)
  <!-- select * from left_table left join model_ids on 1=1 -->
),
subModeltotalSale as (<!-- 各车型总销量-->
    select sum(t.bq_sales) / $monthNum$ totalSales,t.sub_model_id
    from <include refid="mixTableSql" /> t
    left join dm_sub_model m
    on t.sub_model_id = m.sub_model_id
    <isNotEmpty property="modelYear">
       left join dm_version v
       on t.version_id = v.version_id
    </isNotEmpty>

  	<include refid="tableSql"/>
   	where 
   	t.ym between $startYm$ and $endYm$
   	and t.sub_model_id in ($subModelIds$)
   	<isNotEmpty property="modelYear">
       and v.model_year in ($modelYear$)
    </isNotEmpty>
    <include refid="paramSql"/>
   
     group by t.sub_model_id
),  
left_total_table as
 (select l.*, s.totalSales
    from left_table2 l
    left join subModeltotalSale s
      on l.sub_model_id = s.sub_model_id),
<!-- 型号区间销量 -->
modelRegionSales as (
	select 
     	$priceSegmentSql$
      fsort,sum(t.bq_sales) / $monthNum$ regionSales,
         t.version_id,
         v.version_name,
         t.sub_model_id
         from <include refid="mixTableSql" /> t 
         left join DM_SUB_MODEL m      
         on t.sub_model_id = m.sub_model_id
         left join dm_version v 
         on t.version_id = v.version_id
         
         <include refid="tableSql"/>
         where t.ym between $startYm$ and $endYm$
         <include refid="paramSql"/>
         and m.sub_model_id in ($subModelIds$) 
         <isNotEmpty property="modelYear">
	       and v.model_year in ($modelYear$)
	    </isNotEmpty>
	    
         <!-- and t.bq_sales is not null -->
         group by 
          $priceSegmentSql$
         ,t.version_id,
         v.version_name,
         t.sub_model_id  
         order by fsort
),
mixModel as (<!-- 合并价格区间与子车型区间销量与子车型总销量 -->
         select l.fsort,
         		l.segment,
         		l.sub_model_id,
         		l.sub_model_name,
         		l.totalSales,
         		l.sort_num,
         		r.regionSales,
         		case when l.totalSales is not null and l.totalSales !=0
         			then r.regionSales / l.totalSales else null end mix,
         		r.version_id,
         		r.version_name	
         	from left_total_table l 
         	left join modelRegionSales r
         	on l.fsort = r.fsort
         	and l.sub_model_id = r.sub_model_id
         
)
select fsort, 
	   segment,
	   sub_model_id,
	   sub_model_name,
	   case
         when mix is not null then
          to_char(mix*100,'fm99999999990.0')
         else
          '-'
       end mix,
       case
         when regionSales is not null then
          to_char(regionSales,'fm99999999990')
         else
          '-'
       end regionSales,
       case
         when totalSales is not null then
          to_char(totalSales,'fm99999999990')
         else
          '-'
       end totalSales,
	   version_id,
	   case
         when version_name is not null then
          to_char(version_name)
         else
          '-'
       end version_name
	    
	from mixModel order by fsort, sort_num, version_id

</select>

<!-- 根据子车型获取年款数据 -->
<select id="getYearModel" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select distinct v.model_year modelYear
    from FDM_VERSION_INSURANCE_MIX_SP t
    left join dm_version v
      on t.sub_model_id = v.sub_model_id
   where t.sub_model_id in ($subModelIds$)
     and t.ym between $startYm$ and $endYm$
     order by v.model_year desc
</select>
</sqlMap>